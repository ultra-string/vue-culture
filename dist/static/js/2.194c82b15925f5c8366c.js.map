{"version":3,"sources":["webpack:///./node_modules/xhr/index.js","webpack:///src/components/cm-share.vue","webpack:///./src/components/cm-share.vue?403c","webpack:///./src/components/cm-share.vue","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///src/components/cm-comment.vue","webpack:///./src/components/cm-comment.vue?039f","webpack:///./src/components/cm-comment.vue","webpack:///src/components/sections/st-comment.vue","webpack:///./src/components/sections/st-comment.vue?7d1f","webpack:///./src/components/sections/st-comment.vue","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///src/containers/Details.vue","webpack:///./src/containers/Details.vue?9da0","webpack:///./src/containers/Details.vue","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///./node_modules/global/document.js","webpack:///./node_modules/vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/xtend/immutable.js","webpack:///src/components/cm-video-player.vue","webpack:///./src/components/cm-video-player.vue?0961","webpack:///./src/components/cm-video-player.vue","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/vue-video-player/node_modules/video.js/dist/video.cjs.js","webpack:///./node_modules/tsml/tsml.js"],"names":["window","__webpack_require__","isFunction","parseHeaders","xtend","initParams","uri","options","callback","params","createXHR","_createXHR","Error","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","e","getBody","method","headers","url","rawRequest","getAllResponseHeaders","key","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","obj","i","isEmpty","beforeSend","send","module","exports","array","iterator","length","forEachArray","toUpperCase","cm_share","String","bodyTitle","summary","s","components_cm_share","render","this","$createElement","_self","_c","_m","staticRenderFns","_h","staticClass","attrs","data-tag","href","data-cmd","title","_v","Component","normalizeComponent","ssrContext","__webpack_exports__","scrollSetting","","up","isValidPercentValue","value","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","Object","defineProperties","width","enumerable","get","set","lines","TypeError","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","toLowerCase","findScrollSetting","SyntaxError","reviver","error","cm_comment","Number","Boolean","CmFootNav","cm_foot_nav","components_cm_comment","_vm","ref","_s","userName","commentContent","_f","createTime","src_components_cm_comment","st_comment","CmComment","CmChangePage","cm_change_page","CmShare","initFn","query","_this","id","bodyId","then","res","list","_this2","val","_this3","page","pageNo","sections_st_comment","resData","total","staticStyle","margin-right","placeholder","name","cols","rows","on","click","postCommentFn","_l","item","k","comment","lastBorder","dataList","pageNum","changePageFn","st_comment_Component","st_comment_normalizeComponent","context","arguments","toString","call","len","string","charAt","forEachString","object","forEachObject","prototype","str","replace","left","right","fn","alert","confirm","prompt","autoKeyword","directionSetting","lr","rl","alignSetting","start","middle","end","findAlignSetting","extend","cobj","p","VTTCue","startTime","endTime","text","cue","isIE8","test","navigator","userAgent","baseObj","document","createElement","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperty","findDirectionSetting","displayState","getCueAsHTML","WebVTT","convertCueToDOMTree","global","win","self","CmBradcrumb","cm_breadcrumb","CmVideoPlayer","cm_video_player","StComment","threeTitle","fullPath","oneTitleId","detialMsg","relatedBodys","currentTitles","index","oneTitle","twoTitle","twoTitleId","containers_Details","margin","lineHeight","fontSize","_e","author","articleSource","src","videoUrl","height","imgUrl","frontViewUrl","text-align","videoPresentation","domProps","innerHTML","wordArr","$event","toDetail","Details","vttjs","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","o","ParsingError","errorData","message","parseTimeStamp","input","computeSeconds","h","m","f","match","Settings","values","parseOptions","keyValueDelim","groupDelim","groups","split","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","settings","v","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","size","align","position","positionAlign","consumeCueSettings","constructor","BadSignature","dflt","defaultKey","has","a","n","parseInt","parseFloat","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","c","b","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","result","unescape1","unescape","shouldAdd","current","element","localName","type","annotation","tagName","trim","t","rootDiv","tagStack","appendChild","createTextNode","pop","parentNode","node","createProcessingInstruction","className","push","strongRTLRanges","isStrongRTLChar","charCode","currentRange","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","cueDiv","styles","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","direction","nodeStack","childNodes","pushNodes","nextTextNode","textContent","innerText","charCodeAt","determineBidi","stylesunicodeBidi","textPos","formatStyle","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","Math","max","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","track","textTrackList","mediaElement","trackList","count","mode","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","prop","style","unit","toMove","overlaps","b2","boxes","container","min","reference","getSimpleBoxPosition","StringDecoder","decode","decodeURIComponent","encodeURIComponent","cuetext","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","shouldCompute","Parser","decoder","state","buffer","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","onregion","parseRegion","stream","alreadyCollectedLine","indexOf","hasSubstring","oncue","flush","onflush","doccy","topLevel","minDoc","r","l","d","configurable","__esModule","default","videojs","assign","writable","props","crossOrigin","playsinline","customEventName","required","events","Array","globalOptions","controls","controlBar","remainingTimeDisplay","playToggle","progressControl","fullscreenToggle","volumeMenuButton","inline","techOrder","plugins","globalEvents","player","reseted","mounted","initialize","beforeDestroy","dispose","methods","$refs","video","setAttribute","$emit","__ob__","concat","currentTime","techName_","pause","$nextTick","watch","deep","handler","sources","install","videoPlayer","component","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","beforeCreate","_injectStyles","esModule","target","source","vue_video_player","components_cm_video_player","playerOptions","ready","playerReadied","forEach","row","arg","slice","_interopDefault","ex","tsml","safeParseTuple","vtt","version","USER_AGENT","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","browser","freeze","_typeof","Symbol","classCallCheck","instance","Constructor","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","taggedTemplateLiteralLoose","strings","raw","keys","isObject","each","_len","_key","apply","isPlain","log","level","history","logByType","args","lvl","levels","lvlRegExp","RegExp","unshift","console","info","map","isArray","x","join","all","off","debug","warn","DEFAULT","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","computedStyle","el","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","throwIfWhitespace","isEl","nodeType","isInFrame","createQuerier","selector","querySelector","ctx","createEl","properties","attributes","content","getOwnPropertyNames","propName","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classList","contains","addClass","classToAdd","removeClass","classToRemove","remove","filter","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","event","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","y","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","opts","addEventListener","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","_later","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","mergeOptions","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","silencePromise","trackToJson_","reduce","acc","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","addToBody","host","protocol","details","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","errors","groupCollapsed","groupEnd","loadTrack","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","srclang","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","floor","gm","gh","isNaN","Infinity","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this8","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this9","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this10","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this11","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","subClassMethods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","clean","sa"],"mappings":"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","file":"static/js/2.194c82b15925f5c8366c.js","sourcesContent":["\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 2 3","<template>\r\n    <div class=\"cm-share\">\r\n        <!-- Baidu Button BEGIN -->\r\n        <!-- //在页面中加入文字式分享按钮 -->\r\n        <!-- <div id=\"bdshare\" class=\"bdshare_t bds_tools get-codes-bdshare\">\r\n            <a class=\"bds_qzone\">QQ空间</a>\r\n            <a class=\"bds_tsina\">新浪微博</a>\r\n            <a class=\"bds_tqq\">腾讯微博</a>\r\n            <a class=\"bds_renren\">人人网</a>\r\n            <a class=\"bds_weixin\">微信</a>\r\n            //<span class=\"bds_more\">更多</span>\r\n        </div> -->\r\n        <div class=\"bdsharebuttonbox\" data-tag=\"share_0\">\r\n            <a href=\"javascript:void(0)\" class=\"bds_weixin\" data-cmd=\"weixin\" title=\"分享到微信\">微信</a>\r\n            <a href=\"javascript:void(0)\" class=\"bds_qzone\" data-cmd=\"qzone\" title=\"分享到qq空间\">qq空间</a>\r\n            <a href=\"javascript:void(0)\" class=\"bds_tsina\" data-cmd=\"tsina\" title=\"分享到新浪\">新浪</a>\r\n            <a href=\"javascript:void(0)\" class=\"bds_renren\" data-cmd=\"renren\" title=\"分享到人人\">人人</a>\r\n        </div>\r\n        <!-- //加入另一个按钮式分享按钮 -->\r\n        <!-- <div id=\"bdshare\" class=\"bdshare_b\"><img src=\"images/type-button-1.jpg\" /></div> -->\r\n        <!-- <div class=\"bdsharebuttonbox\">\r\n            <a href=\"#\" class=\"bds_more\" data-cmd=\"more\"></a>\r\n            <a href=\"#\" class=\"bds_qzone\" data-cmd=\"qzone\"></a>\r\n            <a href=\"#\" class=\"bds_tsina\" data-cmd=\"tsina\"></a>\r\n            <a href=\"#\" class=\"bds_tqq\" data-cmd=\"tqq\"></a>\r\n            <a href=\"#\" class=\"bds_renren\" data-cmd=\"renren\"></a>\r\n            <a href=\"#\" class=\"bds_weixin\" data-cmd=\"weixin\"></a>\r\n        </div> -->\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"CmShare\",\r\n  data() {\r\n    return {};\r\n  },\r\n  props : {\r\n    bodyTitle : {\r\n        type : String,\r\n        default : '',\r\n    },\r\n    summary : {\r\n        type : String,\r\n        default : '',\r\n    }\r\n  },\r\n  mounted() {\r\n    //获取不到？\r\n    // document.getElementById(\"bdshell_js\").src =\r\n    //   \"http://bdimg.share.baidu.com/static/js/shell_v2.js?cdnversion=\" +\r\n    //   Math.ceil(new Date() / 3600000);\r\n\r\n    let _this = this;\r\n    this.$nextTick(function () {\r\n        window._bd_share_config = {\r\n            common : {\r\n                bdText : this.bodyTitle,\r\n                bdDesc : this.summary,\r\n                bdUrl : window.location.href + '',\r\n            },\r\n            share : [{\r\n                tag:\"share_0\",\r\n                bdSize : 24\r\n            }],\r\n        };\r\n        const s = document.createElement('script');\r\n        s.type = 'text/javascript';\r\n        s.src = 'http://bdimg.share.baidu.com/static/api/js/share.js?v=89860593.js?cdnversion=' + Math.ceil(new Date() / 3600000);\r\n        document.body.appendChild(s);\r\n    })\r\n  }\r\n};\r\n</script>\r\n\r\n<style>\r\n.cm-share {\r\n  width: 100%;\r\n  line-height: 100%;\r\n  height: 100%;\r\n  margin-top: 15px;\r\n  .bdshare_t {\r\n    width: 100%;\r\n    a {\r\n      margin-top: 10px;\r\n      display: block;\r\n    }\r\n  }\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/cm-share.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _vm._m(0)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cm-share\"},[_c('div',{staticClass:\"bdsharebuttonbox\",attrs:{\"data-tag\":\"share_0\"}},[_c('a',{staticClass:\"bds_weixin\",attrs:{\"href\":\"javascript:void(0)\",\"data-cmd\":\"weixin\",\"title\":\"分享到微信\"}},[_vm._v(\"微信\")]),_vm._v(\" \"),_c('a',{staticClass:\"bds_qzone\",attrs:{\"href\":\"javascript:void(0)\",\"data-cmd\":\"qzone\",\"title\":\"分享到qq空间\"}},[_vm._v(\"qq空间\")]),_vm._v(\" \"),_c('a',{staticClass:\"bds_tsina\",attrs:{\"href\":\"javascript:void(0)\",\"data-cmd\":\"tsina\",\"title\":\"分享到新浪\"}},[_vm._v(\"新浪\")]),_vm._v(\" \"),_c('a',{staticClass:\"bds_renren\",attrs:{\"href\":\"javascript:void(0)\",\"data-cmd\":\"renren\",\"title\":\"分享到人人\"}},[_vm._v(\"人人\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-587c9abe\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/cm-share.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-587c9abe\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cm-share.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-share.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-share.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-587c9abe\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./cm-share.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/cm-share.vue\n// module id = null\n// module chunks = ","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 2 3","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 2 3","<template>\r\n    <div class=\"cm-comment\" ref=\"comment\">\r\n        <p class=\"userName\">{{userName}}</p>\r\n        <p class=\"commentContent\">{{commentContent}}</p>\r\n        <div class=\"foot-fn clearfix\">\r\n            <p class=\"commentDate fl\">{{createTime | getTimeMD}}</p>\r\n            <!-- <cm-foot-nav\r\n                class=\"fr\"\r\n                :listArr=\"listArr\"\r\n                \r\n            ></cm-foot-nav> -->\r\n        </div>\r\n    </div>\r\n</template>\r\n<script>\r\nimport CmFootNav from '@/components/cm-foot-nav';\r\n\r\nexport default{\r\n    name : \"CmComment\",\r\n    data(){\r\n        return {\r\n            listArr : [\r\n                {\r\n                    name : '转发',\r\n                    path : '',\r\n                    style : {\r\n                        padding : '0 4px',\r\n                        borderRight : '1px solid #99c9e2',\r\n                        fontSize : '14px',\r\n                        height : '14px',\r\n                        lineHeight : '14px',\r\n                        marginTop : '6px',\r\n                        color : '#99c9e2'\r\n                    },\r\n                    isClick : false,\r\n                    clickClass : '',\r\n                    color : '#eeeeee',\r\n                },\r\n                {\r\n                    name : '收藏',\r\n                    path : '',\r\n                    style : {\r\n                        padding : '0 4px',\r\n                        borderRight : '1px solid #99c9e2',\r\n                        fontSize : '14px',\r\n                        height : '14px',\r\n                        lineHeight : '14px',\r\n                        marginTop : '6px',\r\n                        color : '#99c9e2'\r\n                    },\r\n                    isClick : false,\r\n                    clickClass : '',\r\n                    color : '#eeeeee',\r\n                },\r\n                {\r\n                    name : '评论',\r\n                    path : '',\r\n                    style : {\r\n                        padding : '0 4px',\r\n                        fontSize : '14px',\r\n                        height : '14px',\r\n                        lineHeight : '14px',\r\n                        marginTop : '6px',\r\n                        color : '#99c9e2'\r\n                    },\r\n                    isClick : false,\r\n                    clickClass : '',\r\n                    color : '#eeeeee',\r\n                },\r\n                \r\n            ],\r\n            pageNo : '1',\r\n            pageSize : '1',\r\n            comment : 'sdfsfd',\r\n            bodyId :'12',\r\n            id : '1'\r\n        }\r\n    },\r\n    props : {\r\n        userName : {\r\n            type : String,\r\n            default : '用户昵称'\r\n        },\r\n        commentContent : {\r\n            type : String,\r\n            default : '输入评论输入评论输入评论输入评论输入评论输入评论输入评论输入评论！！！！'\r\n        },\r\n        createTime : {\r\n            type : Number,\r\n            default : 1526460237434\r\n        },\r\n        isGoodNav : {\r\n            type : Boolean,\r\n            default : false\r\n        },\r\n        lastBorder : {\r\n            type : Boolean,\r\n            default : false\r\n        }\r\n    },\r\n    components : {\r\n        CmFootNav,\r\n    },\r\n    mounted (){\r\n        //查询\r\n        // var str = '/commentSearch&' + this.pageNo + '&' + this.pageSize\r\n        // this.$post(str).then(res => {\r\n        //     console.log(res)\r\n        // })\r\n        // // 发布\r\n        // var str = '/commentPublish&' + this.comment + '&' + this.bodyId;\r\n        // this.$post(str).then(res => {\r\n        //     console.log(res)\r\n        // })\r\n        // // 删除  \r\n        // var str = '/commentDelete&' + this.id;\r\n        // this.$post(str).then(res => {\r\n        //     console.log(res)\r\n        // })\r\n        //获取登录信息\r\n        // this.$get('/user').then(res => {\r\n        //     console.log(res);\r\n        // })\r\n        // if(this.lastBorder){\r\n        //     this.$refs.comment.style.borderBottom = \"none\";\r\n        // }\r\n    }\r\n}\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n.cm-comment{\r\n    width : 100%;\r\n    margin : 0 auto;\r\n    border-bottom : 1px dashed #acacac;\r\n    padding-top : 24px;\r\n    text-align : left;\r\n    \r\n    .userName{\r\n        width : 100%;\r\n        color : #c26b65;\r\n        font-size : 16px;\r\n        line-height : 32px;\r\n        height : 32px;\r\n        margin-bottom : 6px;\r\n    }\r\n\r\n    .commentContent{\r\n        width : 100%;\r\n        line-height : 20px;\r\n        color : #959595;\r\n        font-size : 14px;\r\n        margin-bottom : 6px;\r\n    }\r\n\r\n    .foot-fn{\r\n        width : 100%;\r\n        height : 20px;\r\n        line-height : 20px;\r\n        color : #959595;\r\n        font-size : 12px;\r\n        margin-bottom : 10px;\r\n    }\r\n}\r\n</style>\r\n\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/cm-comment.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{ref:\"comment\",staticClass:\"cm-comment\"},[_c('p',{staticClass:\"userName\"},[_vm._v(_vm._s(_vm.userName))]),_vm._v(\" \"),_c('p',{staticClass:\"commentContent\"},[_vm._v(_vm._s(_vm.commentContent))]),_vm._v(\" \"),_c('div',{staticClass:\"foot-fn clearfix\"},[_c('p',{staticClass:\"commentDate fl\"},[_vm._v(_vm._s(_vm._f(\"getTimeMD\")(_vm.createTime)))])])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-5fc3a054\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/cm-comment.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-5fc3a054\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"C:\\\\\\\\Users\\\\\\\\chao\\\\\\\\Desktop\\\\\\\\guanwang\\\\\\\\os-ui\\\\\\\\src\\\\\\\\common\\\\\\\\scss\\\\\\\\index.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cm-comment.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-comment.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-comment.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-5fc3a054\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./cm-comment.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-5fc3a054\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/cm-comment.vue\n// module id = null\n// module chunks = ","<template>\r\n  <div class=\"st-comment\">\r\n    <div class=\"choose-content clearfix\">\r\n      <ul class=\"fl left-content clearfix\">\r\n        <!-- <li class=\"clearfix\">\r\n          <i>阅读 &nbsp()&nbsp</i>\r\n          <span></span>\r\n        </li> -->\r\n        <li class=\"clearfix fl\">\r\n          <i>评论 &nbsp({{resData.total}})&nbsp</i>\r\n        </li>\r\n        <li style=\"width: 292px; margin-right: -2px;\" class=\"fr\">\r\n          <cm-share\r\n            :bodyTitle=\"bodyTitle\"\r\n            :summary=\"summary\"\r\n          ></cm-share>\r\n        </li>\r\n        <!-- <li class=\"clearfix\">\r\n          <i>收藏 &nbsp()&nbsp</i>\r\n          <span></span>\r\n        </li>\r\n        <li class=\"clearfix\">\r\n          <i>转载 &nbsp()&nbsp</i>\r\n        </li> -->\r\n      </ul>\r\n    </div>\r\n    <div class=\"content\">\r\n      <div class=\"text-content\">\r\n        <div class=\"text-content-title\">\r\n          <p>评论</p>\r\n        </div>\r\n        <textarea class=\"text-content-box\" placeholder=\"请输入评论....\" name=\"\" id=\"note\" cols=\"30\" rows=\"10\"></textarea>\r\n        <div class=\"text-content-btn clearfix\">\r\n          <div class=\"post-btn fr\" @click=\"postCommentFn\">发布</div>\r\n          <!-- <div class=\"login-nav fr clearfix\">\r\n            <span class=\"login-btn fl\">登录</span>\r\n            <i class=\"fl\"></i>\r\n            <span class=\"login-btn fl\">注册</span>\r\n          </div> -->\r\n        </div>\r\n      </div>\r\n      <div class=\"show-content-title\">\r\n        <div class=\"show-content-in clearfix\">\r\n          <p class=\"fl show-content-in-name\">最新评论</p>\r\n          <p class=\"fr show-content-in-prompt\">重要提示：警惕虚假信息</p>\r\n        </div>\r\n      </div>\r\n      <div class=\"cm-box-comment\">\r\n        <cm-comment \r\n            v-for=\"(item , k) in dataList\"\r\n            :key='k' \r\n            :userName=\"item.userName\" \r\n            :commentContent=\"item.comment\" \r\n            :createTime=\"item.createTime\" \r\n            :lastBorder=\"k==dataList.length-1?true:false\"\r\n        ></cm-comment>\r\n      </div>\r\n      <cm-change-page\r\n        :pageNum=\"resData.pageNum\"\r\n        :data=\"resData\"\r\n        @changePageFn=\"changePageFn\"\r\n      ></cm-change-page>\r\n    </div>\r\n  </div>\r\n</template>\r\n<script>\r\n  import CmComment from '@/components/cm-comment';\r\n  import CmChangePage from '@/components/cm-change-page';\r\n  import CmShare from '@/components/cm-share';\r\n\r\n  export default {\r\n    name: 'StComment',\r\n    data() {\r\n      return {\r\n        commentData: [],\r\n        dataList : [],\r\n        resData : {},\r\n      }\r\n    },\r\n    components: {\r\n      CmComment,\r\n      CmChangePage,\r\n      CmShare\r\n    },\r\n    created() {\r\n        this.initFn();\r\n    },\r\n    props : {\r\n      id : {\r\n        type : Number,\r\n        default : 0\r\n      },\r\n      bodyTitle : {\r\n          type : String,\r\n          default : '',\r\n      },\r\n      summary : {\r\n          type : String,\r\n          default : '',\r\n      }\r\n    },\r\n    watch: {  \r\n        '$route' (to, from) {  \r\n            console.log(this.$route.query) \r\n            if(to.fullPath != from.fullPath){\r\n                this.initFn();\r\n            } \r\n        }  \r\n    },\r\n    methods : {\r\n      initFn : function(){\r\n        this.params = this.$route.query;\r\n        this.bodyId = this.params.id;\r\n        this.$post('/commentSearch' , {\r\n            \"pageNo\" : 1,\r\n            \"pageSize\" : 10,\r\n            \"bodyId\" : this.bodyId\r\n        }).then(res => {\r\n            console.log(res);\r\n            this.dataList = res.data.list;\r\n            this.resData = res.data;\r\n        })\r\n      },\r\n      postCommentFn : function(){\r\n        let val = note.value;\r\n          // 发布\r\n          this.$post('/commentPublish' , {\r\n              \"bodyId\": this.params.id,\r\n              \"comment\": val\r\n          }).then(res => {\r\n              console.log(res)\r\n              note.value = '';//清空评论\r\n              this.changePageFn(1);\r\n          })\r\n          // 删除  \r\n          // var str = '/commentDelete&' + this.id;\r\n          // this.$post(str).then(res => {\r\n          //     console.log(res)\r\n          // })\r\n      },\r\n      changePageFn : function(page){\r\n        //pageNo:第几页\r\n        let pageNo = page;\r\n        //pageSize:一页几条数据\r\n        let pageSize = 10;\r\n        this.$post('/commentSearch', {\r\n          \"bodyId\": this.params.id,\r\n          \"pageNo\": pageNo,\r\n          \"pageSize\": pageSize\r\n        }).then(res => {\r\n          console.log(res);\r\n            this.resData = res.data;\r\n            this.dataList = res.data.list;\r\n            // console.log(this.dataList)\r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n</script>\r\n<style lang=\"scss\" scoped>\r\n  .st-comment {\r\n    width: 100%;\r\n    margin: 66px auto 0;\r\n    /* border-top : 2px solid #f4f3f1; */\r\n    .choose-content {\r\n      width :100%;\r\n      height: 58px;\r\n      line-height: 58px;\r\n      margin-bottom: 18px;\r\n\r\n      .left-content {\r\n        width : 100%;\r\n        span,\r\n        i {\r\n          float: left;\r\n        }\r\n\r\n        i {\r\n          font-size: 16px;\r\n          color: #959595;\r\n          height: 58px;\r\n          line-height: 58px;\r\n        }\r\n\r\n        span {\r\n          background: #959595;\r\n          width: 2px;\r\n          height: 18px;\r\n          margin: 22px 10px 0;\r\n        }\r\n\r\n        li {\r\n          height: 58px;\r\n        }\r\n      }\r\n    }\r\n\r\n    .text-content {\r\n      width: 100%;\r\n\r\n      .text-content-title {\r\n        width: 100%;\r\n        background: #f4f3f1;\r\n        margin-bottom: 24px;\r\n\r\n        p {\r\n          padding-left: 16px;\r\n          height: 30px;\r\n          line-height: 30px;\r\n          color: #4e4e4e;\r\n          font-size: 16px;\r\n          font-weight: bold;\r\n        }\r\n      }\r\n\r\n      .text-content-box {\r\n        width: calc(100% - (20px + 44px));\r\n        width: -moz-calc(100% - (20px + 44px));\r\n        width: -webkit-calc(100% - (20px + 44px));\r\n        height: 148px;\r\n        border: 1px solid #e5e5e5;\r\n        padding: 16px 10px;\r\n        margin: 0 auto;\r\n        font-size: 14px;\r\n        line-height: 20px;\r\n        display: block;\r\n      }\r\n\r\n      .text-content-btn {\r\n        padding-right: 24px;\r\n        height: 80px;\r\n\r\n        .post-btn {\r\n          width: 84px;\r\n          height: 24px;\r\n          margin-top: 28px;\r\n          border-radius: 3px;\r\n          background: $font-hot;\r\n          color: $font-white;\r\n          text-align: center;\r\n        }\r\n        .login-nav {\r\n          line-height: 80px;\r\n          height: 80px;\r\n          margin-right: 30px;\r\n\r\n          i {\r\n            width: 2px;\r\n            height: 14px;\r\n            margin: 33px 10px 0;\r\n            background: #7d7d7d;\r\n          }\r\n\r\n          .login-btn {\r\n            font-size: 14px;\r\n            color: #7d7d7d;\r\n          }\r\n        }\r\n      }\r\n    }\r\n    .content {\r\n      width: 100%;\r\n      border: 1px solid #e5e5e5;\r\n      background: #fcfcfb;\r\n      padding-bottom : 10px;\r\n    }\r\n    .show-content-title {\r\n      width: 100%;\r\n      height: 48px;\r\n      background: #f4f3f1;\r\n\r\n      .show-content-in-name {\r\n        padding-left: 16px;\r\n        font-size: 16px;\r\n        line-height: 48px;\r\n        font-weight: bold;\r\n        color: #000;\r\n      }\r\n\r\n      .show-content-in-prompt {\r\n        padding-right: 20px;\r\n        font-size: 14px;\r\n        line-height: 48px;\r\n        color: #595959;\r\n      }\r\n    }\r\n    .cm-box-comment {\r\n      padding: 0 22px 10px;\r\n    }\r\n  }\r\n\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/sections/st-comment.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"st-comment\"},[_c('div',{staticClass:\"choose-content clearfix\"},[_c('ul',{staticClass:\"fl left-content clearfix\"},[_c('li',{staticClass:\"clearfix fl\"},[_c('i',[_vm._v(\"评论  (\"+_vm._s(_vm.resData.total)+\") \")])]),_vm._v(\" \"),_c('li',{staticClass:\"fr\",staticStyle:{\"width\":\"292px\",\"margin-right\":\"-2px\"}},[_c('cm-share',{attrs:{\"bodyTitle\":_vm.bodyTitle,\"summary\":_vm.summary}})],1)])]),_vm._v(\" \"),_c('div',{staticClass:\"content\"},[_c('div',{staticClass:\"text-content\"},[_vm._m(0),_vm._v(\" \"),_c('textarea',{staticClass:\"text-content-box\",attrs:{\"placeholder\":\"请输入评论....\",\"name\":\"\",\"id\":\"note\",\"cols\":\"30\",\"rows\":\"10\"}}),_vm._v(\" \"),_c('div',{staticClass:\"text-content-btn clearfix\"},[_c('div',{staticClass:\"post-btn fr\",on:{\"click\":_vm.postCommentFn}},[_vm._v(\"发布\")])])]),_vm._v(\" \"),_vm._m(1),_vm._v(\" \"),_c('div',{staticClass:\"cm-box-comment\"},_vm._l((_vm.dataList),function(item ,k){return _c('cm-comment',{key:k,attrs:{\"userName\":item.userName,\"commentContent\":item.comment,\"createTime\":item.createTime,\"lastBorder\":k==_vm.dataList.length-1?true:false}})})),_vm._v(\" \"),_c('cm-change-page',{attrs:{\"pageNum\":_vm.resData.pageNum,\"data\":_vm.resData},on:{\"changePageFn\":_vm.changePageFn}})],1)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"text-content-title\"},[_c('p',[_vm._v(\"评论\")])])},function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"show-content-title\"},[_c('div',{staticClass:\"show-content-in clearfix\"},[_c('p',{staticClass:\"fl show-content-in-name\"},[_vm._v(\"最新评论\")]),_vm._v(\" \"),_c('p',{staticClass:\"fr show-content-in-prompt\"},[_vm._v(\"重要提示：警惕虚假信息\")])])])}]\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-085a1797\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/sections/st-comment.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-085a1797\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"C:\\\\\\\\Users\\\\\\\\chao\\\\\\\\Desktop\\\\\\\\guanwang\\\\\\\\os-ui\\\\\\\\src\\\\\\\\common\\\\\\\\scss\\\\\\\\index.scss\\\"}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0!./st-comment.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./st-comment.vue\"\nimport __vue_script__ from \"!!babel-loader!../../../node_modules/vue-loader/lib/selector?type=script&index=0!./st-comment.vue\"\n/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-085a1797\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0!./st-comment.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-085a1797\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/sections/st-comment.vue\n// module id = null\n// module chunks = ","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 2 3","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trim/index.js\n// module id = QYuf\n// module chunks = 2 3","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 2 3","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 2 3","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 2 3","<template>\r\n    <div class=\"detail\">\r\n        <cm-bradcrumb\r\n        style=\"margin:18px 0;lineHeight: 45px;fontSize:19px\"\r\n        ref=\"breadcrumb\"\r\n        ></cm-bradcrumb>\r\n        <div class=\"news-detail\">\r\n            <h2>{{detialMsg.bodyTitle}}</h2>\r\n            <div class=\"detail-info clearfix\">\r\n                <div v-if=\"detialMsg.createTime\">\r\n                    {{detialMsg.createTime | getTimeYMD}}\r\n                </div>\r\n                <div v-if=\"detialMsg.author\">\r\n                    <span>作者：</span>\r\n                    <span>{{detialMsg.author}}</span>\r\n                </div>\r\n                <!-- <div v-if=\"detialMsg.keywords\">\r\n                    <span>关键字：</span>\r\n                    <span>{{detialMsg.keywords}}</span>\r\n                </div> -->\r\n                <div>\r\n                    <span>来源：</span>\r\n                    <span>{{detialMsg.articleSource}}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <div class=\"content clearfix\">\r\n            <div class=\"content-box fl\">\r\n                <cm-video-player\r\n                    v-if=\"detialMsg.videoUrl\"\r\n                    :src=\"detialMsg.videoUrl\"\r\n                    :width=\"'400px'\"\r\n                    :height=\"'300px'\"\r\n                    :imgUrl=\"detialMsg.frontViewUrl\"\r\n                    style=\"margin:'0 auto'\"\r\n                ></cm-video-player>\r\n                <div v-if=\"detialMsg.videoUrl\" style=\"text-align:center;\">{{detialMsg.videoPresentation}}</div>\r\n\r\n                <div v-html=\"detialMsg.body\"></div>\r\n            </div>\r\n            <div class=\"conent-adv fr\">\r\n                <h1>相关文章</h1>\r\n                <div v-if=\"wordArr && wordArr.length\" class=\"cm-news-list hand-point clearfix font-color\" v-for=\"(val, key) in wordArr\"\r\n                    :key=\"key\" @click=\"toDetail(val)\">\r\n                    <i class=\"fl\"></i>\r\n                    <h3 class=\"fl font-color\">{{val.bodyTitle}}</h3>\r\n                </div>\r\n            </div>\r\n        </div>\r\n        <st-comment\r\n            :bodyTitle=\"''\"\r\n            :summary=\"''\"\r\n        ></st-comment>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CmBradcrumb from '@/components/cm-breadcrumb';\r\nimport CmVideoPlayer from '@/components/cm-video-player';\r\nimport StComment from '@/components/sections/st-comment';\r\nimport CmShare from '@/components/cm-share'\r\n\r\nexport default {\r\n    name : 'Detail',\r\n    data (){\r\n        return {\r\n            detialMsg: {},\r\n            navTree: [{\r\n                name: '首页',\r\n                path: 'CultureNews',\r\n                url: '',\r\n                nowPage: false,\r\n                isOuter: false\r\n            },{\r\n                name: '文旅资讯',\r\n                path: 'CultureNews',\r\n                url: '',\r\n                nowPage: false,\r\n                isOuter: false\r\n            }],\r\n            params : '',\r\n            wordArr : [],\r\n            oneTitle : '',\r\n            twoTitle : '',\r\n            threeTitle : '',\r\n            bodyTitle : '',\r\n            summary : '',\r\n        }\r\n    },\r\n    components: {\r\n        CmBradcrumb,\r\n        CmVideoPlayer,\r\n        StComment,\r\n        CmShare\r\n    },\r\n    created() {\r\n        this.initFn();\r\n    },\r\n    mounted(){\r\n        this.$refs.breadcrumb.getTree(this.oneTitle,this.twoTitle,this.threeTitle);\r\n    },\r\n    watch: {  \r\n        '$route' (to, from) {  \r\n            console.log(this.$route.query) \r\n            if(to.fullPath != from.fullPath){\r\n                console.log(to.fullPath,from.fullPath)\r\n                this.initFn();\r\n            } \r\n        }  \r\n    },\r\n    methods : {\r\n        initFn : function(){\r\n            this.params = this.$route.query;\r\n            let params = this.params;\r\n            let id = params.id;\r\n            let oneTitleId = params.oneTitleId;\r\n            let twoTitleId = params.twoTitleId ? twoTitleId : '';\r\n            this.$get(`/body?id=${id}`)\r\n            .then( res => {\r\n                console.log(res.data)\r\n                this.detialMsg = Object.assign({}, res.data);\r\n                console.log('this.detialMsg====>>>>',this.detialMsg)\r\n                this.oneTitle = '';\r\n                this.twoTitle = '';\r\n                this.threeTitle = '';\r\n                this.wordArr = res.data.relatedBodys;\r\n                this.bodyTitle = res.data.bodyTitle;\r\n                this.summary = res.data.summary;\r\n                console.log(res.data.currentTitles)\r\n                res.data.currentTitles.forEach(function(item,index){\r\n                    switch(index){\r\n                        case 0:\r\n                        this.oneTitle = item;\r\n                        console.log(this.oneTitle)\r\n                        break;\r\n                        case 1:\r\n                        this.twoTitle = item;\r\n                        console.log(this.twoTitle)\r\n                        break;\r\n                        case 2:\r\n                        this.threeTitle = item;\r\n                        console.log(this.threeTitle)\r\n                        break;\r\n                    }\r\n                },this)\r\n                this.$refs.breadcrumb.getTree(this.oneTitle,this.twoTitle,this.threeTitle);\r\n                //test\r\n                // this.detialMsg.videoUrl = 'https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm';\r\n            })\r\n        },\r\n        //跳文章详情\r\n        toDetail: function (obj) {\r\n            this.$router.push({\r\n            query: {\r\n                oneTitleId: obj.oneTitleId,\r\n                twoTitleId: obj.twoTitleId,\r\n                id: obj.id\r\n            },\r\n            params: {\r\n                id: obj.id\r\n            },\r\n            name: 'Details',\r\n            });\r\n        }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.detail{\r\n    width : 1000px;\r\n    .news-detail{\r\n        h2{\r\n            line-height: 81px;\r\n            font-size: 32px;\r\n            font-weight:bold; \r\n            text-align: center;\r\n            border-bottom: 1px solid $color-border-input;\r\n        }\r\n        .detail-info{\r\n            line-height: 22px;\r\n            font-size: 12px;\r\n            border-bottom: 1px solid $color-border-input;\r\n            div {\r\n                float: left;\r\n                margin-right: 20px;\r\n            }\r\n        }\r\n    }\r\n    .content{\r\n        width : 100%;\r\n        margin-top : 24px;\r\n        .content-box{\r\n            width : 754px;\r\n        }\r\n        .conent-adv{\r\n            width : 208px;\r\n            // background : red;\r\n            h1{\r\n                font-size :22px;\r\n                color : $font-hot;\r\n                line-height : 30px;\r\n                border-bottom : 3px solid $font-hot;\r\n                margin-bottom : 10px;\r\n            }\r\n        }\r\n    }\r\n    .cm-news-list{\r\n        // width : 472px;\r\n        line-height : 34px;\r\n        // height : 34px;\r\n        i {\r\n            width: 6px;\r\n            height: 6px;\r\n            border-radius: 100%;\r\n            background: $font-hot;\r\n            margin: 15px 8px 0 0; \r\n        }\r\n        h3 {\r\n            vertical-align: top;\r\n            max-width: 90%;\r\n            @include nowrap-ellipsis;\r\n        }\r\n    }\r\n    .font-color{\r\n      color : #4c6f95;\r\n    }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/containers/Details.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"detail\"},[_c('cm-bradcrumb',{ref:\"breadcrumb\",staticStyle:{\"margin\":\"18px 0\",\"lineHeight\":\"45px\",\"fontSize\":\"19px\"}}),_vm._v(\" \"),_c('div',{staticClass:\"news-detail\"},[_c('h2',[_vm._v(_vm._s(_vm.detialMsg.bodyTitle))]),_vm._v(\" \"),_c('div',{staticClass:\"detail-info clearfix\"},[(_vm.detialMsg.createTime)?_c('div',[_vm._v(\"\\n                \"+_vm._s(_vm._f(\"getTimeYMD\")(_vm.detialMsg.createTime))+\"\\n            \")]):_vm._e(),_vm._v(\" \"),(_vm.detialMsg.author)?_c('div',[_c('span',[_vm._v(\"作者：\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.detialMsg.author))])]):_vm._e(),_vm._v(\" \"),_c('div',[_c('span',[_vm._v(\"来源：\")]),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.detialMsg.articleSource))])])])]),_vm._v(\" \"),_c('div',{staticClass:\"content clearfix\"},[_c('div',{staticClass:\"content-box fl\"},[(_vm.detialMsg.videoUrl)?_c('cm-video-player',{staticStyle:{\"margin\":\"'0 auto'\"},attrs:{\"src\":_vm.detialMsg.videoUrl,\"width\":'400px',\"height\":'300px',\"imgUrl\":_vm.detialMsg.frontViewUrl}}):_vm._e(),_vm._v(\" \"),(_vm.detialMsg.videoUrl)?_c('div',{staticStyle:{\"text-align\":\"center\"}},[_vm._v(_vm._s(_vm.detialMsg.videoPresentation))]):_vm._e(),_vm._v(\" \"),_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.detialMsg.body)}})],1),_vm._v(\" \"),_c('div',{staticClass:\"conent-adv fr\"},[_c('h1',[_vm._v(\"相关文章\")]),_vm._v(\" \"),_vm._l((_vm.wordArr),function(val,key){return (_vm.wordArr && _vm.wordArr.length)?_c('div',{key:key,staticClass:\"cm-news-list hand-point clearfix font-color\",on:{\"click\":function($event){_vm.toDetail(val)}}},[_c('i',{staticClass:\"fl\"}),_vm._v(\" \"),_c('h3',{staticClass:\"fl font-color\"},[_vm._v(_vm._s(val.bodyTitle))])]):_vm._e()})],2)]),_vm._v(\" \"),_c('st-comment',{attrs:{\"bodyTitle\":'',\"summary\":''}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-b192d08e\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/containers/Details.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-b192d08e\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"C:\\\\\\\\Users\\\\\\\\chao\\\\\\\\Desktop\\\\\\\\guanwang\\\\\\\\os-ui\\\\\\\\src\\\\\\\\common\\\\\\\\scss\\\\\\\\index.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./Details.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Details.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./Details.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-b192d08e\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./Details.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-b192d08e\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/Details.vue\n// module id = null\n// module chunks = ","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 2 3","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 2 3","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 2 3","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-video-player/dist/vue-video-player.js\n// module id = iqGf\n// module chunks = 2 3","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 2 3","<template>\r\n    <div class=\"cm-video-player\">\r\n        <!-- 我是播放器 -->\r\n          <video-player  class=\"video-player-box\"\r\n                        ref=\"videoPlayer\"\r\n                        :options=\"playerOptions\"\r\n                        :playsinline=\"true\"\r\n                        customEventName=\"customstatechangedeventname\"\r\n                        @ready=\"playerReadied\">\r\n        </video-player>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport 'video.js/dist/video-js.css'\r\nimport { videoPlayer } from 'vue-video-player'\r\n\r\nexport default {\r\n    name : 'CmVideoPlayer',\r\n    data (){\r\n        return {\r\n            playerOptions: {\r\n                // videojs options\r\n                muted: true,\r\n                language: 'en',\r\n                playbackRates: [0.7, 1.0, 1.5, 2.0],\r\n                sources: [{\r\n                    type: \"video/mp4\",\r\n                    src: ''\r\n                }],\r\n                // poster:require('./../common/images/demo.png'),\r\n                width : '100%'\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        videoPlayer\r\n    },\r\n    computed: {\r\n      player() {\r\n        return this.$refs.videoPlayer.player\r\n      }\r\n    },\r\n    props : {\r\n        src : {\r\n            type : String,\r\n            default : 'https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm'\r\n        },\r\n        width : {\r\n            type : String,\r\n            default : '100%'\r\n        },\r\n        height : {\r\n            type : String,\r\n            default : '100%'\r\n        },\r\n        imgUrl : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    created(){\r\n        this.playerOptions.sources[0].src = this.src;\r\n        this.playerOptions.width = this.width;\r\n        this.playerOptions.height = this.height;\r\n        this.playerOptions.poster = this.imgUrl;\r\n    },\r\n    methods: {\r\n      // listen event\r\n      onPlayerPlay(player) {\r\n        // console.log('player play!', player)\r\n      },\r\n      onPlayerPause(player) {\r\n        // console.log('player pause!', player)\r\n      },\r\n      // ...player event\r\n\r\n      // or listen state event\r\n      playerStateChanged(playerCurrentState) {\r\n        // console.log('player current update state', playerCurrentState)\r\n      },\r\n\r\n      // player is ready\r\n      playerReadied(player) {\r\n        console.log('the player is readied', player)\r\n        // you can use it to do something...\r\n        // player.[methods]\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n.video-js{\r\n    margin : 0 auto;\r\n    position: relative;\r\n}\r\n.video-js .vjs-big-play-button{\r\n    position : absolute;\r\n    top : 50% !important;\r\n    left : 50% !important;\r\n    /*transform: translate(-50%,-50%);*/\r\n    @include center;\r\n}\r\n.vjs_video_1-dimensions{\r\n    position: relative;\r\n}\r\n.cm-video-player{\r\n    width : 100%;\r\n    .video-player-box{\r\n        width : 100%;\r\n    }\r\n}\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/cm-video-player.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cm-video-player\"},[_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player-box\",attrs:{\"options\":_vm.playerOptions,\"playsinline\":true,\"customEventName\":\"customstatechangedeventname\"},on:{\"ready\":_vm.playerReadied}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3f265d78\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/cm-video-player.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3f265d78\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"C:\\\\\\\\Users\\\\\\\\chao\\\\\\\\Desktop\\\\\\\\guanwang\\\\\\\\os-ui\\\\\\\\src\\\\\\\\common\\\\\\\\scss\\\\\\\\index.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cm-video-player.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-video-player.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-video-player.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3f265d78\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./cm-video-player.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/cm-video-player.vue\n// module id = null\n// module chunks = ","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 2 3","/**\n * @license\n * Video.js 6.11.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.11.0\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\nvar logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!IE_VERSION && IE_VERSION < 11;\n\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window.console.info || window.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if (isObject(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  }\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this7.playWaitingForReady_ = false;\n        silencePromise(_this7.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this7.playOnLoadstart_ = null;\n        silencePromise(_this7.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this8 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this8.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this9 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this9.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this9.cache_.sources = sources;\n      _this9.updateSourceCaches_(middlewareSource);\n\n      var err = _this9.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this9.src(sources.slice(1));\n        }\n\n        _this9.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this9.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this9.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this9.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this10 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this10.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this11 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this11.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-video-player/node_modules/video.js/dist/video.cjs.js\n// module id = sM+K\n// module chunks = 2 3","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 2 3"],"sourceRoot":""}