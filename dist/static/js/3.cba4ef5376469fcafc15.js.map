{"version":3,"sources":["webpack:///./node_modules/xhr/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttregion.js","webpack:///./node_modules/safe-json-parse/tuple.js","webpack:///./node_modules/for-each/index.js","webpack:///./node_modules/trim/index.js","webpack:///./node_modules/is-function/index.js","webpack:///./node_modules/videojs-vtt.js/lib/vttcue.js","webpack:///./node_modules/global/window.js","webpack:///./node_modules/videojs-vtt.js/lib/browser-index.js","webpack:///./node_modules/videojs-vtt.js/lib/vtt.js","webpack:///src/containers/AboutUs.vue","webpack:///./src/containers/AboutUs.vue?7969","webpack:///./src/containers/AboutUs.vue","webpack:///./node_modules/global/document.js","webpack:///./node_modules/vue-video-player/dist/vue-video-player.js","webpack:///./node_modules/xtend/immutable.js","webpack:///src/components/cm-video-player.vue","webpack:///./src/components/cm-video-player.vue?0961","webpack:///./src/components/cm-video-player.vue","webpack:///./node_modules/parse-headers/parse-headers.js","webpack:///./node_modules/vue-video-player/node_modules/video.js/dist/video.cjs.js","webpack:///./node_modules/tsml/tsml.js"],"names":["window","__webpack_require__","isFunction","parseHeaders","xtend","initParams","uri","options","callback","params","createXHR","_createXHR","Error","called","err","response","body","errorFunc","evt","clearTimeout","timeoutTimer","statusCode","failureResponse","loadFunc","aborted","status","useXDR","undefined","xhr","responseText","responseType","responseXML","firefoxBugTakenEffect","documentElement","nodeName","getXml","isJson","JSON","parse","e","getBody","method","headers","url","rawRequest","getAllResponseHeaders","key","cors","XDomainRequest","XMLHttpRequest","data","sync","json","stringify","onreadystatechange","readyState","setTimeout","onload","onerror","onprogress","onabort","ontimeout","open","username","password","withCredentials","timeout","abort","code","setRequestHeader","hasOwnProperty","obj","i","isEmpty","beforeSend","send","module","exports","array","iterator","length","forEachArray","toUpperCase","scrollSetting","","up","isValidPercentValue","value","_width","_lines","_regionAnchorX","_regionAnchorY","_viewportAnchorX","_viewportAnchorY","_scroll","Object","defineProperties","this","width","enumerable","get","set","lines","TypeError","regionAnchorY","regionAnchorX","viewportAnchorY","viewportAnchorX","scroll","setting","toLowerCase","findScrollSetting","SyntaxError","reviver","error","list","context","arguments","toString","call","len","string","charAt","forEachString","object","k","forEachObject","prototype","str","replace","left","right","fn","alert","confirm","prompt","autoKeyword","directionSetting","lr","rl","alignSetting","start","middle","end","findAlignSetting","extend","cobj","p","VTTCue","startTime","endTime","text","cue","isIE8","test","navigator","userAgent","baseObj","document","createElement","hasBeenReset","_id","_pauseOnExit","_startTime","_endTime","_text","_region","_vertical","_snapToLines","_line","_lineAlign","_position","_positionAlign","_size","_align","defineProperty","findDirectionSetting","displayState","getCueAsHTML","WebVTT","convertCueToDOMTree","global","win","self","vttjs","VTTRegion","cueShim","regionShim","nativeVTTCue","nativeVTTRegion","shim","restore","_objCreate","create","F","o","ParsingError","errorData","message","name","parseTimeStamp","input","computeSeconds","h","m","s","f","match","Settings","values","parseOptions","keyValueDelim","groupDelim","groups","split","kv","parseCue","regionList","oInput","consumeTimeStamp","ts","Errors","BadTimeStamp","skipWhitespace","substr","settings","v","id","region","alt","vals","vals0","integer","percent","vertical","line","lineAlign","snapToLines","size","align","position","positionAlign","consumeCueSettings","constructor","BadSignature","dflt","defaultKey","has","a","n","parseInt","parseFloat","ESCAPE","&amp;","&lt;","&gt;","&lrm;","&rlm;","&nbsp;","TAG_NAME","c","b","u","ruby","rt","lang","TAG_ANNOTATION","NEEDS_PARENT","parseContent","nextToken","result","unescape1","unescape","shouldAdd","current","element","localName","type","annotation","tagName","trim","t","rootDiv","tagStack","appendChild","createTextNode","pop","parentNode","node","createProcessingInstruction","className","push","strongRTLRanges","isStrongRTLChar","charCode","currentRange","StyleBox","CueStyleBox","styleOptions","color","backgroundColor","cueDiv","styles","top","bottom","display","writingMode","unicodeBidi","applyStyles","div","textAlign","font","whiteSpace","direction","nodeStack","childNodes","pushNodes","nextTextNode","textContent","innerText","charCodeAt","determineBidi","stylesunicodeBidi","textPos","formatStyle","height","move","box","BoxPosition","lh","offsetHeight","offsetWidth","offsetTop","rects","getClientRects","getBoundingClientRect","Math","max","lineHeight","moveBoxToLinePosition","styleBox","containerBox","boxPositions","boxPosition","linePos","track","textTrackList","mediaElement","trackList","count","mode","computeLinePos","axis","step","round","maxPosition","initialAxis","abs","ceil","reverse","calculatedPercentage","bestPosition","specifiedPosition","percentage","overlapsOppositeAxis","within","overlapsAny","intersectPercentage","findBestPosition","toCSSCompatValues","prop","style","val","unit","toMove","overlaps","b2","boxes","container","min","reference","getSimpleBoxPosition","StringDecoder","decode","decodeURIComponent","encodeURIComponent","cuetext","processCues","cues","overlay","firstChild","removeChild","paddedOverlay","margin","shouldCompute","Parser","decoder","state","buffer","TextDecoder","reportOrThrowError","onparsingerror","collectNextLine","pos","parseHeader","ontimestampmap","MPEGTS","LOCAL","xy","anchor","onregion","parseRegion","stream","alreadyCollectedLine","indexOf","hasSubstring","oncue","flush","onflush","AboutUs","CmVideoPlayer","cm_video_player","CmBradcrumb","cm_breadcrumb","meta","containers_AboutUs","render","_h","$createElement","_c","_self","staticClass","staticStyle","fontSize","attrs","navTree","_v","staticRenderFns","Component","normalizeComponent","ssrContext","__webpack_exports__","doccy","topLevel","minDoc","r","l","d","configurable","__esModule","default","videojs","assign","writable","props","Number","crossOrigin","String","playsinline","Boolean","customEventName","required","events","Array","globalOptions","controls","controlBar","remainingTimeDisplay","playToggle","progressControl","fullscreenToggle","volumeMenuButton","inline","techOrder","plugins","globalEvents","player","reseted","mounted","initialize","beforeDestroy","dispose","methods","$refs","video","setAttribute","$emit","__ob__","concat","on","currentTime","techName_","pause","$nextTick","watch","deep","handler","sources","install","videoPlayer","component","_compiled","functional","_scopeId","$vnode","parent","__VUE_SSR_CONTEXT__","_registeredComponents","add","_ssrRegister","beforeCreate","_injectStyles","esModule","ref","_e","target","source","vue_video_player","src","imgUrl","components_cm_video_player","playerOptions","ready","playerReadied","forEach","row","arg","index","slice","_interopDefault","ex","tsml","safeParseTuple","vtt","version","USER_AGENT","webkitVersionMap","exec","appleWebkitVersion","IS_IPAD","IS_IPHONE","IS_IPOD","IS_IOS","IOS_VERSION","IS_ANDROID","ANDROID_VERSION","major","minor","IS_OLD_ANDROID","IS_NATIVE_ANDROID","IS_FIREFOX","IS_EDGE","IS_CHROME","CHROME_VERSION","IS_IE8","IE_VERSION","IS_SAFARI","IS_ANY_SAFARI","TOUCH_ENABLED","isReal","maxTouchPoints","DocumentTouch","BACKGROUND_SIZE_SUPPORTED","browser","freeze","_typeof","Symbol","classCallCheck","instance","Constructor","inherits","subClass","superClass","setPrototypeOf","__proto__","possibleConstructorReturn","ReferenceError","taggedTemplateLiteralLoose","strings","raw","keys","isObject","each","_len","_key","apply","isPlain","log","level","history","logByType","args","lvl","levels","lvlRegExp","RegExp","unshift","console","info","map","isArray","x","join","all","off","debug","warn","DEFAULT","clear","disable","enable","_len2","_key2","_len3","_key3","_len4","_key4","log$1","computedStyle","el","getComputedStyle","cs","currentStyle","_templateObject","isNonBlankString","throwIfWhitespace","isEl","nodeType","isInFrame","createQuerier","selector","querySelector","ctx","createEl","properties","attributes","content","getOwnPropertyNames","propName","attrName","appendContent","prependTo","child","insertBefore","hasClass","classToCheck","classList","contains","addClass","classToAdd","removeClass","classToRemove","remove","filter","toggleClass","classToToggle","predicate","setAttributes","attrValue","removeAttribute","getAttributes","tag","knownBooleans","attrVal","getAttribute","attribute","blockTextSelection","focus","onselectstart","unblockTextSelection","rect","findPosition","docEl","clientLeft","scrollLeft","pageXOffset","clientTop","scrollTop","pageYOffset","getPointerPosition","event","boxW","boxH","boxY","boxX","pageY","pageX","changedTouches","y","isTextNode","emptyEl","normalizeContent","insertContent","isSingleLeftClick","button","buttons","$","$$","Dom","_guid","newGUID","elData","elIdAttr","Date","getTime","getData","hasData","removeData","_cleanUpEvents","elem","handlers","removeEventListener","dispatcher","detachEvent","disabled","_handleMultipleEvents","types","fixEvent","returnTrue","returnFalse","isPropagationStopped","old","preventDefault","srcElement","relatedTarget","fromElement","toElement","returnValue","defaultPrevented","stopPropagation","cancelBubble","stopImmediatePropagation","isImmediatePropagationStopped","clientX","doc","clientY","which","keyCode","_supportsPassive","opts","addEventListener","passiveEvents","guid","hash","handlersCopy","passive","attachEvent","removeType","splice","trigger","elemData","ownerDocument","bubbles","targetData","one","func","Events","_windowLoaded","videojs$2","autoSetup","vids","getElementsByTagName","audios","divs","mediaEls","_i","_i2","_e2","_i3","_e3","mediaEl","autoSetupTimeout","wait","vjs","createStyleElement","setTextContent","styleSheet","cssText","bind","uid","bound","throttle","last","now","debounce","immediate","_later","EventTarget","allowedEvents_","ael","dispatchEvent","isEvented","eventBusEl_","every","isValidEventType","validateTarget","validateEventType","validateListener","listener","normalizeListenArgs","isTargetingSelf","shift","listen","EventedMixin","_this","_normalizeListenArgs","removeListenerOnDispose","removeRemoverOnTargetDispose","_this2","_normalizeListenArgs2","wrapper","largs","targetOrType","typeOrListener","evented","eventBusKey","StatefulMixin","setState","stateUpdates","changes","from","to","stateful","defaultState","handleStateChanged","toTitleCase","mergeOptions","play","player_","options_","id_","name_","el_","children_","childIndex_","childNameIndex_","initChildren","reportTouchActivity","enableTouchActivity","localize","tokens","defaultValue","language","languages","primaryCode","primaryLang","localizedString","ret","contentEl","contentEl_","children","getChildById","getChild","addChild","componentName","componentClassName","componentClass","ComponentClass","getComponent","refNode","childFound","compEl","parentOptions","workingChildren","Tech","some","wchild","isTech","newChild","buildCSSClass","isReady_","readyQueue_","triggerReady","readyQueue","show","hide","lockShowing","unlockShowing","num","skipListeners","dimension","dimensions","widthOrHeight","pxIndex","currentDimension","computedWidthOrHeight","getPropertyValue","rule","currentDimensions","currentWidth","currentHeight","blur","emitTapEvents","touchStart","firstTouch","couldBeTap","touches","xdiff","ydiff","sqrt","noTap","reportUserActivity","report","touchHolding","clearInterval","setInterval","touchEnd","timeoutId","disposeFn","interval","_this3","intervalId","requestAnimationFrame","_this4","supportsRaf_","cancelAnimationFrame","registerComponent","ComponentToRegister","isComp","isPrototypeOf","reason","components_","Player","players","playerNames","pname","getRange","fnName","valueIndex","ranges","rangeIndex","maxIndex","rangeCheck","createTimeRangesObj","createTimeRanges","bufferedPercent","buffered","duration","bufferedDuration","FullscreenApi","apiMap","specApi","browserApi","MediaError","defaultMessages","errorTypes","1","2","3","4","5","errNum","isPromise","then","silencePromise","trackToJson_","reduce","acc","textTrackConverter","tech","trackEls","trackObjs","trackEl","textTracks","addedTrack","addRemoteTextTrack","addCue","MODAL_CLASS_NAME","ModalDialog","_Component","opened_","hasBeenOpened_","hasBeenFilled_","closeable","uncloseable","role","descEl_","description","tabIndex","aria-describedby","aria-hidden","aria-label","label","previouslyActiveEl_","handleKeyPress","close","desc","fillAlways","fill","wasPlaying_","paused","pauseOnOpen","hadControls_","conditionalFocus_","opened","conditionalBlur_","temporary","closeable_","temp","controlText","fillWith","parentEl","nextSiblingEl","nextSibling","empty","closeButton","content_","activeEl","activeElement","playerEl","handleKeyDown","focusableEls","focusableEls_","focusIndex","shiftKey","allChildren","querySelectorAll","HTMLAnchorElement","HTMLAreaElement","hasAttribute","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","HTMLButtonElement","HTMLIFrameElement","HTMLObjectElement","HTMLEmbedElement","TrackList","_EventTarget","tracks","tracks_","addTrack","removeTrack","rtrack","getTrackById","change","addtrack","removetrack","disableOthers","enabled","AudioTrackList","_TrackList","_prop","changing_","disableOthers$1","selected","VideoTrackList","TextTrackList","kind","HtmlTrackElementList","trackElements","trackElements_","addTrackElement_","trackElement","getTrackElementByTrack_","trackElement_","removeTrackElement_","TextTrackCueList","setCues_","length_","oldLength","cues_","defineProp","getCueById","VideoTrackKind","alternative","captions","main","sign","subtitles","commentary","AudioTrackKind","descriptions","main-desc","translation","TextTrackKind","chapters","metadata","TextTrackMode","hidden","showing","Track","trackProps","_loop","parseUrl","href","addToBody","host","protocol","innerHTML","details","location","getAbsoluteURL","getFileExtension","path","pathParts","isCrossOrigin","winLoc","urlInfo","Url","parseCues","srcContent","parser","errors","groupCollapsed","groupEnd","loadTrack","responseBody","loaded_","tech_","loadHandler","TextTrack","_Track","srclang","default_","tt","activeCues_","activeCues","changed","timeupdateHandler","newMode","ct","active","originalCue","originalCue_","removeCue","_removeCue","cuechange","AudioTrack","newEnabled","VideoTrack","newSelected","NONE","LOADED","HTMLTrackElement","load","LOADING","ERROR","NORMAL","audio","ListClass","TrackClass","capitalName","getterName","privateName","REMOTE","remoteText","remoteTextEl","ALL","names","hasStarted_","featuresProgressEvents","manualProgressOn","featuresTimeupdateEvents","manualTimeUpdatesOn","nativeCaptions","nativeTextTracks","featuresNativeTextTracks","emulateTextTracks","autoRemoteTextTracks_","initTrackListeners","nativeControlsForTouch","triggerSourceset","onDurationChange","manualProgress","trackProgress","manualProgressOff","stopTrackingProgress","progressInterval","numBufferedPercent","bufferedPercent_","duration_","manualTimeUpdates","trackCurrentTime","stopTrackingCurrentTime","manualTimeUpdatesOff","currentTimeInterval","manuallyTriggered","clearTracks","removeRemoteTextTrack","cleanupAutoTextTracks","reset","error_","played","setCurrentTime","trackListChanges","addWebVttScript_","_this5","script","_this6","remoteTracks","remoteTextTracks","handleAddTrack","handleRemoveTrack","updateDisplay","textTracksChanges","addTextTrack","createTrackHelper","createRemoteTextTrack","_this7","manualCleanup","htmlTrackElement","remoteTextTrackEls","getVideoPlaybackQuality","setPoster","setPlaysinline","canPlayType","canPlaySource","srcObj","registerTech","techs_","defaultTechOrder_","getTech","featuresVolumeControl","featuresMuteControl","featuresFullscreenResize","featuresPlaybackRate","featuresSourceset","withSourceHandlers","_Tech","registerSourceHandler","sourceHandlers","can","selectSourceHandler","canHandleSource","sh","originalFn","sourceHandler_","setSource","nativeSourceHandler","disposeSourceHandler","currentSource_","handleSource","middlewares","middlewareInstances","TERMINATOR","next","setSourceHelper","middleware","lastRun","mwFactory","mwrest","mw","mws","_mws$i","mwf","mwi","getOrCreateFactory","_src","mediate","callMethod","middlewareValue","middlewareIterator","terminated","executeRight","allowedGetters","seekable","allowedSetters","allowedMediators","MimetypesKind","opus","ogv","mp4","mov","m4v","mkv","mp3","aac","oga","m3u8","getMimetype","ext","fixSource","mimetype","MediaLoader","j","techName","isSupported","loadTech_","ClickableComponent","tabIndex_","createControlTextEl","controlTextEl_","aria-live","controlText_","localizedText","nonIconControl","enabled_","handleClick","handleFocus","handleBlur","PosterImage","_ClickableComponent","update","fallbackImg_","poster","setSrc","backgroundImage","fontMap","monospace","sansSerif","serif","monospaceSansSerif","monospaceSerif","proportionalSansSerif","proportionalSerif","casual","smallcaps","constructColor","opacity","hex","tryUpdateStyle","TextTrackDisplay","toggleDisplay","preselectTrack","modes","userPref","cache_","selectedLanguage","firstDesc","firstCaptions","preferredTrack","aria-atomic","clearDisplay","descriptionsTrack","captionsSubtitlesTrack","updateForTrack","textTrackSettings","overrides","getValues","textOpacity","backgroundOpacity","windowColor","windowOpacity","edgeStyle","textShadow","fontPercent","fontFamily","fontVariant","LoadingSpinner","isAudio","playerType","dir","Button","BigPlayButton","_Button","mouseused_","handleMouseDown","playPromise","cb","playFocus","CloseButton","PlayToggle","handlePlay","handlePause","handleEnded","handleSeeked","defaultImplementation","seconds","guide","floor","gm","gh","isNaN","Infinity","implementation","formatTime","TimeDisplay","throttledUpdateContent","updateContent","plainName","labelText_","updateTextNode_","textNode_","formattedTime_","formatTime_","time","updateFormattedTime_","formattedTime","CurrentTimeDisplay","_TimeDisplay","scrubbing","getCache","DurationDisplay","TimeDivider","RemainingTimeDisplay","remainingTime","LiveDisplay","updateShowing","Slider","bar","barName","playerEvent","handleMouseMove","handleMouseUp","aria-valuenow","aria-valuemin","aria-valuemax","progress","getPercent","toFixed","calculateDistance","stepBack","stepForward","bool","vertical_","LoadProgressBar","partEls_","bufferedEnd","percentify","part","TimeTooltip","seekBarRect","seekBarPoint","tooltipRect","playerRect","seekBarPointPx","spaceLeftOfPoint","spaceRightOfPoint","pullTooltipBy","PlayProgressBar","rafId_","timeTooltip","MouseTimeDisplay","SeekBar","_Slider","setEventHandlers_","updateInterval","update_","getCurrentTime_","videoWasPlaying","newTime","mouseTimeDisplay","handleAction","ProgressControl","throttledHandleMouseSeek","handleMouseSeek","seekBar","seekBarEl","FullscreenToggle","handleFullscreenChange","fullscreenEnabled","isFullscreen","exitFullscreen","requestFullscreen","checkVolumeSupport","VolumeLevel","VolumeBar","updateLastVolume_","updateARIAAttributes","checkMuted","volume","muted","ariaValue","volumeAsPercentage_","volumeBeforeDrag","lastVolume_","VolumeControl","volumeBar","throttledHandleMouseMove","orientationClass","checkMuteSupport","MuteToggle","vol","lastVolume","volumeToSet","updateIcon_","updateControlText_","VolumePanel","volumeControl","volumePanelState_","sliderActive_","sliderInactive_","muteToggle","Menu","menuButton_","menuButton","focusedChild_","addItem","unpressButton","contentElType","append","stepChild","item","MenuButton","buttonClass","handleSubmenuKeyPress","menu","createMenu","buttonPressed_","items","hideThreshold_","title","createItems","buildWrapperCSSClass","menuButtonClass","pressButton","TrackButton","_MenuButton","updateHandler","MenuItem","selectable","isSelected_","multiSelectable","_selected","TextTrackMenuItem","_MenuItem","changeHandler","handleTracksChange","selectedLanguageChangeHandler","handleSelectedLanguageChange","onchange","Event","createEvent","initEvent","kinds","shouldBeSelected","OffTextTrackMenuItem","_TextTrackMenuItem","allHidden","TextTrackButton","_TrackButton","TrackMenuItem","label_","kinds_","kind_","ChaptersTrackMenuItem","ChaptersButton","_TextTrackButton","track_","setTrack","findChaptersTrack","updateHandler_","remoteTextTrackEl","_remoteTextTrackEl","getMenuCaption","mi","DescriptionsButton","SubtitlesButton","CaptionSettingsMenuItem","CaptionsButton","SubsCapsMenuItem","SubsCapsButton","language_","AudioTrackMenuItem","audioTracks","AudioTrackButton","PlaybackRateMenuItem","rate","playbackRate","PlaybackRateMenuButton","updateVisibility","updateLabel","labelEl_","rates","playbackRates","currentRate","newRate","playbackRateSupported","Spacer","CustomControlSpacer","_Spacer","ControlBar","ErrorDisplay","_ModalDialog","COLOR_BLACK","COLOR_BLUE","COLOR_CYAN","COLOR_GREEN","COLOR_MAGENTA","COLOR_RED","COLOR_WHITE","COLOR_YELLOW","OPACITY_OPAQUE","OPACITY_SEMI","OPACITY_TRANS","selectConfigs","parseOptionValue","TextTrackSettings","endDialog","setDefaults","persistTextTrackSettings","saveSettings","config","restoreSettings","createElSelect_","legendId","selectLabelledbyIds","optionId","createElFgColor_","createElBgColor_","createElWinColor_","createElColors_","createElFont_","createElControls_","defaultsDescription","initial","accum","selectedIndex","setValues","setSelectedOption","localStorage","getItem","setItem","removeItem","ttDisplay","subsCapsBtn","subsCapsButton","ccBtn","captionsButton","ResizeManager","RESIZE_OBSERVER_AVAILABLE","ResizeObserver","loadListener_","resizeObserver_","debouncedHandler_","resizeHandler","observe","contentWindow","unobserve","disconnect","resizeObserver","sourcesetLoad","srcUrls","innerHTMLDescriptorPolyfill","cloneNode","dummy","docFrag","createDocumentFragment","Element","getDescriptor","priority","descriptor","getOwnPropertyDescriptor","firstSourceWatch","resetSourceWatch_","innerDescriptor","HTMLMediaElement","getInnerHTMLDescriptor","appendWrapper","appendFn","retval","srcDescriptorPolyfill","setupSourceset","resetSourceset_","srcDescriptor","getSrcDescriptor","oldSetAttribute","oldLoad","currentSrc","_templateObject$2","Html5","crossoriginTracks","initNetworkState_","handleLateInit_","enableSourceset","setupSourcesetHandling_","hasChildNodes","nodes","nodesLength","removeNodes","proxyNativeTracks_","restoreMetadataTracksInIOSNativePlayer_","setControls","proxyWebkitFullscreen_","disposeMediaElement","metadataTracksPreFullscreenState","takeMetadataTrackSnapshot","storedMode","restoreTrackMode","storedTrack","elTracks","techTracks","listeners","currentTarget","removeOldTracks","removeTracks","found","eventName","playerElIngest","movingMediaElementInDOM","clone","techId","class","playerId","preload","settingsAttrs","attr","networkState","loadstartFired","setLoadstartFired","triggerLoadstart","eventsToTrigger","checkProgress","NaN","endFn","beginFn","webkitPresentationMode","supportsFullScreen","webkitEnterFullScreen","enterFullScreen","HAVE_METADATA","exitFullScreen","webkitExitFullScreen","resetMediaElement","videoPlaybackQuality","webkitDroppedFrameCount","webkitDecodedFrameCount","droppedVideoFrames","totalVideoFrames","performance","creationTime","timing","navigationStart","TEST_VID","canControlVolume","canMuteVolume","canControlPlaybackRate","canOverrideAttributes","noop","supportsNativeTextTracks","supportsNativeVideoTracks","videoTracks","supportsNativeAudioTracks","featuresNativeVideoTracks","featuresNativeAudioTracks","mpegurlRE","mp4RE","patchCanPlayType","unpatchCanPlayType","_templateObject$1","TECH_EVENTS_RETRIGGER","TECH_EVENTS_QUEUE","canplay","canplaythrough","playing","seeked","getTagSettings","closest","isPosterFromTech_","queuedCallbacks_","userActive_","tagAttributes","languagesToLower","name$$1","languages_","poster_","controls_","autoplay","scrubbing_","lastPlaybackRate","defaultPlaybackRate","playerOptionsCopy","middleware_","flexNotSupported_","majorVersion","userActive","listenForUserActivity_","handleFullscreenChange_","handleStageClick_","changingSrc_","playWaitingForReady_","playOnLoadstart_","styleEl_","playerElIngest_","divEmbed","VIDEOJS_NO_DYNAMIC_STYLE","defaultsStyleEl","head","fluid","aspectRatio","links","linkEl","_dimension","privDimension","updateStyleEl_","parsedVal","fluid_","ratio","aspectRatio_","idClass","ratioParts","videoWidth","videoHeight","ratioMultiplier","width_","height_","_height","techEl","unloadTech_","titleTechName","camelTechName","techOptions","loop","vtt.js","canOverridePoster","techCanOverridePoster","TechClass","handleTechReady_","textTracksJson_","eventObj","seeking","handleTechLoadStart_","handleTechSourceset_","handleTechWaiting_","handleTechEnded_","handleTechSeeking_","handleTechPlay_","handleTechFirstPlay_","handleTechPause_","handleTechDurationChange_","handleTechFullscreenChange_","handleTechError_","handleTechPosterChange_","handleTechTextData_","handleTechRateChange_","usingNativeControls","techGet_","addTechControlsListeners_","safety","removeTechControlsListeners_","handleTechClick_","handleTechTouchStart_","handleTechTouchMove_","handleTechTouchEnd_","handleTechTap_","techCall_","hasStarted","manualAutoplay_","previouslyMuted","promise","updateSourceCaches_","matchingSources","findMimetype","sourceElSources","sourceEls","matchingSourceEls","sourceObj","updateCache","request","queued","handleTechCanPlay_","handleTechCanPlayThrough_","handleTechPlaying_","handleTechSeeked_","starttime","userWasActive","set$1","reduceRight","get$1","isScrubbing","percentAsDecimal","_muted","defaultMuted","_defaultMuted","isFS","isFullscreen_","fsApi","fullscreenchange","documentFullscreenChange","fullscreenElement","enterFullWindow","exitFullWindow","isFullWindow","docOrigOverflow","overflow","fullWindowOnEscKey","selectSource","_this8","techs","_ref","findFirstPassingTechSourcePair","outerArray","innerArray","tester","outerChoice","innerChoice","finder","_ref2","sourceOrder","_this9","filterSource","newsrc","srcobj","middlewareSource","src_","notSupportedMessage","setTech","str1","str2","_this10","sourceTech","currentSources","currentSource","currentType","techAutoplay","newPoster","usingNativeControls_","errorDisplay","userActivity_","mouseInProgress","lastMoveX","lastMoveY","handleActivity","screenX","screenY","inactivityTimeout","isAudio_","_ref3$track","toJSON","createModal","_this11","modal","baseOptions","tagOptions","dataSetup","_safeParseTuple","childName","html5","flash","userLanguage","pluginStorage","pluginExists","getPlugin","markPluginAsActive","triggerSetupEvent","before","createPluginFactory","PluginSubClass","plugin","Function","getEventHash","Plugin","VERSION","isBasic","registerPlugin","basicPluginWrapper","createBasicPlugin","deregisterPlugin","getPlugins","getPluginVersion","BASE_PLUGIN_NAME","usingPlugin","hasPlugin","HTMLVideoElement","normalizeId","getPlayer","hooks","hookFunction","PlayerComponent","hooks_","hook","hookOnce","original","removeHook","getPlayers","nId","_tag","_player","getAllPlayers","comp","use","writeable","subClassMethods","super_","_inherits","addLanguage","_mergeOptions","createTimeRange","setFormatTime","customImplementation","resetFormatTime","dom","clean","sa"],"mappings":"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","file":"static/js/3.cba4ef5376469fcafc15.js","sourcesContent":["\"use strict\";\nvar window = require(\"global/window\")\nvar isFunction = require(\"is-function\")\nvar parseHeaders = require(\"parse-headers\")\nvar xtend = require(\"xtend\")\n\nmodule.exports = createXHR\ncreateXHR.XMLHttpRequest = window.XMLHttpRequest || noop\ncreateXHR.XDomainRequest = \"withCredentials\" in (new createXHR.XMLHttpRequest()) ? createXHR.XMLHttpRequest : window.XDomainRequest\n\nforEachArray([\"get\", \"put\", \"post\", \"patch\", \"head\", \"delete\"], function(method) {\n    createXHR[method === \"delete\" ? \"del\" : method] = function(uri, options, callback) {\n        options = initParams(uri, options, callback)\n        options.method = method.toUpperCase()\n        return _createXHR(options)\n    }\n})\n\nfunction forEachArray(array, iterator) {\n    for (var i = 0; i < array.length; i++) {\n        iterator(array[i])\n    }\n}\n\nfunction isEmpty(obj){\n    for(var i in obj){\n        if(obj.hasOwnProperty(i)) return false\n    }\n    return true\n}\n\nfunction initParams(uri, options, callback) {\n    var params = uri\n\n    if (isFunction(options)) {\n        callback = options\n        if (typeof uri === \"string\") {\n            params = {uri:uri}\n        }\n    } else {\n        params = xtend(options, {uri: uri})\n    }\n\n    params.callback = callback\n    return params\n}\n\nfunction createXHR(uri, options, callback) {\n    options = initParams(uri, options, callback)\n    return _createXHR(options)\n}\n\nfunction _createXHR(options) {\n    if(typeof options.callback === \"undefined\"){\n        throw new Error(\"callback argument missing\")\n    }\n\n    var called = false\n    var callback = function cbOnce(err, response, body){\n        if(!called){\n            called = true\n            options.callback(err, response, body)\n        }\n    }\n\n    function readystatechange() {\n        if (xhr.readyState === 4) {\n            setTimeout(loadFunc, 0)\n        }\n    }\n\n    function getBody() {\n        // Chrome with requestType=blob throws errors arround when even testing access to responseText\n        var body = undefined\n\n        if (xhr.response) {\n            body = xhr.response\n        } else {\n            body = xhr.responseText || getXml(xhr)\n        }\n\n        if (isJson) {\n            try {\n                body = JSON.parse(body)\n            } catch (e) {}\n        }\n\n        return body\n    }\n\n    function errorFunc(evt) {\n        clearTimeout(timeoutTimer)\n        if(!(evt instanceof Error)){\n            evt = new Error(\"\" + (evt || \"Unknown XMLHttpRequest Error\") )\n        }\n        evt.statusCode = 0\n        return callback(evt, failureResponse)\n    }\n\n    // will load the data & process the response in a special response object\n    function loadFunc() {\n        if (aborted) return\n        var status\n        clearTimeout(timeoutTimer)\n        if(options.useXDR && xhr.status===undefined) {\n            //IE8 CORS GET successful response doesn't have a status field, but body is fine\n            status = 200\n        } else {\n            status = (xhr.status === 1223 ? 204 : xhr.status)\n        }\n        var response = failureResponse\n        var err = null\n\n        if (status !== 0){\n            response = {\n                body: getBody(),\n                statusCode: status,\n                method: method,\n                headers: {},\n                url: uri,\n                rawRequest: xhr\n            }\n            if(xhr.getAllResponseHeaders){ //remember xhr can in fact be XDR for CORS in IE\n                response.headers = parseHeaders(xhr.getAllResponseHeaders())\n            }\n        } else {\n            err = new Error(\"Internal XMLHttpRequest Error\")\n        }\n        return callback(err, response, response.body)\n    }\n\n    var xhr = options.xhr || null\n\n    if (!xhr) {\n        if (options.cors || options.useXDR) {\n            xhr = new createXHR.XDomainRequest()\n        }else{\n            xhr = new createXHR.XMLHttpRequest()\n        }\n    }\n\n    var key\n    var aborted\n    var uri = xhr.url = options.uri || options.url\n    var method = xhr.method = options.method || \"GET\"\n    var body = options.body || options.data\n    var headers = xhr.headers = options.headers || {}\n    var sync = !!options.sync\n    var isJson = false\n    var timeoutTimer\n    var failureResponse = {\n        body: undefined,\n        headers: {},\n        statusCode: 0,\n        method: method,\n        url: uri,\n        rawRequest: xhr\n    }\n\n    if (\"json\" in options && options.json !== false) {\n        isJson = true\n        headers[\"accept\"] || headers[\"Accept\"] || (headers[\"Accept\"] = \"application/json\") //Don't override existing accept header declared by user\n        if (method !== \"GET\" && method !== \"HEAD\") {\n            headers[\"content-type\"] || headers[\"Content-Type\"] || (headers[\"Content-Type\"] = \"application/json\") //Don't override existing accept header declared by user\n            body = JSON.stringify(options.json === true ? body : options.json)\n        }\n    }\n\n    xhr.onreadystatechange = readystatechange\n    xhr.onload = loadFunc\n    xhr.onerror = errorFunc\n    // IE9 must have onprogress be set to a unique function.\n    xhr.onprogress = function () {\n        // IE must die\n    }\n    xhr.onabort = function(){\n        aborted = true;\n    }\n    xhr.ontimeout = errorFunc\n    xhr.open(method, uri, !sync, options.username, options.password)\n    //has to be after open\n    if(!sync) {\n        xhr.withCredentials = !!options.withCredentials\n    }\n    // Cannot set timeout with sync request\n    // not setting timeout on the xhr object, because of old webkits etc. not handling that correctly\n    // both npm's request and jquery 1.x use this kind of timeout, so this is being consistent\n    if (!sync && options.timeout > 0 ) {\n        timeoutTimer = setTimeout(function(){\n            if (aborted) return\n            aborted = true//IE9 may still call readystatechange\n            xhr.abort(\"timeout\")\n            var e = new Error(\"XMLHttpRequest timeout\")\n            e.code = \"ETIMEDOUT\"\n            errorFunc(e)\n        }, options.timeout )\n    }\n\n    if (xhr.setRequestHeader) {\n        for(key in headers){\n            if(headers.hasOwnProperty(key)){\n                xhr.setRequestHeader(key, headers[key])\n            }\n        }\n    } else if (options.headers && !isEmpty(options.headers)) {\n        throw new Error(\"Headers cannot be set on an XDomainRequest object\")\n    }\n\n    if (\"responseType\" in options) {\n        xhr.responseType = options.responseType\n    }\n\n    if (\"beforeSend\" in options &&\n        typeof options.beforeSend === \"function\"\n    ) {\n        options.beforeSend(xhr)\n    }\n\n    // Microsoft Edge browser sends \"undefined\" when send is called with undefined value.\n    // XMLHttpRequest spec says to pass null as body to indicate no body\n    // See https://github.com/naugtur/xhr/issues/100.\n    xhr.send(body || null)\n\n    return xhr\n\n\n}\n\nfunction getXml(xhr) {\n    if (xhr.responseType === \"document\") {\n        return xhr.responseXML\n    }\n    var firefoxBugTakenEffect = xhr.responseXML && xhr.responseXML.documentElement.nodeName === \"parsererror\"\n    if (xhr.responseType === \"\" && !firefoxBugTakenEffect) {\n        return xhr.responseXML\n    }\n\n    return null\n}\n\nfunction noop() {}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xhr/index.js\n// module id = 1Xk4\n// module chunks = 2 3","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar scrollSetting = {\n  \"\": true,\n  \"up\": true\n};\n\nfunction findScrollSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var scroll = scrollSetting[value.toLowerCase()];\n  return scroll ? value.toLowerCase() : false;\n}\n\nfunction isValidPercentValue(value) {\n  return typeof value === \"number\" && (value >= 0 && value <= 100);\n}\n\n// VTTRegion shim http://dev.w3.org/html5/webvtt/#vttregion-interface\nfunction VTTRegion() {\n  var _width = 100;\n  var _lines = 3;\n  var _regionAnchorX = 0;\n  var _regionAnchorY = 100;\n  var _viewportAnchorX = 0;\n  var _viewportAnchorY = 100;\n  var _scroll = \"\";\n\n  Object.defineProperties(this, {\n    \"width\": {\n      enumerable: true,\n      get: function() {\n        return _width;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"Width must be between 0 and 100.\");\n        }\n        _width = value;\n      }\n    },\n    \"lines\": {\n      enumerable: true,\n      get: function() {\n        return _lines;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Lines must be set to a number.\");\n        }\n        _lines = value;\n      }\n    },\n    \"regionAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorX must be between 0 and 100.\");\n        }\n        _regionAnchorY = value;\n      }\n    },\n    \"regionAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _regionAnchorX;\n      },\n      set: function(value) {\n        if(!isValidPercentValue(value)) {\n          throw new Error(\"RegionAnchorY must be between 0 and 100.\");\n        }\n        _regionAnchorX = value;\n      }\n    },\n    \"viewportAnchorY\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorY;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorY must be between 0 and 100.\");\n        }\n        _viewportAnchorY = value;\n      }\n    },\n    \"viewportAnchorX\": {\n      enumerable: true,\n      get: function() {\n        return _viewportAnchorX;\n      },\n      set: function(value) {\n        if (!isValidPercentValue(value)) {\n          throw new Error(\"ViewportAnchorX must be between 0 and 100.\");\n        }\n        _viewportAnchorX = value;\n      }\n    },\n    \"scroll\": {\n      enumerable: true,\n      get: function() {\n        return _scroll;\n      },\n      set: function(value) {\n        var setting = findScrollSetting(value);\n        // Have to check for false as an empty string is a legal value.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _scroll = setting;\n      }\n    }\n  });\n}\n\nmodule.exports = VTTRegion;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttregion.js\n// module id = DvOw\n// module chunks = 2 3","module.exports = SafeParseTuple\n\nfunction SafeParseTuple(obj, reviver) {\n    var json\n    var error = null\n\n    try {\n        json = JSON.parse(obj, reviver)\n    } catch (err) {\n        error = err\n    }\n\n    return [error, json]\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/safe-json-parse/tuple.js\n// module id = I/+Z\n// module chunks = 2 3","var isFunction = require('is-function')\n\nmodule.exports = forEach\n\nvar toString = Object.prototype.toString\nvar hasOwnProperty = Object.prototype.hasOwnProperty\n\nfunction forEach(list, iterator, context) {\n    if (!isFunction(iterator)) {\n        throw new TypeError('iterator must be a function')\n    }\n\n    if (arguments.length < 3) {\n        context = this\n    }\n    \n    if (toString.call(list) === '[object Array]')\n        forEachArray(list, iterator, context)\n    else if (typeof list === 'string')\n        forEachString(list, iterator, context)\n    else\n        forEachObject(list, iterator, context)\n}\n\nfunction forEachArray(array, iterator, context) {\n    for (var i = 0, len = array.length; i < len; i++) {\n        if (hasOwnProperty.call(array, i)) {\n            iterator.call(context, array[i], i, array)\n        }\n    }\n}\n\nfunction forEachString(string, iterator, context) {\n    for (var i = 0, len = string.length; i < len; i++) {\n        // no such thing as a sparse string.\n        iterator.call(context, string.charAt(i), i, string)\n    }\n}\n\nfunction forEachObject(object, iterator, context) {\n    for (var k in object) {\n        if (hasOwnProperty.call(object, k)) {\n            iterator.call(context, object[k], k, object)\n        }\n    }\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/for-each/index.js\n// module id = Pyiu\n// module chunks = 2 3","\nexports = module.exports = trim;\n\nfunction trim(str){\n  return str.replace(/^\\s*|\\s*$/g, '');\n}\n\nexports.left = function(str){\n  return str.replace(/^\\s*/, '');\n};\n\nexports.right = function(str){\n  return str.replace(/\\s*$/, '');\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/trim/index.js\n// module id = QYuf\n// module chunks = 2 3","module.exports = isFunction\n\nvar toString = Object.prototype.toString\n\nfunction isFunction (fn) {\n  var string = toString.call(fn)\n  return string === '[object Function]' ||\n    (typeof fn === 'function' && string !== '[object RegExp]') ||\n    (typeof window !== 'undefined' &&\n     // IE8 and below\n     (fn === window.setTimeout ||\n      fn === window.alert ||\n      fn === window.confirm ||\n      fn === window.prompt))\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/is-function/index.js\n// module id = Rl2i\n// module chunks = 2 3","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar autoKeyword = \"auto\";\nvar directionSetting = {\n  \"\": true,\n  \"lr\": true,\n  \"rl\": true\n};\nvar alignSetting = {\n  \"start\": true,\n  \"middle\": true,\n  \"end\": true,\n  \"left\": true,\n  \"right\": true\n};\n\nfunction findDirectionSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var dir = directionSetting[value.toLowerCase()];\n  return dir ? value.toLowerCase() : false;\n}\n\nfunction findAlignSetting(value) {\n  if (typeof value !== \"string\") {\n    return false;\n  }\n  var align = alignSetting[value.toLowerCase()];\n  return align ? value.toLowerCase() : false;\n}\n\nfunction extend(obj) {\n  var i = 1;\n  for (; i < arguments.length; i++) {\n    var cobj = arguments[i];\n    for (var p in cobj) {\n      obj[p] = cobj[p];\n    }\n  }\n\n  return obj;\n}\n\nfunction VTTCue(startTime, endTime, text) {\n  var cue = this;\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var baseObj = {};\n\n  if (isIE8) {\n    cue = document.createElement('custom');\n  } else {\n    baseObj.enumerable = true;\n  }\n\n  /**\n   * Shim implementation specific properties. These properties are not in\n   * the spec.\n   */\n\n  // Lets us know when the VTTCue's data has changed in such a way that we need\n  // to recompute its display state. This lets us compute its display state\n  // lazily.\n  cue.hasBeenReset = false;\n\n  /**\n   * VTTCue and TextTrackCue properties\n   * http://dev.w3.org/html5/webvtt/#vttcue-interface\n   */\n\n  var _id = \"\";\n  var _pauseOnExit = false;\n  var _startTime = startTime;\n  var _endTime = endTime;\n  var _text = text;\n  var _region = null;\n  var _vertical = \"\";\n  var _snapToLines = true;\n  var _line = \"auto\";\n  var _lineAlign = \"start\";\n  var _position = 50;\n  var _positionAlign = \"middle\";\n  var _size = 50;\n  var _align = \"middle\";\n\n  Object.defineProperty(cue,\n    \"id\", extend({}, baseObj, {\n      get: function() {\n        return _id;\n      },\n      set: function(value) {\n        _id = \"\" + value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"pauseOnExit\", extend({}, baseObj, {\n      get: function() {\n        return _pauseOnExit;\n      },\n      set: function(value) {\n        _pauseOnExit = !!value;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"startTime\", extend({}, baseObj, {\n      get: function() {\n        return _startTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"Start time must be set to a number.\");\n        }\n        _startTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"endTime\", extend({}, baseObj, {\n      get: function() {\n        return _endTime;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\") {\n          throw new TypeError(\"End time must be set to a number.\");\n        }\n        _endTime = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"text\", extend({}, baseObj, {\n      get: function() {\n        return _text;\n      },\n      set: function(value) {\n        _text = \"\" + value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"region\", extend({}, baseObj, {\n      get: function() {\n        return _region;\n      },\n      set: function(value) {\n        _region = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"vertical\", extend({}, baseObj, {\n      get: function() {\n        return _vertical;\n      },\n      set: function(value) {\n        var setting = findDirectionSetting(value);\n        // Have to check for false because the setting an be an empty string.\n        if (setting === false) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _vertical = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"snapToLines\", extend({}, baseObj, {\n      get: function() {\n        return _snapToLines;\n      },\n      set: function(value) {\n        _snapToLines = !!value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"line\", extend({}, baseObj, {\n      get: function() {\n        return _line;\n      },\n      set: function(value) {\n        if (typeof value !== \"number\" && value !== autoKeyword) {\n          throw new SyntaxError(\"An invalid number or illegal string was specified.\");\n        }\n        _line = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"lineAlign\", extend({}, baseObj, {\n      get: function() {\n        return _lineAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _lineAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"position\", extend({}, baseObj, {\n      get: function() {\n        return _position;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Position must be between 0 and 100.\");\n        }\n        _position = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"positionAlign\", extend({}, baseObj, {\n      get: function() {\n        return _positionAlign;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _positionAlign = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"size\", extend({}, baseObj, {\n      get: function() {\n        return _size;\n      },\n      set: function(value) {\n        if (value < 0 || value > 100) {\n          throw new Error(\"Size must be between 0 and 100.\");\n        }\n        _size = value;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  Object.defineProperty(cue,\n    \"align\", extend({}, baseObj, {\n      get: function() {\n        return _align;\n      },\n      set: function(value) {\n        var setting = findAlignSetting(value);\n        if (!setting) {\n          throw new SyntaxError(\"An invalid or illegal string was specified.\");\n        }\n        _align = setting;\n        this.hasBeenReset = true;\n      }\n    }));\n\n  /**\n   * Other <track> spec defined properties\n   */\n\n  // http://www.whatwg.org/specs/web-apps/current-work/multipage/the-video-element.html#text-track-cue-display-state\n  cue.displayState = undefined;\n\n  if (isIE8) {\n    return cue;\n  }\n}\n\n/**\n * VTTCue methods\n */\n\nVTTCue.prototype.getCueAsHTML = function() {\n  // Assume WebVTT.convertCueToDOMTree is on the global.\n  return WebVTT.convertCueToDOMTree(window, this.text);\n};\n\nmodule.exports = VTTCue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vttcue.js\n// module id = aj7g\n// module chunks = 2 3","var win;\n\nif (typeof window !== \"undefined\") {\n    win = window;\n} else if (typeof global !== \"undefined\") {\n    win = global;\n} else if (typeof self !== \"undefined\"){\n    win = self;\n} else {\n    win = {};\n}\n\nmodule.exports = win;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/window.js\n// module id = awF4\n// module chunks = 2 3","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n// Default exports for Node. Export the extended versions of VTTCue and\n// VTTRegion in Node since we likely want the capability to convert back and\n// forth between JSON. If we don't then it's not that big of a deal since we're\n// off browser.\n\nvar window = require('global/window');\n\nvar vttjs = module.exports = {\n  WebVTT: require(\"./vtt.js\"),\n  VTTCue: require(\"./vttcue.js\"),\n  VTTRegion: require(\"./vttregion.js\")\n};\n\nwindow.vttjs = vttjs;\nwindow.WebVTT = vttjs.WebVTT;\n\nvar cueShim = vttjs.VTTCue;\nvar regionShim = vttjs.VTTRegion;\nvar nativeVTTCue = window.VTTCue;\nvar nativeVTTRegion = window.VTTRegion;\n\nvttjs.shim = function() {\n  window.VTTCue = cueShim;\n  window.VTTRegion = regionShim;\n};\n\nvttjs.restore = function() {\n  window.VTTCue = nativeVTTCue;\n  window.VTTRegion = nativeVTTRegion;\n};\n\nif (!window.VTTCue) {\n  vttjs.shim();\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/browser-index.js\n// module id = ciWi\n// module chunks = 2 3","/**\n * Copyright 2013 vtt.js Contributors\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* -*- Mode: Java; tab-width: 2; indent-tabs-mode: nil; c-basic-offset: 2 -*- */\n/* vim: set shiftwidth=2 tabstop=2 autoindent cindent expandtab: */\nvar _objCreate = Object.create || (function() {\n  function F() {}\n  return function(o) {\n    if (arguments.length !== 1) {\n      throw new Error('Object.create shim only accepts one parameter.');\n    }\n    F.prototype = o;\n    return new F();\n  };\n})();\n\n// Creates a new ParserError object from an errorData object. The errorData\n// object should have default code and message properties. The default message\n// property can be overriden by passing in a message parameter.\n// See ParsingError.Errors below for acceptable errors.\nfunction ParsingError(errorData, message) {\n  this.name = \"ParsingError\";\n  this.code = errorData.code;\n  this.message = message || errorData.message;\n}\nParsingError.prototype = _objCreate(Error.prototype);\nParsingError.prototype.constructor = ParsingError;\n\n// ParsingError metadata for acceptable ParsingErrors.\nParsingError.Errors = {\n  BadSignature: {\n    code: 0,\n    message: \"Malformed WebVTT signature.\"\n  },\n  BadTimeStamp: {\n    code: 1,\n    message: \"Malformed time stamp.\"\n  }\n};\n\n// Try to parse input as a time stamp.\nfunction parseTimeStamp(input) {\n\n  function computeSeconds(h, m, s, f) {\n    return (h | 0) * 3600 + (m | 0) * 60 + (s | 0) + (f | 0) / 1000;\n  }\n\n  var m = input.match(/^(\\d+):(\\d{2})(:\\d{2})?\\.(\\d{3})/);\n  if (!m) {\n    return null;\n  }\n\n  if (m[3]) {\n    // Timestamp takes the form of [hours]:[minutes]:[seconds].[milliseconds]\n    return computeSeconds(m[1], m[2], m[3].replace(\":\", \"\"), m[4]);\n  } else if (m[1] > 59) {\n    // Timestamp takes the form of [hours]:[minutes].[milliseconds]\n    // First position is hours as it's over 59.\n    return computeSeconds(m[1], m[2], 0,  m[4]);\n  } else {\n    // Timestamp takes the form of [minutes]:[seconds].[milliseconds]\n    return computeSeconds(0, m[1], m[2], m[4]);\n  }\n}\n\n// A settings object holds key/value pairs and will ignore anything but the first\n// assignment to a specific key.\nfunction Settings() {\n  this.values = _objCreate(null);\n}\n\nSettings.prototype = {\n  // Only accept the first assignment to any key.\n  set: function(k, v) {\n    if (!this.get(k) && v !== \"\") {\n      this.values[k] = v;\n    }\n  },\n  // Return the value for a key, or a default value.\n  // If 'defaultKey' is passed then 'dflt' is assumed to be an object with\n  // a number of possible default values as properties where 'defaultKey' is\n  // the key of the property that will be chosen; otherwise it's assumed to be\n  // a single value.\n  get: function(k, dflt, defaultKey) {\n    if (defaultKey) {\n      return this.has(k) ? this.values[k] : dflt[defaultKey];\n    }\n    return this.has(k) ? this.values[k] : dflt;\n  },\n  // Check whether we have a value for a key.\n  has: function(k) {\n    return k in this.values;\n  },\n  // Accept a setting if its one of the given alternatives.\n  alt: function(k, v, a) {\n    for (var n = 0; n < a.length; ++n) {\n      if (v === a[n]) {\n        this.set(k, v);\n        break;\n      }\n    }\n  },\n  // Accept a setting if its a valid (signed) integer.\n  integer: function(k, v) {\n    if (/^-?\\d+$/.test(v)) { // integer\n      this.set(k, parseInt(v, 10));\n    }\n  },\n  // Accept a setting if its a valid percentage.\n  percent: function(k, v) {\n    var m;\n    if ((m = v.match(/^([\\d]{1,3})(\\.[\\d]*)?%$/))) {\n      v = parseFloat(v);\n      if (v >= 0 && v <= 100) {\n        this.set(k, v);\n        return true;\n      }\n    }\n    return false;\n  }\n};\n\n// Helper function to parse input into groups separated by 'groupDelim', and\n// interprete each group as a key/value pair separated by 'keyValueDelim'.\nfunction parseOptions(input, callback, keyValueDelim, groupDelim) {\n  var groups = groupDelim ? input.split(groupDelim) : [input];\n  for (var i in groups) {\n    if (typeof groups[i] !== \"string\") {\n      continue;\n    }\n    var kv = groups[i].split(keyValueDelim);\n    if (kv.length !== 2) {\n      continue;\n    }\n    var k = kv[0];\n    var v = kv[1];\n    callback(k, v);\n  }\n}\n\nfunction parseCue(input, cue, regionList) {\n  // Remember the original input if we need to throw an error.\n  var oInput = input;\n  // 4.1 WebVTT timestamp\n  function consumeTimeStamp() {\n    var ts = parseTimeStamp(input);\n    if (ts === null) {\n      throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                            \"Malformed timestamp: \" + oInput);\n    }\n    // Remove time stamp from input.\n    input = input.replace(/^[^\\sa-zA-Z-]+/, \"\");\n    return ts;\n  }\n\n  // 4.4.2 WebVTT cue settings\n  function consumeCueSettings(input, cue) {\n    var settings = new Settings();\n\n    parseOptions(input, function (k, v) {\n      switch (k) {\n      case \"region\":\n        // Find the last region we parsed with the same region id.\n        for (var i = regionList.length - 1; i >= 0; i--) {\n          if (regionList[i].id === v) {\n            settings.set(k, regionList[i].region);\n            break;\n          }\n        }\n        break;\n      case \"vertical\":\n        settings.alt(k, v, [\"rl\", \"lr\"]);\n        break;\n      case \"line\":\n        var vals = v.split(\",\"),\n            vals0 = vals[0];\n        settings.integer(k, vals0);\n        settings.percent(k, vals0) ? settings.set(\"snapToLines\", false) : null;\n        settings.alt(k, vals0, [\"auto\"]);\n        if (vals.length === 2) {\n          settings.alt(\"lineAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"position\":\n        vals = v.split(\",\");\n        settings.percent(k, vals[0]);\n        if (vals.length === 2) {\n          settings.alt(\"positionAlign\", vals[1], [\"start\", \"middle\", \"end\"]);\n        }\n        break;\n      case \"size\":\n        settings.percent(k, v);\n        break;\n      case \"align\":\n        settings.alt(k, v, [\"start\", \"middle\", \"end\", \"left\", \"right\"]);\n        break;\n      }\n    }, /:/, /\\s/);\n\n    // Apply default values for any missing fields.\n    cue.region = settings.get(\"region\", null);\n    cue.vertical = settings.get(\"vertical\", \"\");\n    cue.line = settings.get(\"line\", \"auto\");\n    cue.lineAlign = settings.get(\"lineAlign\", \"start\");\n    cue.snapToLines = settings.get(\"snapToLines\", true);\n    cue.size = settings.get(\"size\", 100);\n    cue.align = settings.get(\"align\", \"middle\");\n    cue.position = settings.get(\"position\", {\n      start: 0,\n      left: 0,\n      middle: 50,\n      end: 100,\n      right: 100\n    }, cue.align);\n    cue.positionAlign = settings.get(\"positionAlign\", {\n      start: \"start\",\n      left: \"start\",\n      middle: \"middle\",\n      end: \"end\",\n      right: \"end\"\n    }, cue.align);\n  }\n\n  function skipWhitespace() {\n    input = input.replace(/^\\s+/, \"\");\n  }\n\n  // 4.1 WebVTT cue timings.\n  skipWhitespace();\n  cue.startTime = consumeTimeStamp();   // (1) collect cue start time\n  skipWhitespace();\n  if (input.substr(0, 3) !== \"-->\") {     // (3) next characters must match \"-->\"\n    throw new ParsingError(ParsingError.Errors.BadTimeStamp,\n                           \"Malformed time stamp (time stamps must be separated by '-->'): \" +\n                           oInput);\n  }\n  input = input.substr(3);\n  skipWhitespace();\n  cue.endTime = consumeTimeStamp();     // (5) collect cue end time\n\n  // 4.1 WebVTT cue settings list.\n  skipWhitespace();\n  consumeCueSettings(input, cue);\n}\n\nvar ESCAPE = {\n  \"&amp;\": \"&\",\n  \"&lt;\": \"<\",\n  \"&gt;\": \">\",\n  \"&lrm;\": \"\\u200e\",\n  \"&rlm;\": \"\\u200f\",\n  \"&nbsp;\": \"\\u00a0\"\n};\n\nvar TAG_NAME = {\n  c: \"span\",\n  i: \"i\",\n  b: \"b\",\n  u: \"u\",\n  ruby: \"ruby\",\n  rt: \"rt\",\n  v: \"span\",\n  lang: \"span\"\n};\n\nvar TAG_ANNOTATION = {\n  v: \"title\",\n  lang: \"lang\"\n};\n\nvar NEEDS_PARENT = {\n  rt: \"ruby\"\n};\n\n// Parse content into a document fragment.\nfunction parseContent(window, input) {\n  function nextToken() {\n    // Check for end-of-string.\n    if (!input) {\n      return null;\n    }\n\n    // Consume 'n' characters from the input.\n    function consume(result) {\n      input = input.substr(result.length);\n      return result;\n    }\n\n    var m = input.match(/^([^<]*)(<[^>]*>?)?/);\n    // If there is some text before the next tag, return it, otherwise return\n    // the tag.\n    return consume(m[1] ? m[1] : m[2]);\n  }\n\n  // Unescape a string 's'.\n  function unescape1(e) {\n    return ESCAPE[e];\n  }\n  function unescape(s) {\n    while ((m = s.match(/&(amp|lt|gt|lrm|rlm|nbsp);/))) {\n      s = s.replace(m[0], unescape1);\n    }\n    return s;\n  }\n\n  function shouldAdd(current, element) {\n    return !NEEDS_PARENT[element.localName] ||\n           NEEDS_PARENT[element.localName] === current.localName;\n  }\n\n  // Create an element for this tag.\n  function createElement(type, annotation) {\n    var tagName = TAG_NAME[type];\n    if (!tagName) {\n      return null;\n    }\n    var element = window.document.createElement(tagName);\n    element.localName = tagName;\n    var name = TAG_ANNOTATION[type];\n    if (name && annotation) {\n      element[name] = annotation.trim();\n    }\n    return element;\n  }\n\n  var rootDiv = window.document.createElement(\"div\"),\n      current = rootDiv,\n      t,\n      tagStack = [];\n\n  while ((t = nextToken()) !== null) {\n    if (t[0] === '<') {\n      if (t[1] === \"/\") {\n        // If the closing tag matches, move back up to the parent node.\n        if (tagStack.length &&\n            tagStack[tagStack.length - 1] === t.substr(2).replace(\">\", \"\")) {\n          tagStack.pop();\n          current = current.parentNode;\n        }\n        // Otherwise just ignore the end tag.\n        continue;\n      }\n      var ts = parseTimeStamp(t.substr(1, t.length - 2));\n      var node;\n      if (ts) {\n        // Timestamps are lead nodes as well.\n        node = window.document.createProcessingInstruction(\"timestamp\", ts);\n        current.appendChild(node);\n        continue;\n      }\n      var m = t.match(/^<([^.\\s/0-9>]+)(\\.[^\\s\\\\>]+)?([^>\\\\]+)?(\\\\?)>?$/);\n      // If we can't parse the tag, skip to the next tag.\n      if (!m) {\n        continue;\n      }\n      // Try to construct an element, and ignore the tag if we couldn't.\n      node = createElement(m[1], m[3]);\n      if (!node) {\n        continue;\n      }\n      // Determine if the tag should be added based on the context of where it\n      // is placed in the cuetext.\n      if (!shouldAdd(current, node)) {\n        continue;\n      }\n      // Set the class list (as a list of classes, separated by space).\n      if (m[2]) {\n        node.className = m[2].substr(1).replace('.', ' ');\n      }\n      // Append the node to the current node, and enter the scope of the new\n      // node.\n      tagStack.push(m[1]);\n      current.appendChild(node);\n      current = node;\n      continue;\n    }\n\n    // Text nodes are leaf nodes.\n    current.appendChild(window.document.createTextNode(unescape(t)));\n  }\n\n  return rootDiv;\n}\n\n// This is a list of all the Unicode characters that have a strong\n// right-to-left category. What this means is that these characters are\n// written right-to-left for sure. It was generated by pulling all the strong\n// right-to-left characters out of the Unicode data table. That table can\n// found at: http://www.unicode.org/Public/UNIDATA/UnicodeData.txt\nvar strongRTLRanges = [[0x5be, 0x5be], [0x5c0, 0x5c0], [0x5c3, 0x5c3], [0x5c6, 0x5c6],\n [0x5d0, 0x5ea], [0x5f0, 0x5f4], [0x608, 0x608], [0x60b, 0x60b], [0x60d, 0x60d],\n [0x61b, 0x61b], [0x61e, 0x64a], [0x66d, 0x66f], [0x671, 0x6d5], [0x6e5, 0x6e6],\n [0x6ee, 0x6ef], [0x6fa, 0x70d], [0x70f, 0x710], [0x712, 0x72f], [0x74d, 0x7a5],\n [0x7b1, 0x7b1], [0x7c0, 0x7ea], [0x7f4, 0x7f5], [0x7fa, 0x7fa], [0x800, 0x815],\n [0x81a, 0x81a], [0x824, 0x824], [0x828, 0x828], [0x830, 0x83e], [0x840, 0x858],\n [0x85e, 0x85e], [0x8a0, 0x8a0], [0x8a2, 0x8ac], [0x200f, 0x200f],\n [0xfb1d, 0xfb1d], [0xfb1f, 0xfb28], [0xfb2a, 0xfb36], [0xfb38, 0xfb3c],\n [0xfb3e, 0xfb3e], [0xfb40, 0xfb41], [0xfb43, 0xfb44], [0xfb46, 0xfbc1],\n [0xfbd3, 0xfd3d], [0xfd50, 0xfd8f], [0xfd92, 0xfdc7], [0xfdf0, 0xfdfc],\n [0xfe70, 0xfe74], [0xfe76, 0xfefc], [0x10800, 0x10805], [0x10808, 0x10808],\n [0x1080a, 0x10835], [0x10837, 0x10838], [0x1083c, 0x1083c], [0x1083f, 0x10855],\n [0x10857, 0x1085f], [0x10900, 0x1091b], [0x10920, 0x10939], [0x1093f, 0x1093f],\n [0x10980, 0x109b7], [0x109be, 0x109bf], [0x10a00, 0x10a00], [0x10a10, 0x10a13],\n [0x10a15, 0x10a17], [0x10a19, 0x10a33], [0x10a40, 0x10a47], [0x10a50, 0x10a58],\n [0x10a60, 0x10a7f], [0x10b00, 0x10b35], [0x10b40, 0x10b55], [0x10b58, 0x10b72],\n [0x10b78, 0x10b7f], [0x10c00, 0x10c48], [0x1ee00, 0x1ee03], [0x1ee05, 0x1ee1f],\n [0x1ee21, 0x1ee22], [0x1ee24, 0x1ee24], [0x1ee27, 0x1ee27], [0x1ee29, 0x1ee32],\n [0x1ee34, 0x1ee37], [0x1ee39, 0x1ee39], [0x1ee3b, 0x1ee3b], [0x1ee42, 0x1ee42],\n [0x1ee47, 0x1ee47], [0x1ee49, 0x1ee49], [0x1ee4b, 0x1ee4b], [0x1ee4d, 0x1ee4f],\n [0x1ee51, 0x1ee52], [0x1ee54, 0x1ee54], [0x1ee57, 0x1ee57], [0x1ee59, 0x1ee59],\n [0x1ee5b, 0x1ee5b], [0x1ee5d, 0x1ee5d], [0x1ee5f, 0x1ee5f], [0x1ee61, 0x1ee62],\n [0x1ee64, 0x1ee64], [0x1ee67, 0x1ee6a], [0x1ee6c, 0x1ee72], [0x1ee74, 0x1ee77],\n [0x1ee79, 0x1ee7c], [0x1ee7e, 0x1ee7e], [0x1ee80, 0x1ee89], [0x1ee8b, 0x1ee9b],\n [0x1eea1, 0x1eea3], [0x1eea5, 0x1eea9], [0x1eeab, 0x1eebb], [0x10fffd, 0x10fffd]];\n\nfunction isStrongRTLChar(charCode) {\n  for (var i = 0; i < strongRTLRanges.length; i++) {\n    var currentRange = strongRTLRanges[i];\n    if (charCode >= currentRange[0] && charCode <= currentRange[1]) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nfunction determineBidi(cueDiv) {\n  var nodeStack = [],\n      text = \"\",\n      charCode;\n\n  if (!cueDiv || !cueDiv.childNodes) {\n    return \"ltr\";\n  }\n\n  function pushNodes(nodeStack, node) {\n    for (var i = node.childNodes.length - 1; i >= 0; i--) {\n      nodeStack.push(node.childNodes[i]);\n    }\n  }\n\n  function nextTextNode(nodeStack) {\n    if (!nodeStack || !nodeStack.length) {\n      return null;\n    }\n\n    var node = nodeStack.pop(),\n        text = node.textContent || node.innerText;\n    if (text) {\n      // TODO: This should match all unicode type B characters (paragraph\n      // separator characters). See issue #115.\n      var m = text.match(/^.*(\\n|\\r)/);\n      if (m) {\n        nodeStack.length = 0;\n        return m[0];\n      }\n      return text;\n    }\n    if (node.tagName === \"ruby\") {\n      return nextTextNode(nodeStack);\n    }\n    if (node.childNodes) {\n      pushNodes(nodeStack, node);\n      return nextTextNode(nodeStack);\n    }\n  }\n\n  pushNodes(nodeStack, cueDiv);\n  while ((text = nextTextNode(nodeStack))) {\n    for (var i = 0; i < text.length; i++) {\n      charCode = text.charCodeAt(i);\n      if (isStrongRTLChar(charCode)) {\n        return \"rtl\";\n      }\n    }\n  }\n  return \"ltr\";\n}\n\nfunction computeLinePos(cue) {\n  if (typeof cue.line === \"number\" &&\n      (cue.snapToLines || (cue.line >= 0 && cue.line <= 100))) {\n    return cue.line;\n  }\n  if (!cue.track || !cue.track.textTrackList ||\n      !cue.track.textTrackList.mediaElement) {\n    return -1;\n  }\n  var track = cue.track,\n      trackList = track.textTrackList,\n      count = 0;\n  for (var i = 0; i < trackList.length && trackList[i] !== track; i++) {\n    if (trackList[i].mode === \"showing\") {\n      count++;\n    }\n  }\n  return ++count * -1;\n}\n\nfunction StyleBox() {\n}\n\n// Apply styles to a div. If there is no div passed then it defaults to the\n// div on 'this'.\nStyleBox.prototype.applyStyles = function(styles, div) {\n  div = div || this.div;\n  for (var prop in styles) {\n    if (styles.hasOwnProperty(prop)) {\n      div.style[prop] = styles[prop];\n    }\n  }\n};\n\nStyleBox.prototype.formatStyle = function(val, unit) {\n  return val === 0 ? 0 : val + unit;\n};\n\n// Constructs the computed display state of the cue (a div). Places the div\n// into the overlay which should be a block level element (usually a div).\nfunction CueStyleBox(window, cue, styleOptions) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n  var color = \"rgba(255, 255, 255, 1)\";\n  var backgroundColor = \"rgba(0, 0, 0, 0.8)\";\n\n  if (isIE8) {\n    color = \"rgb(255, 255, 255)\";\n    backgroundColor = \"rgb(0, 0, 0)\";\n  }\n\n  StyleBox.call(this);\n  this.cue = cue;\n\n  // Parse our cue's text into a DOM tree rooted at 'cueDiv'. This div will\n  // have inline positioning and will function as the cue background box.\n  this.cueDiv = parseContent(window, cue.text);\n  var styles = {\n    color: color,\n    backgroundColor: backgroundColor,\n    position: \"relative\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    display: \"inline\"\n  };\n\n  if (!isIE8) {\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\";\n    styles.unicodeBidi = \"plaintext\";\n  }\n  this.applyStyles(styles, this.cueDiv);\n\n  // Create an absolutely positioned div that will be used to position the cue\n  // div. Note, all WebVTT cue-setting alignments are equivalent to the CSS\n  // mirrors of them except \"middle\" which is \"center\" in CSS.\n  this.div = window.document.createElement(\"div\");\n  styles = {\n    textAlign: cue.align === \"middle\" ? \"center\" : cue.align,\n    font: styleOptions.font,\n    whiteSpace: \"pre-line\",\n    position: \"absolute\"\n  };\n\n  if (!isIE8) {\n    styles.direction = determineBidi(this.cueDiv);\n    styles.writingMode = cue.vertical === \"\" ? \"horizontal-tb\"\n                                             : cue.vertical === \"lr\" ? \"vertical-lr\"\n                                                                     : \"vertical-rl\".\n    stylesunicodeBidi =  \"plaintext\";\n  }\n\n  this.applyStyles(styles);\n\n  this.div.appendChild(this.cueDiv);\n\n  // Calculate the distance from the reference edge of the viewport to the text\n  // position of the cue box. The reference edge will be resolved later when\n  // the box orientation styles are applied.\n  var textPos = 0;\n  switch (cue.positionAlign) {\n  case \"start\":\n    textPos = cue.position;\n    break;\n  case \"middle\":\n    textPos = cue.position - (cue.size / 2);\n    break;\n  case \"end\":\n    textPos = cue.position - cue.size;\n    break;\n  }\n\n  // Horizontal box orientation; textPos is the distance from the left edge of the\n  // area to the left edge of the box and cue.size is the distance extending to\n  // the right from there.\n  if (cue.vertical === \"\") {\n    this.applyStyles({\n      left:  this.formatStyle(textPos, \"%\"),\n      width: this.formatStyle(cue.size, \"%\")\n    });\n  // Vertical box orientation; textPos is the distance from the top edge of the\n  // area to the top edge of the box and cue.size is the height extending\n  // downwards from there.\n  } else {\n    this.applyStyles({\n      top: this.formatStyle(textPos, \"%\"),\n      height: this.formatStyle(cue.size, \"%\")\n    });\n  }\n\n  this.move = function(box) {\n    this.applyStyles({\n      top: this.formatStyle(box.top, \"px\"),\n      bottom: this.formatStyle(box.bottom, \"px\"),\n      left: this.formatStyle(box.left, \"px\"),\n      right: this.formatStyle(box.right, \"px\"),\n      height: this.formatStyle(box.height, \"px\"),\n      width: this.formatStyle(box.width, \"px\")\n    });\n  };\n}\nCueStyleBox.prototype = _objCreate(StyleBox.prototype);\nCueStyleBox.prototype.constructor = CueStyleBox;\n\n// Represents the co-ordinates of an Element in a way that we can easily\n// compute things with such as if it overlaps or intersects with another Element.\n// Can initialize it with either a StyleBox or another BoxPosition.\nfunction BoxPosition(obj) {\n  var isIE8 = (/MSIE\\s8\\.0/).test(navigator.userAgent);\n\n  // Either a BoxPosition was passed in and we need to copy it, or a StyleBox\n  // was passed in and we need to copy the results of 'getBoundingClientRect'\n  // as the object returned is readonly. All co-ordinate values are in reference\n  // to the viewport origin (top left).\n  var lh, height, width, top;\n  if (obj.div) {\n    height = obj.div.offsetHeight;\n    width = obj.div.offsetWidth;\n    top = obj.div.offsetTop;\n\n    var rects = (rects = obj.div.childNodes) && (rects = rects[0]) &&\n                rects.getClientRects && rects.getClientRects();\n    obj = obj.div.getBoundingClientRect();\n    // In certain cases the outter div will be slightly larger then the sum of\n    // the inner div's lines. This could be due to bold text, etc, on some platforms.\n    // In this case we should get the average line height and use that. This will\n    // result in the desired behaviour.\n    lh = rects ? Math.max((rects[0] && rects[0].height) || 0, obj.height / rects.length)\n               : 0;\n\n  }\n  this.left = obj.left;\n  this.right = obj.right;\n  this.top = obj.top || top;\n  this.height = obj.height || height;\n  this.bottom = obj.bottom || (top + (obj.height || height));\n  this.width = obj.width || width;\n  this.lineHeight = lh !== undefined ? lh : obj.lineHeight;\n\n  if (isIE8 && !this.lineHeight) {\n    this.lineHeight = 13;\n  }\n}\n\n// Move the box along a particular axis. Optionally pass in an amount to move\n// the box. If no amount is passed then the default is the line height of the\n// box.\nBoxPosition.prototype.move = function(axis, toMove) {\n  toMove = toMove !== undefined ? toMove : this.lineHeight;\n  switch (axis) {\n  case \"+x\":\n    this.left += toMove;\n    this.right += toMove;\n    break;\n  case \"-x\":\n    this.left -= toMove;\n    this.right -= toMove;\n    break;\n  case \"+y\":\n    this.top += toMove;\n    this.bottom += toMove;\n    break;\n  case \"-y\":\n    this.top -= toMove;\n    this.bottom -= toMove;\n    break;\n  }\n};\n\n// Check if this box overlaps another box, b2.\nBoxPosition.prototype.overlaps = function(b2) {\n  return this.left < b2.right &&\n         this.right > b2.left &&\n         this.top < b2.bottom &&\n         this.bottom > b2.top;\n};\n\n// Check if this box overlaps any other boxes in boxes.\nBoxPosition.prototype.overlapsAny = function(boxes) {\n  for (var i = 0; i < boxes.length; i++) {\n    if (this.overlaps(boxes[i])) {\n      return true;\n    }\n  }\n  return false;\n};\n\n// Check if this box is within another box.\nBoxPosition.prototype.within = function(container) {\n  return this.top >= container.top &&\n         this.bottom <= container.bottom &&\n         this.left >= container.left &&\n         this.right <= container.right;\n};\n\n// Check if this box is entirely within the container or it is overlapping\n// on the edge opposite of the axis direction passed. For example, if \"+x\" is\n// passed and the box is overlapping on the left edge of the container, then\n// return true.\nBoxPosition.prototype.overlapsOppositeAxis = function(container, axis) {\n  switch (axis) {\n  case \"+x\":\n    return this.left < container.left;\n  case \"-x\":\n    return this.right > container.right;\n  case \"+y\":\n    return this.top < container.top;\n  case \"-y\":\n    return this.bottom > container.bottom;\n  }\n};\n\n// Find the percentage of the area that this box is overlapping with another\n// box.\nBoxPosition.prototype.intersectPercentage = function(b2) {\n  var x = Math.max(0, Math.min(this.right, b2.right) - Math.max(this.left, b2.left)),\n      y = Math.max(0, Math.min(this.bottom, b2.bottom) - Math.max(this.top, b2.top)),\n      intersectArea = x * y;\n  return intersectArea / (this.height * this.width);\n};\n\n// Convert the positions from this box to CSS compatible positions using\n// the reference container's positions. This has to be done because this\n// box's positions are in reference to the viewport origin, whereas, CSS\n// values are in referecne to their respective edges.\nBoxPosition.prototype.toCSSCompatValues = function(reference) {\n  return {\n    top: this.top - reference.top,\n    bottom: reference.bottom - this.bottom,\n    left: this.left - reference.left,\n    right: reference.right - this.right,\n    height: this.height,\n    width: this.width\n  };\n};\n\n// Get an object that represents the box's position without anything extra.\n// Can pass a StyleBox, HTMLElement, or another BoxPositon.\nBoxPosition.getSimpleBoxPosition = function(obj) {\n  var height = obj.div ? obj.div.offsetHeight : obj.tagName ? obj.offsetHeight : 0;\n  var width = obj.div ? obj.div.offsetWidth : obj.tagName ? obj.offsetWidth : 0;\n  var top = obj.div ? obj.div.offsetTop : obj.tagName ? obj.offsetTop : 0;\n\n  obj = obj.div ? obj.div.getBoundingClientRect() :\n                obj.tagName ? obj.getBoundingClientRect() : obj;\n  var ret = {\n    left: obj.left,\n    right: obj.right,\n    top: obj.top || top,\n    height: obj.height || height,\n    bottom: obj.bottom || (top + (obj.height || height)),\n    width: obj.width || width\n  };\n  return ret;\n};\n\n// Move a StyleBox to its specified, or next best, position. The containerBox\n// is the box that contains the StyleBox, such as a div. boxPositions are\n// a list of other boxes that the styleBox can't overlap with.\nfunction moveBoxToLinePosition(window, styleBox, containerBox, boxPositions) {\n\n  // Find the best position for a cue box, b, on the video. The axis parameter\n  // is a list of axis, the order of which, it will move the box along. For example:\n  // Passing [\"+x\", \"-x\"] will move the box first along the x axis in the positive\n  // direction. If it doesn't find a good position for it there it will then move\n  // it along the x axis in the negative direction.\n  function findBestPosition(b, axis) {\n    var bestPosition,\n        specifiedPosition = new BoxPosition(b),\n        percentage = 1; // Highest possible so the first thing we get is better.\n\n    for (var i = 0; i < axis.length; i++) {\n      while (b.overlapsOppositeAxis(containerBox, axis[i]) ||\n             (b.within(containerBox) && b.overlapsAny(boxPositions))) {\n        b.move(axis[i]);\n      }\n      // We found a spot where we aren't overlapping anything. This is our\n      // best position.\n      if (b.within(containerBox)) {\n        return b;\n      }\n      var p = b.intersectPercentage(containerBox);\n      // If we're outside the container box less then we were on our last try\n      // then remember this position as the best position.\n      if (percentage > p) {\n        bestPosition = new BoxPosition(b);\n        percentage = p;\n      }\n      // Reset the box position to the specified position.\n      b = new BoxPosition(specifiedPosition);\n    }\n    return bestPosition || specifiedPosition;\n  }\n\n  var boxPosition = new BoxPosition(styleBox),\n      cue = styleBox.cue,\n      linePos = computeLinePos(cue),\n      axis = [];\n\n  // If we have a line number to align the cue to.\n  if (cue.snapToLines) {\n    var size;\n    switch (cue.vertical) {\n    case \"\":\n      axis = [ \"+y\", \"-y\" ];\n      size = \"height\";\n      break;\n    case \"rl\":\n      axis = [ \"+x\", \"-x\" ];\n      size = \"width\";\n      break;\n    case \"lr\":\n      axis = [ \"-x\", \"+x\" ];\n      size = \"width\";\n      break;\n    }\n\n    var step = boxPosition.lineHeight,\n        position = step * Math.round(linePos),\n        maxPosition = containerBox[size] + step,\n        initialAxis = axis[0];\n\n    // If the specified intial position is greater then the max position then\n    // clamp the box to the amount of steps it would take for the box to\n    // reach the max position.\n    if (Math.abs(position) > maxPosition) {\n      position = position < 0 ? -1 : 1;\n      position *= Math.ceil(maxPosition / step) * step;\n    }\n\n    // If computed line position returns negative then line numbers are\n    // relative to the bottom of the video instead of the top. Therefore, we\n    // need to increase our initial position by the length or width of the\n    // video, depending on the writing direction, and reverse our axis directions.\n    if (linePos < 0) {\n      position += cue.vertical === \"\" ? containerBox.height : containerBox.width;\n      axis = axis.reverse();\n    }\n\n    // Move the box to the specified position. This may not be its best\n    // position.\n    boxPosition.move(initialAxis, position);\n\n  } else {\n    // If we have a percentage line value for the cue.\n    var calculatedPercentage = (boxPosition.lineHeight / containerBox.height) * 100;\n\n    switch (cue.lineAlign) {\n    case \"middle\":\n      linePos -= (calculatedPercentage / 2);\n      break;\n    case \"end\":\n      linePos -= calculatedPercentage;\n      break;\n    }\n\n    // Apply initial line position to the cue box.\n    switch (cue.vertical) {\n    case \"\":\n      styleBox.applyStyles({\n        top: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"rl\":\n      styleBox.applyStyles({\n        left: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    case \"lr\":\n      styleBox.applyStyles({\n        right: styleBox.formatStyle(linePos, \"%\")\n      });\n      break;\n    }\n\n    axis = [ \"+y\", \"-x\", \"+x\", \"-y\" ];\n\n    // Get the box position again after we've applied the specified positioning\n    // to it.\n    boxPosition = new BoxPosition(styleBox);\n  }\n\n  var bestPosition = findBestPosition(boxPosition, axis);\n  styleBox.move(bestPosition.toCSSCompatValues(containerBox));\n}\n\nfunction WebVTT() {\n  // Nothing\n}\n\n// Helper to allow strings to be decoded instead of the default binary utf8 data.\nWebVTT.StringDecoder = function() {\n  return {\n    decode: function(data) {\n      if (!data) {\n        return \"\";\n      }\n      if (typeof data !== \"string\") {\n        throw new Error(\"Error - expected string data.\");\n      }\n      return decodeURIComponent(encodeURIComponent(data));\n    }\n  };\n};\n\nWebVTT.convertCueToDOMTree = function(window, cuetext) {\n  if (!window || !cuetext) {\n    return null;\n  }\n  return parseContent(window, cuetext);\n};\n\nvar FONT_SIZE_PERCENT = 0.05;\nvar FONT_STYLE = \"sans-serif\";\nvar CUE_BACKGROUND_PADDING = \"1.5%\";\n\n// Runs the processing model over the cues and regions passed to it.\n// @param overlay A block level element (usually a div) that the computed cues\n//                and regions will be placed into.\nWebVTT.processCues = function(window, cues, overlay) {\n  if (!window || !cues || !overlay) {\n    return null;\n  }\n\n  // Remove all previous children.\n  while (overlay.firstChild) {\n    overlay.removeChild(overlay.firstChild);\n  }\n\n  var paddedOverlay = window.document.createElement(\"div\");\n  paddedOverlay.style.position = \"absolute\";\n  paddedOverlay.style.left = \"0\";\n  paddedOverlay.style.right = \"0\";\n  paddedOverlay.style.top = \"0\";\n  paddedOverlay.style.bottom = \"0\";\n  paddedOverlay.style.margin = CUE_BACKGROUND_PADDING;\n  overlay.appendChild(paddedOverlay);\n\n  // Determine if we need to compute the display states of the cues. This could\n  // be the case if a cue's state has been changed since the last computation or\n  // if it has not been computed yet.\n  function shouldCompute(cues) {\n    for (var i = 0; i < cues.length; i++) {\n      if (cues[i].hasBeenReset || !cues[i].displayState) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  // We don't need to recompute the cues' display states. Just reuse them.\n  if (!shouldCompute(cues)) {\n    for (var i = 0; i < cues.length; i++) {\n      paddedOverlay.appendChild(cues[i].displayState);\n    }\n    return;\n  }\n\n  var boxPositions = [],\n      containerBox = BoxPosition.getSimpleBoxPosition(paddedOverlay),\n      fontSize = Math.round(containerBox.height * FONT_SIZE_PERCENT * 100) / 100;\n  var styleOptions = {\n    font: fontSize + \"px \" + FONT_STYLE\n  };\n\n  (function() {\n    var styleBox, cue;\n\n    for (var i = 0; i < cues.length; i++) {\n      cue = cues[i];\n\n      // Compute the intial position and styles of the cue div.\n      styleBox = new CueStyleBox(window, cue, styleOptions);\n      paddedOverlay.appendChild(styleBox.div);\n\n      // Move the cue div to it's correct line position.\n      moveBoxToLinePosition(window, styleBox, containerBox, boxPositions);\n\n      // Remember the computed div so that we don't have to recompute it later\n      // if we don't have too.\n      cue.displayState = styleBox.div;\n\n      boxPositions.push(BoxPosition.getSimpleBoxPosition(styleBox));\n    }\n  })();\n};\n\nWebVTT.Parser = function(window, vttjs, decoder) {\n  if (!decoder) {\n    decoder = vttjs;\n    vttjs = {};\n  }\n  if (!vttjs) {\n    vttjs = {};\n  }\n\n  this.window = window;\n  this.vttjs = vttjs;\n  this.state = \"INITIAL\";\n  this.buffer = \"\";\n  this.decoder = decoder || new TextDecoder(\"utf8\");\n  this.regionList = [];\n};\n\nWebVTT.Parser.prototype = {\n  // If the error is a ParsingError then report it to the consumer if\n  // possible. If it's not a ParsingError then throw it like normal.\n  reportOrThrowError: function(e) {\n    if (e instanceof ParsingError) {\n      this.onparsingerror && this.onparsingerror(e);\n    } else {\n      throw e;\n    }\n  },\n  parse: function (data) {\n    var self = this;\n\n    // If there is no data then we won't decode it, but will just try to parse\n    // whatever is in buffer already. This may occur in circumstances, for\n    // example when flush() is called.\n    if (data) {\n      // Try to decode the data that we received.\n      self.buffer += self.decoder.decode(data, {stream: true});\n    }\n\n    function collectNextLine() {\n      var buffer = self.buffer;\n      var pos = 0;\n      while (pos < buffer.length && buffer[pos] !== '\\r' && buffer[pos] !== '\\n') {\n        ++pos;\n      }\n      var line = buffer.substr(0, pos);\n      // Advance the buffer early in case we fail below.\n      if (buffer[pos] === '\\r') {\n        ++pos;\n      }\n      if (buffer[pos] === '\\n') {\n        ++pos;\n      }\n      self.buffer = buffer.substr(pos);\n      return line;\n    }\n\n    // 3.4 WebVTT region and WebVTT region settings syntax\n    function parseRegion(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function (k, v) {\n        switch (k) {\n        case \"id\":\n          settings.set(k, v);\n          break;\n        case \"width\":\n          settings.percent(k, v);\n          break;\n        case \"lines\":\n          settings.integer(k, v);\n          break;\n        case \"regionanchor\":\n        case \"viewportanchor\":\n          var xy = v.split(',');\n          if (xy.length !== 2) {\n            break;\n          }\n          // We have to make sure both x and y parse, so use a temporary\n          // settings object here.\n          var anchor = new Settings();\n          anchor.percent(\"x\", xy[0]);\n          anchor.percent(\"y\", xy[1]);\n          if (!anchor.has(\"x\") || !anchor.has(\"y\")) {\n            break;\n          }\n          settings.set(k + \"X\", anchor.get(\"x\"));\n          settings.set(k + \"Y\", anchor.get(\"y\"));\n          break;\n        case \"scroll\":\n          settings.alt(k, v, [\"up\"]);\n          break;\n        }\n      }, /=/, /\\s/);\n\n      // Create the region, using default values for any values that were not\n      // specified.\n      if (settings.has(\"id\")) {\n        var region = new (self.vttjs.VTTRegion || self.window.VTTRegion)();\n        region.width = settings.get(\"width\", 100);\n        region.lines = settings.get(\"lines\", 3);\n        region.regionAnchorX = settings.get(\"regionanchorX\", 0);\n        region.regionAnchorY = settings.get(\"regionanchorY\", 100);\n        region.viewportAnchorX = settings.get(\"viewportanchorX\", 0);\n        region.viewportAnchorY = settings.get(\"viewportanchorY\", 100);\n        region.scroll = settings.get(\"scroll\", \"\");\n        // Register the region.\n        self.onregion && self.onregion(region);\n        // Remember the VTTRegion for later in case we parse any VTTCues that\n        // reference it.\n        self.regionList.push({\n          id: settings.get(\"id\"),\n          region: region\n        });\n      }\n    }\n\n    // draft-pantos-http-live-streaming-20\n    // https://tools.ietf.org/html/draft-pantos-http-live-streaming-20#section-3.5\n    // 3.5 WebVTT\n    function parseTimestampMap(input) {\n      var settings = new Settings();\n\n      parseOptions(input, function(k, v) {\n        switch(k) {\n        case \"MPEGT\":\n          settings.integer(k + 'S', v);\n          break;\n        case \"LOCA\":\n          settings.set(k + 'L', parseTimeStamp(v));\n          break;\n        }\n      }, /[^\\d]:/, /,/);\n\n      self.ontimestampmap && self.ontimestampmap({\n        \"MPEGTS\": settings.get(\"MPEGTS\"),\n        \"LOCAL\": settings.get(\"LOCAL\")\n      });\n    }\n\n    // 3.2 WebVTT metadata header syntax\n    function parseHeader(input) {\n      if (input.match(/X-TIMESTAMP-MAP/)) {\n        // This line contains HLS X-TIMESTAMP-MAP metadata\n        parseOptions(input, function(k, v) {\n          switch(k) {\n          case \"X-TIMESTAMP-MAP\":\n            parseTimestampMap(v);\n            break;\n          }\n        }, /=/);\n      } else {\n        parseOptions(input, function (k, v) {\n          switch (k) {\n          case \"Region\":\n            // 3.3 WebVTT region metadata header syntax\n            parseRegion(v);\n            break;\n          }\n        }, /:/);\n      }\n\n    }\n\n    // 5.1 WebVTT file parsing.\n    try {\n      var line;\n      if (self.state === \"INITIAL\") {\n        // We can't start parsing until we have the first line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        line = collectNextLine();\n\n        var m = line.match(/^WEBVTT([ \\t].*)?$/);\n        if (!m || !m[0]) {\n          throw new ParsingError(ParsingError.Errors.BadSignature);\n        }\n\n        self.state = \"HEADER\";\n      }\n\n      var alreadyCollectedLine = false;\n      while (self.buffer) {\n        // We can't parse a line until we have the full line.\n        if (!/\\r\\n|\\n/.test(self.buffer)) {\n          return this;\n        }\n\n        if (!alreadyCollectedLine) {\n          line = collectNextLine();\n        } else {\n          alreadyCollectedLine = false;\n        }\n\n        switch (self.state) {\n        case \"HEADER\":\n          // 13-18 - Allow a header (metadata) under the WEBVTT line.\n          if (/:/.test(line)) {\n            parseHeader(line);\n          } else if (!line) {\n            // An empty line terminates the header and starts the body (cues).\n            self.state = \"ID\";\n          }\n          continue;\n        case \"NOTE\":\n          // Ignore NOTE blocks.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        case \"ID\":\n          // Check for the start of NOTE blocks.\n          if (/^NOTE($|[ \\t])/.test(line)) {\n            self.state = \"NOTE\";\n            break;\n          }\n          // 19-29 - Allow any number of line terminators, then initialize new cue values.\n          if (!line) {\n            continue;\n          }\n          self.cue = new (self.vttjs.VTTCue || self.window.VTTCue)(0, 0, \"\");\n          self.state = \"CUE\";\n          // 30-39 - Check if self line contains an optional identifier or timing data.\n          if (line.indexOf(\"-->\") === -1) {\n            self.cue.id = line;\n            continue;\n          }\n          // Process line as start of a cue.\n          /*falls through*/\n        case \"CUE\":\n          // 40 - Collect cue timings and settings.\n          try {\n            parseCue(line, self.cue, self.regionList);\n          } catch (e) {\n            self.reportOrThrowError(e);\n            // In case of an error ignore rest of the cue.\n            self.cue = null;\n            self.state = \"BADCUE\";\n            continue;\n          }\n          self.state = \"CUETEXT\";\n          continue;\n        case \"CUETEXT\":\n          var hasSubstring = line.indexOf(\"-->\") !== -1;\n          // 34 - If we have an empty line then report the cue.\n          // 35 - If we have the special substring '-->' then report the cue,\n          // but do not collect the line as we need to process the current\n          // one as a new cue.\n          if (!line || hasSubstring && (alreadyCollectedLine = true)) {\n            // We are done parsing self cue.\n            self.oncue && self.oncue(self.cue);\n            self.cue = null;\n            self.state = \"ID\";\n            continue;\n          }\n          if (self.cue.text) {\n            self.cue.text += \"\\n\";\n          }\n          self.cue.text += line;\n          continue;\n        case \"BADCUE\": // BADCUE\n          // 54-62 - Collect and discard the remaining cue.\n          if (!line) {\n            self.state = \"ID\";\n          }\n          continue;\n        }\n      }\n    } catch (e) {\n      self.reportOrThrowError(e);\n\n      // If we are currently parsing a cue, report what we have.\n      if (self.state === \"CUETEXT\" && self.cue && self.oncue) {\n        self.oncue(self.cue);\n      }\n      self.cue = null;\n      // Enter BADWEBVTT state if header was not parsed correctly otherwise\n      // another exception occurred so enter BADCUE state.\n      self.state = self.state === \"INITIAL\" ? \"BADWEBVTT\" : \"BADCUE\";\n    }\n    return this;\n  },\n  flush: function () {\n    var self = this;\n    try {\n      // Finish decoding the stream.\n      self.buffer += self.decoder.decode();\n      // Synthesize the end of the current cue or region.\n      if (self.cue || self.state === \"HEADER\") {\n        self.buffer += \"\\n\\n\";\n        self.parse();\n      }\n      // If we've flushed, parsed, and we're still on the INITIAL state then\n      // that means we don't have enough of the stream to parse the first\n      // line.\n      if (self.state === \"INITIAL\") {\n        throw new ParsingError(ParsingError.Errors.BadSignature);\n      }\n    } catch(e) {\n      self.reportOrThrowError(e);\n    }\n    self.onflush && self.onflush();\n    return this;\n  }\n};\n\nmodule.exports = WebVTT;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/videojs-vtt.js/lib/vtt.js\n// module id = dlST\n// module chunks = 2 3","<template>\r\n    <div class=\"about-us\">\r\n        <!-- 关于我们 -->\r\n        <!-- <cm-video-player></cm-video-player> -->\r\n        <cm-bradcrumb\r\n            style=\"margin:18px 0;lineHeight: 45px;fontSize:19px\"\r\n            :navTree=\"navTree\"\r\n        ></cm-bradcrumb>\r\n        <h1>联系我们</h1>\r\n        <p>总部地址：北京市西城区新文化街56号  </p>\r\n        <p>电话：010-63323856</p>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport CmVideoPlayer from '@/components/cm-video-player';\r\nimport CmBradcrumb from '@/components/cm-breadcrumb';\r\n\r\n\r\nexport default {\r\n    name : 'AboutUs',\r\n    data (){\r\n        return {\r\n            navTree: [\r\n                {\r\n                    name: '首页',\r\n                    path: 'CultureNews',\r\n                    url: '',\r\n                    nowPage: false,\r\n                    isOuter: false\r\n                },\r\n                {\r\n                    name: '联系我们',\r\n                    path: 'CultureNews',\r\n                    url: '',\r\n                    nowPage: false,\r\n                    isOuter: false\r\n                }\r\n            ],\r\n        }\r\n    },\r\n    components: {\r\n        CmVideoPlayer,\r\n        CmBradcrumb\r\n    },\r\n    created() {\r\n        console.log(this.$route.meta)\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" scoped>\r\n.about-us{\r\n    h1{\r\n        line-height : 100px;\r\n        text-align : center;\r\n        font-size : 36px;\r\n    }\r\n    p{\r\n        font-size : 16px;\r\n        margin-bottom : 50px;\r\n    }\r\n}\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/containers/AboutUs.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"about-us\"},[_c('cm-bradcrumb',{staticStyle:{\"margin\":\"18px 0\",\"lineHeight\":\"45px\",\"fontSize\":\"19px\"},attrs:{\"navTree\":_vm.navTree}}),_vm._v(\" \"),_c('h1',[_vm._v(\"联系我们\")]),_vm._v(\" \"),_c('p',[_vm._v(\"总部地址：北京市西城区新文化街56号  \")]),_vm._v(\" \"),_c('p',[_vm._v(\"电话：010-63323856\")])],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-7f411711\",\"hasScoped\":true,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/containers/AboutUs.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-7f411711\\\",\\\"scoped\\\":true,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"C:\\\\\\\\Users\\\\\\\\chao\\\\\\\\Desktop\\\\\\\\guanwang\\\\\\\\os-ui\\\\\\\\src\\\\\\\\common\\\\\\\\scss\\\\\\\\index.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./AboutUs.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./AboutUs.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./AboutUs.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-7f411711\\\",\\\"hasScoped\\\":true,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./AboutUs.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = \"data-v-7f411711\"\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/containers/AboutUs.vue\n// module id = null\n// module chunks = ","var topLevel = typeof global !== 'undefined' ? global :\n    typeof window !== 'undefined' ? window : {}\nvar minDoc = require('min-document');\n\nvar doccy;\n\nif (typeof document !== 'undefined') {\n    doccy = document;\n} else {\n    doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'];\n\n    if (!doccy) {\n        doccy = topLevel['__GLOBAL_DOCUMENT_CACHE@4'] = minDoc;\n    }\n}\n\nmodule.exports = doccy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/global/document.js\n// module id = dwO+\n// module chunks = 2 3","!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"video.js\")):\"function\"==typeof define&&define.amd?define([\"videojs\"],t):\"object\"==typeof exports?exports.VueVideoPlayer=t(require(\"video.js\")):e.VueVideoPlayer=t(e.videojs)}(this,function(e){return function(e){function t(i){if(n[i])return n[i].exports;var r=n[i]={i:i,l:!1,exports:{}};return e[i].call(r.exports,r,r.exports,t),r.l=!0,r.exports}var n={};return t.m=e,t.c=n,t.i=function(e){return e},t.d=function(e,n,i){t.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:i})},t.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return t.d(n,\"a\",n),n},t.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},t.p=\"/\",t(t.s=3)}([function(t,n){t.exports=e},function(e,t,n){\"use strict\";function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}Object.defineProperty(t,\"__esModule\",{value:!0});var r=n(0),o=function(e){return e&&e.__esModule?e:{default:e}}(r),s=window.videojs||o.default;\"function\"!=typeof Object.assign&&Object.defineProperty(Object,\"assign\",{value:function(e,t){if(null==e)throw new TypeError(\"Cannot convert undefined or null to object\");for(var n=Object(e),i=1;i<arguments.length;i++){var r=arguments[i];if(null!=r)for(var o in r)Object.prototype.hasOwnProperty.call(r,o)&&(n[o]=r[o])}return n},writable:!0,configurable:!0});var a=[\"loadeddata\",\"canplay\",\"canplaythrough\",\"play\",\"pause\",\"waiting\",\"playing\",\"ended\",\"error\"];t.default={name:\"video-player\",props:{start:{type:Number,default:0},crossOrigin:{type:String,default:\"\"},playsinline:{type:Boolean,default:!1},customEventName:{type:String,default:\"statechanged\"},options:{type:Object,required:!0},events:{type:Array,default:function(){return[]}},globalOptions:{type:Object,default:function(){return{controls:!0,controlBar:{remainingTimeDisplay:!1,playToggle:{},progressControl:{},fullscreenToggle:{},volumeMenuButton:{inline:!1,vertical:!0}},techOrder:[\"html5\"],plugins:{}}}},globalEvents:{type:Array,default:function(){return[]}}},data:function(){return{player:null,reseted:!0}},mounted:function(){this.player||this.initialize()},beforeDestroy:function(){this.player&&this.dispose()},methods:{initialize:function(){var e=this,t=Object.assign({},this.globalOptions,this.options);this.playsinline&&(this.$refs.video.setAttribute(\"playsinline\",this.playsinline),this.$refs.video.setAttribute(\"webkit-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-playsinline\",this.playsinline),this.$refs.video.setAttribute(\"x5-video-player-type\",\"h5\"),this.$refs.video.setAttribute(\"x5-video-player-fullscreen\",!1)),\"\"!==this.crossOrigin&&(this.$refs.video.crossOrigin=this.crossOrigin,this.$refs.video.setAttribute(\"crossOrigin\",this.crossOrigin));var n=function(t,n){t&&e.$emit(t,e.player),n&&e.$emit(e.customEventName,i({},t,n))};t.plugins&&delete t.plugins.__ob__;var r=this;this.player=s(this.$refs.video,t,function(){for(var e=this,t=a.concat(r.events).concat(r.globalEvents),i={},o=0;o<t.length;o++)\"string\"==typeof t[o]&&void 0===i[t[o]]&&function(t){i[t]=null,e.on(t,function(){n(t,!0)})}(t[o]);this.on(\"timeupdate\",function(){n(\"timeupdate\",this.currentTime())}),r.$emit(\"ready\",this)})},dispose:function(e){var t=this;this.player&&this.player.dispose&&(\"Flash\"!==this.player.techName_&&this.player.pause&&this.player.pause(),this.player.dispose(),this.player=null,this.$nextTick(function(){t.reseted=!1,t.$nextTick(function(){t.reseted=!0,t.$nextTick(function(){e&&e()})})}))}},watch:{options:{deep:!0,handler:function(e,t){var n=this;this.dispose(function(){e&&e.sources&&e.sources.length&&n.initialize()})}}}}},function(e,t,n){\"use strict\";Object.defineProperty(t,\"__esModule\",{value:!0});var i=n(1),r=n.n(i);for(var o in i)[\"default\",\"default\"].indexOf(o)<0&&function(e){n.d(t,e,function(){return i[e]})}(o);var s=n(5),a=n(4),l=a(r.a,s.a,!1,null,null,null);t.default=l.exports},function(e,t,n){\"use strict\";function i(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(t,\"__esModule\",{value:!0}),t.install=t.videoPlayer=t.videojs=void 0;var r=n(0),o=i(r),s=n(2),a=i(s),l=window.videojs||o.default,u=function(e,t){t&&(t.options&&(a.default.props.globalOptions.default=function(){return t.options}),t.events&&(a.default.props.globalEvents.default=function(){return t.events})),e.component(a.default.name,a.default)},d={videojs:l,videoPlayer:a.default,install:u};t.default=d,t.videojs=l,t.videoPlayer=a.default,t.install=u},function(e,t){e.exports=function(e,t,n,i,r,o){var s,a=e=e||{},l=typeof e.default;\"object\"!==l&&\"function\"!==l||(s=e,a=e.default);var u=\"function\"==typeof a?a.options:a;t&&(u.render=t.render,u.staticRenderFns=t.staticRenderFns,u._compiled=!0),n&&(u.functional=!0),r&&(u._scopeId=r);var d;if(o?(d=function(e){e=e||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,e||\"undefined\"==typeof __VUE_SSR_CONTEXT__||(e=__VUE_SSR_CONTEXT__),i&&i.call(this,e),e&&e._registeredComponents&&e._registeredComponents.add(o)},u._ssrRegister=d):i&&(d=i),d){var c=u.functional,f=c?u.render:u.beforeCreate;c?(u._injectStyles=d,u.render=function(e,t){return d.call(t),f(e,t)}):u.beforeCreate=f?[].concat(f,d):[d]}return{esModule:s,exports:a,options:u}}},function(e,t,n){\"use strict\";var i=function(){var e=this,t=e.$createElement,n=e._self._c||t;return e.reseted?n(\"div\",{staticClass:\"video-player\"},[n(\"video\",{ref:\"video\",staticClass:\"video-js\"})]):e._e()},r=[],o={render:i,staticRenderFns:r};t.a=o}])});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-video-player/dist/vue-video-player.js\n// module id = iqGf\n// module chunks = 2 3","module.exports = extend\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction extend() {\n    var target = {}\n\n    for (var i = 0; i < arguments.length; i++) {\n        var source = arguments[i]\n\n        for (var key in source) {\n            if (hasOwnProperty.call(source, key)) {\n                target[key] = source[key]\n            }\n        }\n    }\n\n    return target\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/xtend/immutable.js\n// module id = q+vg\n// module chunks = 2 3","<template>\r\n    <div class=\"cm-video-player\">\r\n        <!-- 我是播放器 -->\r\n          <video-player  class=\"video-player-box\"\r\n                        ref=\"videoPlayer\"\r\n                        :options=\"playerOptions\"\r\n                        :playsinline=\"true\"\r\n                        customEventName=\"customstatechangedeventname\"\r\n                        @ready=\"playerReadied\">\r\n        </video-player>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport 'video.js/dist/video-js.css'\r\nimport { videoPlayer } from 'vue-video-player'\r\n\r\nexport default {\r\n    name : 'CmVideoPlayer',\r\n    data (){\r\n        return {\r\n            playerOptions: {\r\n                // videojs options\r\n                muted: true,\r\n                language: 'en',\r\n                playbackRates: [0.7, 1.0, 1.5, 2.0],\r\n                sources: [{\r\n                    type: \"video/mp4\",\r\n                    src: ''\r\n                }],\r\n                // poster:require('./../common/images/demo.png'),\r\n                width : '100%'\r\n            }\r\n        }\r\n    },\r\n    components: {\r\n        videoPlayer\r\n    },\r\n    computed: {\r\n      player() {\r\n        return this.$refs.videoPlayer.player\r\n      }\r\n    },\r\n    props : {\r\n        src : {\r\n            type : String,\r\n            default : 'https://cdn.theguardian.tv/webM/2015/07/20/150716YesMen_synd_768k_vp8.webm'\r\n        },\r\n        width : {\r\n            type : String,\r\n            default : '100%'\r\n        },\r\n        height : {\r\n            type : String,\r\n            default : '100%'\r\n        },\r\n        imgUrl : {\r\n            type : String,\r\n            default : ''\r\n        }\r\n    },\r\n    created(){\r\n        this.playerOptions.sources[0].src = this.src;\r\n        this.playerOptions.width = this.width;\r\n        this.playerOptions.height = this.height;\r\n        this.playerOptions.poster = this.imgUrl;\r\n    },\r\n    methods: {\r\n      // listen event\r\n      onPlayerPlay(player) {\r\n        // console.log('player play!', player)\r\n      },\r\n      onPlayerPause(player) {\r\n        // console.log('player pause!', player)\r\n      },\r\n      // ...player event\r\n\r\n      // or listen state event\r\n      playerStateChanged(playerCurrentState) {\r\n        // console.log('player current update state', playerCurrentState)\r\n      },\r\n\r\n      // player is ready\r\n      playerReadied(player) {\r\n        console.log('the player is readied', player)\r\n        // you can use it to do something...\r\n        // player.[methods]\r\n      }\r\n    }\r\n}\r\n</script>\r\n\r\n<style lang=\"scss\" >\r\n.video-js{\r\n    margin : 0 auto;\r\n    position: relative;\r\n}\r\n.video-js .vjs-big-play-button{\r\n    position : absolute;\r\n    top : 50% !important;\r\n    left : 50% !important;\r\n    /*transform: translate(-50%,-50%);*/\r\n    @include center;\r\n}\r\n.vjs_video_1-dimensions{\r\n    position: relative;\r\n}\r\n.cm-video-player{\r\n    width : 100%;\r\n    .video-player-box{\r\n        width : 100%;\r\n    }\r\n}\r\n\r\n</style>\n\n\n// WEBPACK FOOTER //\n// src/components/cm-video-player.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"cm-video-player\"},[_c('video-player',{ref:\"videoPlayer\",staticClass:\"video-player-box\",attrs:{\"options\":_vm.playerOptions,\"playsinline\":true,\"customEventName\":\"customstatechangedeventname\"},on:{\"ready\":_vm.playerReadied}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-3f265d78\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/cm-video-player.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true,\\\"publicPath\\\":\\\"../../\\\"}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-3f265d78\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!sass-loader?{\\\"sourceMap\\\":true}!sass-resources-loader?{\\\"resources\\\":\\\"C:\\\\\\\\Users\\\\\\\\chao\\\\\\\\Desktop\\\\\\\\guanwang\\\\\\\\os-ui\\\\\\\\src\\\\\\\\common\\\\\\\\scss\\\\\\\\index.scss\\\"}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./cm-video-player.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-video-player.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./cm-video-player.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-3f265d78\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./cm-video-player.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/cm-video-player.vue\n// module id = null\n// module chunks = ","var trim = require('trim')\n  , forEach = require('for-each')\n  , isArray = function(arg) {\n      return Object.prototype.toString.call(arg) === '[object Array]';\n    }\n\nmodule.exports = function (headers) {\n  if (!headers)\n    return {}\n\n  var result = {}\n\n  forEach(\n      trim(headers).split('\\n')\n    , function (row) {\n        var index = row.indexOf(':')\n          , key = trim(row.slice(0, index)).toLowerCase()\n          , value = trim(row.slice(index + 1))\n\n        if (typeof(result[key]) === 'undefined') {\n          result[key] = value\n        } else if (isArray(result[key])) {\n          result[key].push(value)\n        } else {\n          result[key] = [ result[key], value ]\n        }\n      }\n  )\n\n  return result\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/parse-headers/parse-headers.js\n// module id = sD9O\n// module chunks = 2 3","/**\n * @license\n * Video.js 6.11.0 <http://videojs.com/>\n * Copyright Brightcove, Inc. <https://www.brightcove.com/>\n * Available under Apache License Version 2.0\n * <https://github.com/videojs/video.js/blob/master/LICENSE>\n *\n * Includes vtt.js <https://github.com/mozilla/vtt.js>\n * Available under Apache License Version 2.0\n * <https://github.com/mozilla/vtt.js/blob/master/LICENSE>\n */\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar window = _interopDefault(require('global/window'));\nvar document = _interopDefault(require('global/document'));\nvar tsml = _interopDefault(require('tsml'));\nvar safeParseTuple = _interopDefault(require('safe-json-parse/tuple'));\nvar xhr = _interopDefault(require('xhr'));\nvar vtt = _interopDefault(require('videojs-vtt.js'));\n\nvar version = \"6.11.0\";\n\n/**\n * @file browser.js\n * @module browser\n */\nvar USER_AGENT = window.navigator && window.navigator.userAgent || '';\nvar webkitVersionMap = /AppleWebKit\\/([\\d.]+)/i.exec(USER_AGENT);\nvar appleWebkitVersion = webkitVersionMap ? parseFloat(webkitVersionMap.pop()) : null;\n\n/*\n * Device is an iPhone\n *\n * @type {Boolean}\n * @constant\n * @private\n */\nvar IS_IPAD = /iPad/i.test(USER_AGENT);\n\n// The Facebook app's UIWebView identifies as both an iPhone and iPad, so\n// to identify iPhones, we need to exclude iPads.\n// http://artsy.github.io/blog/2012/10/18/the-perils-of-ios-user-agent-sniffing/\nvar IS_IPHONE = /iPhone/i.test(USER_AGENT) && !IS_IPAD;\nvar IS_IPOD = /iPod/i.test(USER_AGENT);\nvar IS_IOS = IS_IPHONE || IS_IPAD || IS_IPOD;\n\nvar IOS_VERSION = function () {\n  var match = USER_AGENT.match(/OS (\\d+)_/i);\n\n  if (match && match[1]) {\n    return match[1];\n  }\n  return null;\n}();\n\nvar IS_ANDROID = /Android/i.test(USER_AGENT);\nvar ANDROID_VERSION = function () {\n  // This matches Android Major.Minor.Patch versions\n  // ANDROID_VERSION is Major.Minor as a Number, if Minor isn't available, then only Major is returned\n  var match = USER_AGENT.match(/Android (\\d+)(?:\\.(\\d+))?(?:\\.(\\d+))*/i);\n\n  if (!match) {\n    return null;\n  }\n\n  var major = match[1] && parseFloat(match[1]);\n  var minor = match[2] && parseFloat(match[2]);\n\n  if (major && minor) {\n    return parseFloat(match[1] + '.' + match[2]);\n  } else if (major) {\n    return major;\n  }\n  return null;\n}();\n\n// Old Android is defined as Version older than 2.3, and requiring a webkit version of the android browser\nvar IS_OLD_ANDROID = IS_ANDROID && /webkit/i.test(USER_AGENT) && ANDROID_VERSION < 2.3;\nvar IS_NATIVE_ANDROID = IS_ANDROID && ANDROID_VERSION < 5 && appleWebkitVersion < 537;\n\nvar IS_FIREFOX = /Firefox/i.test(USER_AGENT);\nvar IS_EDGE = /Edge/i.test(USER_AGENT);\nvar IS_CHROME = !IS_EDGE && (/Chrome/i.test(USER_AGENT) || /CriOS/i.test(USER_AGENT));\nvar CHROME_VERSION = function () {\n  var match = USER_AGENT.match(/(Chrome|CriOS)\\/(\\d+)/);\n\n  if (match && match[2]) {\n    return parseFloat(match[2]);\n  }\n  return null;\n}();\nvar IS_IE8 = /MSIE\\s8\\.0/.test(USER_AGENT);\nvar IE_VERSION = function () {\n  var result = /MSIE\\s(\\d+)\\.\\d/.exec(USER_AGENT);\n  var version = result && parseFloat(result[1]);\n\n  if (!version && /Trident\\/7.0/i.test(USER_AGENT) && /rv:11.0/.test(USER_AGENT)) {\n    // IE 11 has a different user agent string than other IE versions\n    version = 11.0;\n  }\n\n  return version;\n}();\n\nvar IS_SAFARI = /Safari/i.test(USER_AGENT) && !IS_CHROME && !IS_ANDROID && !IS_EDGE;\nvar IS_ANY_SAFARI = (IS_SAFARI || IS_IOS) && !IS_CHROME;\n\nvar TOUCH_ENABLED = isReal() && ('ontouchstart' in window || window.navigator.maxTouchPoints || window.DocumentTouch && window.document instanceof window.DocumentTouch);\n\nvar BACKGROUND_SIZE_SUPPORTED = isReal() && 'backgroundSize' in window.document.createElement('video').style;\n\nvar browser = (Object.freeze || Object)({\n\tIS_IPAD: IS_IPAD,\n\tIS_IPHONE: IS_IPHONE,\n\tIS_IPOD: IS_IPOD,\n\tIS_IOS: IS_IOS,\n\tIOS_VERSION: IOS_VERSION,\n\tIS_ANDROID: IS_ANDROID,\n\tANDROID_VERSION: ANDROID_VERSION,\n\tIS_OLD_ANDROID: IS_OLD_ANDROID,\n\tIS_NATIVE_ANDROID: IS_NATIVE_ANDROID,\n\tIS_FIREFOX: IS_FIREFOX,\n\tIS_EDGE: IS_EDGE,\n\tIS_CHROME: IS_CHROME,\n\tCHROME_VERSION: CHROME_VERSION,\n\tIS_IE8: IS_IE8,\n\tIE_VERSION: IE_VERSION,\n\tIS_SAFARI: IS_SAFARI,\n\tIS_ANY_SAFARI: IS_ANY_SAFARI,\n\tTOUCH_ENABLED: TOUCH_ENABLED,\n\tBACKGROUND_SIZE_SUPPORTED: BACKGROUND_SIZE_SUPPORTED\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\n\n\n\n\n\n\n\n\n\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar taggedTemplateLiteralLoose = function (strings, raw) {\n  strings.raw = raw;\n  return strings;\n};\n\n/**\n * @file obj.js\n * @module obj\n */\n\n/**\n * @callback obj:EachCallback\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n */\n\n/**\n * @callback obj:ReduceCallback\n *\n * @param {Mixed} accum\n *        The value that is accumulating over the reduce loop.\n *\n * @param {Mixed} value\n *        The current key for the object that is being iterated over.\n *\n * @param {string} key\n *        The current key-value for object that is being iterated over\n *\n * @return {Mixed}\n *         The new accumulated value.\n */\nvar toString = Object.prototype.toString;\n\n/**\n * Get the keys of an Object\n *\n * @param {Object}\n *        The Object to get the keys from\n *\n * @return {string[]}\n *         An array of the keys from the object. Returns an empty array if the\n *         object passed in was invalid or had no keys.\n *\n * @private\n */\nvar keys = function keys(object) {\n  return isObject(object) ? Object.keys(object) : [];\n};\n\n/**\n * Array-like iteration for objects.\n *\n * @param {Object} object\n *        The object to iterate over\n *\n * @param {obj:EachCallback} fn\n *        The callback function which is called for each key in the object.\n */\nfunction each(object, fn) {\n  keys(object).forEach(function (key) {\n    return fn(object[key], key);\n  });\n}\n\n/**\n * Array-like reduce for objects.\n *\n * @param {Object} object\n *        The Object that you want to reduce.\n *\n * @param {Function} fn\n *         A callback function which is called for each key in the object. It\n *         receives the accumulated value and the per-iteration value and key\n *         as arguments.\n *\n * @param {Mixed} [initial = 0]\n *        Starting value\n *\n * @return {Mixed}\n *         The final accumulated value.\n */\nfunction reduce(object, fn) {\n  var initial = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n\n  return keys(object).reduce(function (accum, key) {\n    return fn(accum, object[key], key);\n  }, initial);\n}\n\n/**\n * Object.assign-style object shallow merge/extend.\n *\n * @param  {Object} target\n * @param  {Object} ...sources\n * @return {Object}\n */\nfunction assign(target) {\n  for (var _len = arguments.length, sources = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    sources[_key - 1] = arguments[_key];\n  }\n\n  if (Object.assign) {\n    return Object.assign.apply(Object, [target].concat(sources));\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      target[key] = value;\n    });\n  });\n\n  return target;\n}\n\n/**\n * Returns whether a value is an object of any kind - including DOM nodes,\n * arrays, regular expressions, etc. Not functions, though.\n *\n * This avoids the gotcha where using `typeof` on a `null` value\n * results in `'object'`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isObject(value) {\n  return !!value && (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object';\n}\n\n/**\n * Returns whether an object appears to be a \"plain\" object - that is, a\n * direct instance of `Object`.\n *\n * @param  {Object} value\n * @return {Boolean}\n */\nfunction isPlain(value) {\n  return isObject(value) && toString.call(value) === '[object Object]' && value.constructor === Object;\n}\n\n/**\n * @file log.js\n * @module log\n */\nvar log = void 0;\n\n// This is the private tracking variable for logging level.\nvar level = 'info';\n\n// This is the private tracking variable for the logging history.\nvar history = [];\n\n/**\n * Log messages to the console and history based on the type of message\n *\n * @private\n * @param  {string} type\n *         The name of the console method to use.\n *\n * @param  {Array} args\n *         The arguments to be passed to the matching console method.\n *\n * @param  {boolean} [stringify]\n *         By default, only old IEs should get console argument stringification,\n *         but this is exposed as a parameter to facilitate testing.\n */\nvar logByType = function logByType(type, args) {\n  var stringify = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : !!IE_VERSION && IE_VERSION < 11;\n\n  var lvl = log.levels[level];\n  var lvlRegExp = new RegExp('^(' + lvl + ')$');\n\n  if (type !== 'log') {\n\n    // Add the type to the front of the message when it's not \"log\".\n    args.unshift(type.toUpperCase() + ':');\n  }\n\n  // Add a clone of the args at this point to history.\n  if (history) {\n    history.push([].concat(args));\n  }\n\n  // Add console prefix after adding to history.\n  args.unshift('VIDEOJS:');\n\n  // If there's no console then don't try to output messages, but they will\n  // still be stored in history.\n  if (!window.console) {\n    return;\n  }\n\n  // Was setting these once outside of this function, but containing them\n  // in the function makes it easier to test cases where console doesn't exist\n  // when the module is executed.\n  var fn = window.console[type];\n\n  if (!fn && type === 'debug') {\n    // Certain browsers don't have support for console.debug. For those, we\n    // should default to the closest comparable log.\n    fn = window.console.info || window.console.log;\n  }\n\n  // Bail out if there's no console or if this type is not allowed by the\n  // current logging level.\n  if (!fn || !lvl || !lvlRegExp.test(type)) {\n    return;\n  }\n\n  // IEs previous to 11 log objects uselessly as \"[object Object]\"; so, JSONify\n  // objects and arrays for those less-capable browsers.\n  if (stringify) {\n    args = args.map(function (a) {\n      if (isObject(a) || Array.isArray(a)) {\n        try {\n          return JSON.stringify(a);\n        } catch (x) {\n          return String(a);\n        }\n      }\n\n      // Cast to string before joining, so we get null and undefined explicitly\n      // included in output (as we would in a modern console).\n      return String(a);\n    }).join(' ');\n  }\n\n  // Old IE versions do not allow .apply() for console methods (they are\n  // reported as objects rather than functions).\n  if (!fn.apply) {\n    fn(args);\n  } else {\n    fn[Array.isArray(args) ? 'apply' : 'call'](window.console, args);\n  }\n};\n\n/**\n * Logs plain debug messages. Similar to `console.log`.\n *\n * @class\n * @param    {Mixed[]} args\n *           One or more messages or objects that should be logged.\n */\nlog = function log() {\n  for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n    args[_key] = arguments[_key];\n  }\n\n  logByType('log', args);\n};\n\n/**\n * Enumeration of available logging levels, where the keys are the level names\n * and the values are `|`-separated strings containing logging methods allowed\n * in that logging level. These strings are used to create a regular expression\n * matching the function name being called.\n *\n * Levels provided by video.js are:\n *\n * - `off`: Matches no calls. Any value that can be cast to `false` will have\n *   this effect. The most restrictive.\n * - `all`: Matches only Video.js-provided functions (`debug`, `log`,\n *   `log.warn`, and `log.error`).\n * - `debug`: Matches `log.debug`, `log`, `log.warn`, and `log.error` calls.\n * - `info` (default): Matches `log`, `log.warn`, and `log.error` calls.\n * - `warn`: Matches `log.warn` and `log.error` calls.\n * - `error`: Matches only `log.error` calls.\n *\n * @type {Object}\n */\nlog.levels = {\n  all: 'debug|log|warn|error',\n  off: '',\n  debug: 'debug|log|warn|error',\n  info: 'log|warn|error',\n  warn: 'warn|error',\n  error: 'error',\n  DEFAULT: level\n};\n\n/**\n * Get or set the current logging level. If a string matching a key from\n * {@link log.levels} is provided, acts as a setter. Regardless of argument,\n * returns the current logging level.\n *\n * @param  {string} [lvl]\n *         Pass to set a new logging level.\n *\n * @return {string}\n *         The current logging level.\n */\nlog.level = function (lvl) {\n  if (typeof lvl === 'string') {\n    if (!log.levels.hasOwnProperty(lvl)) {\n      throw new Error('\"' + lvl + '\" in not a valid log level');\n    }\n    level = lvl;\n  }\n  return level;\n};\n\n/**\n * Returns an array containing everything that has been logged to the history.\n *\n * This array is a shallow clone of the internal history record. However, its\n * contents are _not_ cloned; so, mutating objects inside this array will\n * mutate them in history.\n *\n * @return {Array}\n */\nlog.history = function () {\n  return history ? [].concat(history) : [];\n};\n\n/**\n * Clears the internal history tracking, but does not prevent further history\n * tracking.\n */\nlog.history.clear = function () {\n  if (history) {\n    history.length = 0;\n  }\n};\n\n/**\n * Disable history tracking if it is currently enabled.\n */\nlog.history.disable = function () {\n  if (history !== null) {\n    history.length = 0;\n    history = null;\n  }\n};\n\n/**\n * Enable history tracking if it is currently disabled.\n */\nlog.history.enable = function () {\n  if (history === null) {\n    history = [];\n  }\n};\n\n/**\n * Logs error messages. Similar to `console.error`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as an error\n */\nlog.error = function () {\n  for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    args[_key2] = arguments[_key2];\n  }\n\n  return logByType('error', args);\n};\n\n/**\n * Logs warning messages. Similar to `console.warn`.\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as a warning.\n */\nlog.warn = function () {\n  for (var _len3 = arguments.length, args = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    args[_key3] = arguments[_key3];\n  }\n\n  return logByType('warn', args);\n};\n\n/**\n * Logs debug messages. Similar to `console.debug`, but may also act as a comparable\n * log if `console.debug` is not available\n *\n * @param {Mixed[]} args\n *        One or more messages or objects that should be logged as debug.\n */\nlog.debug = function () {\n  for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n    args[_key4] = arguments[_key4];\n  }\n\n  return logByType('debug', args);\n};\n\nvar log$1 = log;\n\n/**\n * @file computed-style.js\n * @module computed-style\n */\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is needed because in Firefox, if the player is loaded in an iframe with\n * `display:none`, then `getComputedStyle` returns `null`, so, we do a null-check to\n * make sure  that the player doesn't break in these cases.\n *\n * @param {Element} el\n *        The element you want the computed style of\n *\n * @param {string} prop\n *        The property name you want\n *\n * @see https://bugzilla.mozilla.org/show_bug.cgi?id=548397\n *\n * @static\n * @const\n */\nfunction computedStyle(el, prop) {\n  if (!el || !prop) {\n    return '';\n  }\n\n  if (typeof window.getComputedStyle === 'function') {\n    var cs = window.getComputedStyle(el);\n\n    return cs ? cs[prop] : '';\n  }\n\n  return el.currentStyle[prop] || '';\n}\n\nvar _templateObject = taggedTemplateLiteralLoose(['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.'], ['Setting attributes in the second argument of createEl()\\n                has been deprecated. Use the third argument instead.\\n                createEl(type, properties, attributes). Attempting to set ', ' to ', '.']);\n\n/**\n * @file dom.js\n * @module dom\n */\n/**\n * Detect if a value is a string with any non-whitespace characters.\n *\n * @param {string} str\n *        The string to check\n *\n * @return {boolean}\n *         - True if the string is non-blank\n *         - False otherwise\n *\n */\nfunction isNonBlankString(str) {\n  return typeof str === 'string' && /\\S/.test(str);\n}\n\n/**\n * Throws an error if the passed string has whitespace. This is used by\n * class methods to be relatively consistent with the classList API.\n *\n * @param {string} str\n *         The string to check for whitespace.\n *\n * @throws {Error}\n *         Throws an error if there is whitespace in the string.\n *\n */\nfunction throwIfWhitespace(str) {\n  if (/\\s/.test(str)) {\n    throw new Error('class has illegal whitespace characters');\n  }\n}\n\n/**\n * Produce a regular expression for matching a className within an elements className.\n *\n * @param {string} className\n *         The className to generate the RegExp for.\n *\n * @return {RegExp}\n *         The RegExp that will check for a specific `className` in an elements\n *         className.\n */\nfunction classRegExp(className) {\n  return new RegExp('(^|\\\\s)' + className + '($|\\\\s)');\n}\n\n/**\n * Whether the current DOM interface appears to be real.\n *\n * @return {Boolean}\n */\nfunction isReal() {\n  return (\n\n    // Both document and window will never be undefined thanks to `global`.\n    document === window.document &&\n\n    // In IE < 9, DOM methods return \"object\" as their type, so all we can\n    // confidently check is that it exists.\n    typeof document.createElement !== 'undefined'\n  );\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @param {Mixed} value\n *        The thing to check\n *\n * @return {boolean}\n *         - True if it is a DOM element\n *         - False otherwise\n */\nfunction isEl(value) {\n  return isObject(value) && value.nodeType === 1;\n}\n\n/**\n * Determines if the current DOM is embedded in an iframe.\n *\n * @return {boolean}\n *\n */\nfunction isInFrame() {\n\n  // We need a try/catch here because Safari will throw errors when attempting\n  // to get either `parent` or `self`\n  try {\n    return window.parent !== window.self;\n  } catch (x) {\n    return true;\n  }\n}\n\n/**\n * Creates functions to query the DOM using a given method.\n *\n * @param {string} method\n *         The method to create the query with.\n *\n * @return {Function}\n *         The query method\n */\nfunction createQuerier(method) {\n  return function (selector, context) {\n    if (!isNonBlankString(selector)) {\n      return document[method](null);\n    }\n    if (isNonBlankString(context)) {\n      context = document.querySelector(context);\n    }\n\n    var ctx = isEl(context) ? context : document;\n\n    return ctx[method] && ctx[method](selector);\n  };\n}\n\n/**\n * Creates an element and applies properties.\n *\n * @param {string} [tagName='div']\n *         Name of tag to be created.\n *\n * @param {Object} [properties={}]\n *         Element properties to be applied.\n *\n * @param {Object} [attributes={}]\n *         Element attributes to be applied.\n *\n * @param {String|Element|TextNode|Array|Function} [content]\n *         Contents for the element (see: {@link dom:normalizeContent})\n *\n * @return {Element}\n *         The element that was created.\n */\nfunction createEl() {\n  var tagName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n  var properties = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var content = arguments[3];\n\n  var el = document.createElement(tagName);\n\n  Object.getOwnPropertyNames(properties).forEach(function (propName) {\n    var val = properties[propName];\n\n    // See #2176\n    // We originally were accepting both properties and attributes in the\n    // same object, but that doesn't work so well.\n    if (propName.indexOf('aria-') !== -1 || propName === 'role' || propName === 'type') {\n      log$1.warn(tsml(_templateObject, propName, val));\n      el.setAttribute(propName, val);\n\n      // Handle textContent since it's not supported everywhere and we have a\n      // method for it.\n    } else if (propName === 'textContent') {\n      textContent(el, val);\n    } else {\n      el[propName] = val;\n    }\n  });\n\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    el.setAttribute(attrName, attributes[attrName]);\n  });\n\n  if (content) {\n    appendContent(el, content);\n  }\n\n  return el;\n}\n\n/**\n * Injects text into an element, replacing any existing contents entirely.\n *\n * @param {Element} el\n *        The element to add text content into\n *\n * @param {string} text\n *        The text content to add.\n *\n * @return {Element}\n *         The element with added text content.\n */\nfunction textContent(el, text) {\n  if (typeof el.textContent === 'undefined') {\n    el.innerText = text;\n  } else {\n    el.textContent = text;\n  }\n  return el;\n}\n\n/**\n * Insert an element as the first child node of another\n *\n * @param {Element} child\n *        Element to insert\n *\n * @param {Element} parent\n *        Element to insert child into\n */\nfunction prependTo(child, parent) {\n  if (parent.firstChild) {\n    parent.insertBefore(child, parent.firstChild);\n  } else {\n    parent.appendChild(child);\n  }\n}\n\n/**\n * Check if an element has a CSS class\n *\n * @param {Element} element\n *        Element to check\n *\n * @param {string} classToCheck\n *        Class name to check for\n *\n * @return {boolean}\n *         - True if the element had the class\n *         - False otherwise.\n *\n * @throws {Error}\n *         Throws an error if `classToCheck` has white space.\n */\nfunction hasClass(element, classToCheck) {\n  throwIfWhitespace(classToCheck);\n  if (element.classList) {\n    return element.classList.contains(classToCheck);\n  }\n  return classRegExp(classToCheck).test(element.className);\n}\n\n/**\n * Add a CSS class name to an element\n *\n * @param {Element} element\n *        Element to add class name to.\n *\n * @param {string} classToAdd\n *        Class name to add.\n *\n * @return {Element}\n *         The dom element with the added class name.\n */\nfunction addClass(element, classToAdd) {\n  if (element.classList) {\n    element.classList.add(classToAdd);\n\n    // Don't need to `throwIfWhitespace` here because `hasElClass` will do it\n    // in the case of classList not being supported.\n  } else if (!hasClass(element, classToAdd)) {\n    element.className = (element.className + ' ' + classToAdd).trim();\n  }\n\n  return element;\n}\n\n/**\n * Remove a CSS class name from an element\n *\n * @param {Element} element\n *        Element to remove a class name from.\n *\n * @param {string} classToRemove\n *        Class name to remove\n *\n * @return {Element}\n *         The dom element with class name removed.\n */\nfunction removeClass(element, classToRemove) {\n  if (element.classList) {\n    element.classList.remove(classToRemove);\n  } else {\n    throwIfWhitespace(classToRemove);\n    element.className = element.className.split(/\\s+/).filter(function (c) {\n      return c !== classToRemove;\n    }).join(' ');\n  }\n\n  return element;\n}\n\n/**\n * The callback definition for toggleElClass.\n *\n * @callback Dom~PredicateCallback\n * @param {Element} element\n *        The DOM element of the Component.\n *\n * @param {string} classToToggle\n *        The `className` that wants to be toggled\n *\n * @return {boolean|undefined}\n *         - If true the `classToToggle` will get added to `element`.\n *         - If false the `classToToggle` will get removed from `element`.\n *         - If undefined this callback will be ignored\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @param {Element} element\n *        The element to toggle a class name on.\n *\n * @param {string} classToToggle\n *        The class that should be toggled\n *\n * @param {boolean|PredicateCallback} [predicate]\n *        See the return value for {@link Dom~PredicateCallback}\n *\n * @return {Element}\n *         The element with a class that has been toggled.\n */\nfunction toggleClass(element, classToToggle, predicate) {\n\n  // This CANNOT use `classList` internally because IE does not support the\n  // second parameter to the `classList.toggle()` method! Which is fine because\n  // `classList` will be used by the add/remove functions.\n  var has = hasClass(element, classToToggle);\n\n  if (typeof predicate === 'function') {\n    predicate = predicate(element, classToToggle);\n  }\n\n  if (typeof predicate !== 'boolean') {\n    predicate = !has;\n  }\n\n  // If the necessary class operation matches the current state of the\n  // element, no action is required.\n  if (predicate === has) {\n    return;\n  }\n\n  if (predicate) {\n    addClass(element, classToToggle);\n  } else {\n    removeClass(element, classToToggle);\n  }\n\n  return element;\n}\n\n/**\n * Apply attributes to an HTML element.\n *\n * @param {Element} el\n *        Element to add attributes to.\n *\n * @param {Object} [attributes]\n *        Attributes to be applied.\n */\nfunction setAttributes(el, attributes) {\n  Object.getOwnPropertyNames(attributes).forEach(function (attrName) {\n    var attrValue = attributes[attrName];\n\n    if (attrValue === null || typeof attrValue === 'undefined' || attrValue === false) {\n      el.removeAttribute(attrName);\n    } else {\n      el.setAttribute(attrName, attrValue === true ? '' : attrValue);\n    }\n  });\n}\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @param {Element} tag\n *        Element from which to get tag attributes.\n *\n * @return {Object}\n *         All attributes of the element.\n */\nfunction getAttributes(tag) {\n  var obj = {};\n\n  // known boolean attributes\n  // we can check for matching boolean properties, but older browsers\n  // won't know about HTML5 boolean attributes that we still read from\n  var knownBooleans = ',' + 'autoplay,controls,playsinline,loop,muted,default,defaultMuted' + ',';\n\n  if (tag && tag.attributes && tag.attributes.length > 0) {\n    var attrs = tag.attributes;\n\n    for (var i = attrs.length - 1; i >= 0; i--) {\n      var attrName = attrs[i].name;\n      var attrVal = attrs[i].value;\n\n      // check for known booleans\n      // the matching element property will return a value for typeof\n      if (typeof tag[attrName] === 'boolean' || knownBooleans.indexOf(',' + attrName + ',') !== -1) {\n        // the value of an included boolean attribute is typically an empty\n        // string ('') which would equal false if we just check for a false value.\n        // we also don't want support bad code like autoplay='false'\n        attrVal = attrVal !== null ? true : false;\n      }\n\n      obj[attrName] = attrVal;\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Get the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to get the value of\n *\n * @return {string}\n *         value of the attribute\n */\nfunction getAttribute(el, attribute) {\n  return el.getAttribute(attribute);\n}\n\n/**\n * Set the value of an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to set\n *\n * @param {string} value\n *        Value to set the attribute to\n */\nfunction setAttribute(el, attribute, value) {\n  el.setAttribute(attribute, value);\n}\n\n/**\n * Remove an element's attribute\n *\n * @param {Element} el\n *        A DOM element\n *\n * @param {string} attribute\n *        Attribute to remove\n */\nfunction removeAttribute(el, attribute) {\n  el.removeAttribute(attribute);\n}\n\n/**\n * Attempt to block the ability to select text while dragging controls\n */\nfunction blockTextSelection() {\n  document.body.focus();\n  document.onselectstart = function () {\n    return false;\n  };\n}\n\n/**\n * Turn off text selection blocking\n */\nfunction unblockTextSelection() {\n  document.onselectstart = function () {\n    return true;\n  };\n}\n\n/**\n * Identical to the native `getBoundingClientRect` function, but ensures that\n * the method is supported at all (it is in all browsers we claim to support)\n * and that the element is in the DOM before continuing.\n *\n * This wrapper function also shims properties which are not provided by some\n * older browsers (namely, IE8).\n *\n * Additionally, some browsers do not support adding properties to a\n * `ClientRect`/`DOMRect` object; so, we shallow-copy it with the standard\n * properties (except `x` and `y` which are not widely supported). This helps\n * avoid implementations where keys are non-enumerable.\n *\n * @param  {Element} el\n *         Element whose `ClientRect` we want to calculate.\n *\n * @return {Object|undefined}\n *         Always returns a plain\n */\nfunction getBoundingClientRect(el) {\n  if (el && el.getBoundingClientRect && el.parentNode) {\n    var rect = el.getBoundingClientRect();\n    var result = {};\n\n    ['bottom', 'height', 'left', 'right', 'top', 'width'].forEach(function (k) {\n      if (rect[k] !== undefined) {\n        result[k] = rect[k];\n      }\n    });\n\n    if (!result.height) {\n      result.height = parseFloat(computedStyle(el, 'height'));\n    }\n\n    if (!result.width) {\n      result.width = parseFloat(computedStyle(el, 'width'));\n    }\n\n    return result;\n  }\n}\n\n/**\n * The postion of a DOM element on the page.\n *\n * @typedef {Object} module:dom~Position\n *\n * @property {number} left\n *           Pixels to the left\n *\n * @property {number} top\n *           Pixels on top\n */\n\n/**\n * Offset Left.\n * getBoundingClientRect technique from\n * John Resig\n *\n * @see http://ejohn.org/blog/getboundingclientrect-is-awesome/\n *\n * @param {Element} el\n *        Element from which to get offset\n *\n * @return {module:dom~Position}\n *         The position of the element that was passed in.\n */\nfunction findPosition(el) {\n  var box = void 0;\n\n  if (el.getBoundingClientRect && el.parentNode) {\n    box = el.getBoundingClientRect();\n  }\n\n  if (!box) {\n    return {\n      left: 0,\n      top: 0\n    };\n  }\n\n  var docEl = document.documentElement;\n  var body = document.body;\n\n  var clientLeft = docEl.clientLeft || body.clientLeft || 0;\n  var scrollLeft = window.pageXOffset || body.scrollLeft;\n  var left = box.left + scrollLeft - clientLeft;\n\n  var clientTop = docEl.clientTop || body.clientTop || 0;\n  var scrollTop = window.pageYOffset || body.scrollTop;\n  var top = box.top + scrollTop - clientTop;\n\n  // Android sometimes returns slightly off decimal values, so need to round\n  return {\n    left: Math.round(left),\n    top: Math.round(top)\n  };\n}\n\n/**\n * x and y coordinates for a dom element or mouse pointer\n *\n * @typedef {Object} Dom~Coordinates\n *\n * @property {number} x\n *           x coordinate in pixels\n *\n * @property {number} y\n *           y coordinate in pixels\n */\n\n/**\n * Get pointer position in element\n * Returns an object with x and y coordinates.\n * The base on the coordinates are the bottom left of the element.\n *\n * @param {Element} el\n *        Element on which to get the pointer position on\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {Dom~Coordinates}\n *         A Coordinates object corresponding to the mouse position.\n *\n */\nfunction getPointerPosition(el, event) {\n  var position = {};\n  var box = findPosition(el);\n  var boxW = el.offsetWidth;\n  var boxH = el.offsetHeight;\n\n  var boxY = box.top;\n  var boxX = box.left;\n  var pageY = event.pageY;\n  var pageX = event.pageX;\n\n  if (event.changedTouches) {\n    pageX = event.changedTouches[0].pageX;\n    pageY = event.changedTouches[0].pageY;\n  }\n\n  position.y = Math.max(0, Math.min(1, (boxY - pageY + boxH) / boxH));\n  position.x = Math.max(0, Math.min(1, (pageX - boxX) / boxW));\n\n  return position;\n}\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @param {Mixed} value\n *        Check if this value is a text node.\n *\n * @return {boolean}\n *         - True if it is a text node\n *         - False otherwise\n */\nfunction isTextNode(value) {\n  return isObject(value) && value.nodeType === 3;\n}\n\n/**\n * Empties the contents of an element.\n *\n * @param {Element} el\n *        The element to empty children from\n *\n * @return {Element}\n *         The element with no children\n */\nfunction emptyEl(el) {\n  while (el.firstChild) {\n    el.removeChild(el.firstChild);\n  }\n  return el;\n}\n\n/**\n * Normalizes content for eventual insertion into the DOM.\n *\n * This allows a wide range of content definition methods, but protects\n * from falling into the trap of simply writing to `innerHTML`, which is\n * an XSS concern.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        - String: Normalized into a text node.\n *        - Element/TextNode: Passed through.\n *        - Array: A one-dimensional array of strings, elements, nodes, or functions\n *          (which return single strings, elements, or nodes).\n *        - Function: If the sole argument, is expected to produce a string, element,\n *          node, or array as defined above.\n *\n * @return {Array}\n *         All of the content that was passed in normalized.\n */\nfunction normalizeContent(content) {\n\n  // First, invoke content if it is a function. If it produces an array,\n  // that needs to happen before normalization.\n  if (typeof content === 'function') {\n    content = content();\n  }\n\n  // Next up, normalize to an array, so one or many items can be normalized,\n  // filtered, and returned.\n  return (Array.isArray(content) ? content : [content]).map(function (value) {\n\n    // First, invoke value if it is a function to produce a new value,\n    // which will be subsequently normalized to a Node of some kind.\n    if (typeof value === 'function') {\n      value = value();\n    }\n\n    if (isEl(value) || isTextNode(value)) {\n      return value;\n    }\n\n    if (typeof value === 'string' && /\\S/.test(value)) {\n      return document.createTextNode(value);\n    }\n  }).filter(function (value) {\n    return value;\n  });\n}\n\n/**\n * Normalizes and appends content to an element.\n *\n * @param {Element} el\n *        Element to append normalized content to.\n *\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with appended normalized content.\n */\nfunction appendContent(el, content) {\n  normalizeContent(content).forEach(function (node) {\n    return el.appendChild(node);\n  });\n  return el;\n}\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * @param {Element} el\n *        Element to insert normalized content into.\n *\n * @param {String|Element|TextNode|Array|Function} content\n *        See the `content` argument of {@link dom:normalizeContent}\n *\n * @return {Element}\n *         The element with inserted normalized content.\n *\n */\nfunction insertContent(el, content) {\n  return appendContent(emptyEl(el), content);\n}\n\n/**\n * Check if event was a single left click\n *\n * @param {EventTarget~Event} event\n *        Event object\n *\n * @return {boolean}\n *         - True if a left click\n *         - False if not a left click\n */\nfunction isSingleLeftClick(event) {\n  // Note: if you create something draggable, be sure to\n  // call it on both `mousedown` and `mousemove` event,\n  // otherwise `mousedown` should be enough for a button\n\n  if (event.button === undefined && event.buttons === undefined) {\n    // Why do we need `buttons` ?\n    // Because, middle mouse sometimes have this:\n    // e.button === 0 and e.buttons === 4\n    // Furthermore, we want to prevent combination click, something like\n    // HOLD middlemouse then left click, that would be\n    // e.button === 0, e.buttons === 5\n    // just `button` is not gonna work\n\n    // Alright, then what this block does ?\n    // this is for chrome `simulate mobile devices`\n    // I want to support this as well\n\n    return true;\n  }\n\n  if (event.button === 0 && event.buttons === undefined) {\n    // Touch screen, sometimes on some specific device, `buttons`\n    // doesn't have anything (safari on ios, blackberry...)\n\n    return true;\n  }\n\n  if (IE_VERSION === 9) {\n    // Ignore IE9\n\n    return true;\n  }\n\n  if (event.button !== 0 || event.buttons !== 1) {\n    // This is the reason we have those if else block above\n    // if any special case we can catch and let it slide\n    // we do it above, when get to here, this definitely\n    // is-not-left-click\n\n    return false;\n  }\n\n  return true;\n}\n\n/**\n * Finds a single DOM element matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *        A valid CSS selector, which will be passed to `querySelector`.\n *\n * @param {Element|String} [context=document]\n *        A DOM element within which to query. Can also be a selector\n *        string in which case the first matching element will be used\n *        as context. If missing (or no element matches selector), falls\n *        back to `document`.\n *\n * @return {Element|null}\n *         The element that was found or null.\n */\nvar $ = createQuerier('querySelector');\n\n/**\n * Finds a all DOM elements matching `selector` within the optional\n * `context` of another DOM element (defaulting to `document`).\n *\n * @param {string} selector\n *           A valid CSS selector, which will be passed to `querySelectorAll`.\n *\n * @param {Element|String} [context=document]\n *           A DOM element within which to query. Can also be a selector\n *           string in which case the first matching element will be used\n *           as context. If missing (or no element matches selector), falls\n *           back to `document`.\n *\n * @return {NodeList}\n *         A element list of elements that were found. Will be empty if none were found.\n *\n */\nvar $$ = createQuerier('querySelectorAll');\n\n\n\nvar Dom = (Object.freeze || Object)({\n\tisReal: isReal,\n\tisEl: isEl,\n\tisInFrame: isInFrame,\n\tcreateEl: createEl,\n\ttextContent: textContent,\n\tprependTo: prependTo,\n\thasClass: hasClass,\n\taddClass: addClass,\n\tremoveClass: removeClass,\n\ttoggleClass: toggleClass,\n\tsetAttributes: setAttributes,\n\tgetAttributes: getAttributes,\n\tgetAttribute: getAttribute,\n\tsetAttribute: setAttribute,\n\tremoveAttribute: removeAttribute,\n\tblockTextSelection: blockTextSelection,\n\tunblockTextSelection: unblockTextSelection,\n\tgetBoundingClientRect: getBoundingClientRect,\n\tfindPosition: findPosition,\n\tgetPointerPosition: getPointerPosition,\n\tisTextNode: isTextNode,\n\temptyEl: emptyEl,\n\tnormalizeContent: normalizeContent,\n\tappendContent: appendContent,\n\tinsertContent: insertContent,\n\tisSingleLeftClick: isSingleLeftClick,\n\t$: $,\n\t$$: $$\n});\n\n/**\n * @file guid.js\n * @module guid\n */\n\n/**\n * Unique ID for an element or function\n * @type {Number}\n */\nvar _guid = 1;\n\n/**\n * Get a unique auto-incrementing ID by number that has not been returned before.\n *\n * @return {number}\n *         A new unique ID.\n */\nfunction newGUID() {\n  return _guid++;\n}\n\n/**\n * @file dom-data.js\n * @module dom-data\n */\n/**\n * Element Data Store.\n *\n * Allows for binding data to an element without putting it directly on the\n * element. Ex. Event listeners are stored here.\n * (also from jsninja.com, slightly modified and updated for closure compiler)\n *\n * @type {Object}\n * @private\n */\nvar elData = {};\n\n/*\n * Unique attribute name to store an element's guid in\n *\n * @type {String}\n * @constant\n * @private\n */\nvar elIdAttr = 'vdata' + new Date().getTime();\n\n/**\n * Returns the cache object where data for an element is stored\n *\n * @param {Element} el\n *        Element to store data for.\n *\n * @return {Object}\n *         The cache object for that el that was passed in.\n */\nfunction getData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    id = el[elIdAttr] = newGUID();\n  }\n\n  if (!elData[id]) {\n    elData[id] = {};\n  }\n\n  return elData[id];\n}\n\n/**\n * Returns whether or not an element has cached data\n *\n * @param {Element} el\n *        Check if this element has cached data.\n *\n * @return {boolean}\n *         - True if the DOM element has cached data.\n *         - False otherwise.\n */\nfunction hasData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return false;\n  }\n\n  return !!Object.getOwnPropertyNames(elData[id]).length;\n}\n\n/**\n * Delete data for the element from the cache and the guid attr from getElementById\n *\n * @param {Element} el\n *        Remove cached data for this element.\n */\nfunction removeData(el) {\n  var id = el[elIdAttr];\n\n  if (!id) {\n    return;\n  }\n\n  // Remove all stored data\n  delete elData[id];\n\n  // Remove the elIdAttr property from the DOM node\n  try {\n    delete el[elIdAttr];\n  } catch (e) {\n    if (el.removeAttribute) {\n      el.removeAttribute(elIdAttr);\n    } else {\n      // IE doesn't appear to support removeAttribute on the document element\n      el[elIdAttr] = null;\n    }\n  }\n}\n\n/**\n * @file events.js. An Event System (John Resig - Secrets of a JS Ninja http://jsninja.com/)\n * (Original book version wasn't completely usable, so fixed some things and made Closure Compiler compatible)\n * This should work very similarly to jQuery's events, however it's based off the book version which isn't as\n * robust as jquery's, so there's probably some differences.\n *\n * @module events\n */\n\n/**\n * Clean up the listener cache and dispatchers\n *\n * @param {Element|Object} elem\n *        Element to clean up\n *\n * @param {string} type\n *        Type of event to clean up\n */\nfunction _cleanUpEvents(elem, type) {\n  var data = getData(elem);\n\n  // Remove the events of a particular type if there are none left\n  if (data.handlers[type].length === 0) {\n    delete data.handlers[type];\n    // data.handlers[type] = null;\n    // Setting to null was causing an error with data.handlers\n\n    // Remove the meta-handler from the element\n    if (elem.removeEventListener) {\n      elem.removeEventListener(type, data.dispatcher, false);\n    } else if (elem.detachEvent) {\n      elem.detachEvent('on' + type, data.dispatcher);\n    }\n  }\n\n  // Remove the events object if there are no types left\n  if (Object.getOwnPropertyNames(data.handlers).length <= 0) {\n    delete data.handlers;\n    delete data.dispatcher;\n    delete data.disabled;\n  }\n\n  // Finally remove the element data if there is no data left\n  if (Object.getOwnPropertyNames(data).length === 0) {\n    removeData(elem);\n  }\n}\n\n/**\n * Loops through an array of event types and calls the requested method for each type.\n *\n * @param {Function} fn\n *        The event method we want to use.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} callback\n *        Event listener.\n */\nfunction _handleMultipleEvents(fn, elem, types, callback) {\n  types.forEach(function (type) {\n    // Call the event method for each one of the types\n    fn(elem, type, callback);\n  });\n}\n\n/**\n * Fix a native event to have standard property values\n *\n * @param {Object} event\n *        Event object to fix.\n *\n * @return {Object}\n *         Fixed event object.\n */\nfunction fixEvent(event) {\n\n  function returnTrue() {\n    return true;\n  }\n\n  function returnFalse() {\n    return false;\n  }\n\n  // Test if fixing up is needed\n  // Used to check if !event.stopPropagation instead of isPropagationStopped\n  // But native events return true for stopPropagation, but don't have\n  // other expected methods like isPropagationStopped. Seems to be a problem\n  // with the Javascript Ninja code. So we're just overriding all events now.\n  if (!event || !event.isPropagationStopped) {\n    var old = event || window.event;\n\n    event = {};\n    // Clone the old object so that we can modify the values event = {};\n    // IE8 Doesn't like when you mess with native event properties\n    // Firefox returns false for event.hasOwnProperty('type') and other props\n    //  which makes copying more difficult.\n    // TODO: Probably best to create a whitelist of event props\n    for (var key in old) {\n      // Safari 6.0.3 warns you if you try to copy deprecated layerX/Y\n      // Chrome warns you if you try to copy deprecated keyboardEvent.keyLocation\n      // and webkitMovementX/Y\n      if (key !== 'layerX' && key !== 'layerY' && key !== 'keyLocation' && key !== 'webkitMovementX' && key !== 'webkitMovementY') {\n        // Chrome 32+ warns if you try to copy deprecated returnValue, but\n        // we still want to if preventDefault isn't supported (IE8).\n        if (!(key === 'returnValue' && old.preventDefault)) {\n          event[key] = old[key];\n        }\n      }\n    }\n\n    // The event occurred on this element\n    if (!event.target) {\n      event.target = event.srcElement || document;\n    }\n\n    // Handle which other element the event is related to\n    if (!event.relatedTarget) {\n      event.relatedTarget = event.fromElement === event.target ? event.toElement : event.fromElement;\n    }\n\n    // Stop the default browser action\n    event.preventDefault = function () {\n      if (old.preventDefault) {\n        old.preventDefault();\n      }\n      event.returnValue = false;\n      old.returnValue = false;\n      event.defaultPrevented = true;\n    };\n\n    event.defaultPrevented = false;\n\n    // Stop the event from bubbling\n    event.stopPropagation = function () {\n      if (old.stopPropagation) {\n        old.stopPropagation();\n      }\n      event.cancelBubble = true;\n      old.cancelBubble = true;\n      event.isPropagationStopped = returnTrue;\n    };\n\n    event.isPropagationStopped = returnFalse;\n\n    // Stop the event from bubbling and executing other handlers\n    event.stopImmediatePropagation = function () {\n      if (old.stopImmediatePropagation) {\n        old.stopImmediatePropagation();\n      }\n      event.isImmediatePropagationStopped = returnTrue;\n      event.stopPropagation();\n    };\n\n    event.isImmediatePropagationStopped = returnFalse;\n\n    // Handle mouse position\n    if (event.clientX !== null && event.clientX !== undefined) {\n      var doc = document.documentElement;\n      var body = document.body;\n\n      event.pageX = event.clientX + (doc && doc.scrollLeft || body && body.scrollLeft || 0) - (doc && doc.clientLeft || body && body.clientLeft || 0);\n      event.pageY = event.clientY + (doc && doc.scrollTop || body && body.scrollTop || 0) - (doc && doc.clientTop || body && body.clientTop || 0);\n    }\n\n    // Handle key presses\n    event.which = event.charCode || event.keyCode;\n\n    // Fix button for mouse clicks:\n    // 0 == left; 1 == middle; 2 == right\n    if (event.button !== null && event.button !== undefined) {\n\n      // The following is disabled because it does not pass videojs-standard\n      // and... yikes.\n      /* eslint-disable */\n      event.button = event.button & 1 ? 0 : event.button & 4 ? 1 : event.button & 2 ? 2 : 0;\n      /* eslint-enable */\n    }\n  }\n\n  // Returns fixed-up instance\n  return event;\n}\n\n/**\n * Whether passive event listeners are supported\n */\nvar _supportsPassive = false;\n\n(function () {\n  try {\n    var opts = Object.defineProperty({}, 'passive', {\n      get: function get() {\n        _supportsPassive = true;\n      }\n    });\n\n    window.addEventListener('test', null, opts);\n    window.removeEventListener('test', null, opts);\n  } catch (e) {\n    // disregard\n  }\n})();\n\n/**\n * Touch events Chrome expects to be passive\n */\nvar passiveEvents = ['touchstart', 'touchmove'];\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @param {Element|Object} elem\n *        Element or object to bind listeners to\n *\n * @param {string|string[]} type\n *        Type of event to bind to.\n *\n * @param {EventTarget~EventListener} fn\n *        Event listener.\n */\nfunction on(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(on, elem, type, fn);\n  }\n\n  var data = getData(elem);\n\n  // We need a place to store all our handler data\n  if (!data.handlers) {\n    data.handlers = {};\n  }\n\n  if (!data.handlers[type]) {\n    data.handlers[type] = [];\n  }\n\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  data.handlers[type].push(fn);\n\n  if (!data.dispatcher) {\n    data.disabled = false;\n\n    data.dispatcher = function (event, hash) {\n\n      if (data.disabled) {\n        return;\n      }\n\n      event = fixEvent(event);\n\n      var handlers = data.handlers[event.type];\n\n      if (handlers) {\n        // Copy handlers so if handlers are added/removed during the process it doesn't throw everything off.\n        var handlersCopy = handlers.slice(0);\n\n        for (var m = 0, n = handlersCopy.length; m < n; m++) {\n          if (event.isImmediatePropagationStopped()) {\n            break;\n          } else {\n            try {\n              handlersCopy[m].call(elem, event, hash);\n            } catch (e) {\n              log$1.error(e);\n            }\n          }\n        }\n      }\n    };\n  }\n\n  if (data.handlers[type].length === 1) {\n    if (elem.addEventListener) {\n      var options = false;\n\n      if (_supportsPassive && passiveEvents.indexOf(type) > -1) {\n        options = { passive: true };\n      }\n      elem.addEventListener(type, data.dispatcher, options);\n    } else if (elem.attachEvent) {\n      elem.attachEvent('on' + type, data.dispatcher);\n    }\n  }\n}\n\n/**\n * Removes event listeners from an element\n *\n * @param {Element|Object} elem\n *        Object to remove listeners from.\n *\n * @param {string|string[]} [type]\n *        Type of listener to remove. Don't include to remove all events from element.\n *\n * @param {EventTarget~EventListener} [fn]\n *        Specific listener to remove. Don't include to remove listeners for an event\n *        type.\n */\nfunction off(elem, type, fn) {\n  // Don't want to add a cache object through getElData if not needed\n  if (!hasData(elem)) {\n    return;\n  }\n\n  var data = getData(elem);\n\n  // If no events exist, nothing to unbind\n  if (!data.handlers) {\n    return;\n  }\n\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(off, elem, type, fn);\n  }\n\n  // Utility function\n  var removeType = function removeType(el, t) {\n    data.handlers[t] = [];\n    _cleanUpEvents(el, t);\n  };\n\n  // Are we removing all bound events?\n  if (type === undefined) {\n    for (var t in data.handlers) {\n      if (Object.prototype.hasOwnProperty.call(data.handlers || {}, t)) {\n        removeType(elem, t);\n      }\n    }\n    return;\n  }\n\n  var handlers = data.handlers[type];\n\n  // If no handlers exist, nothing to unbind\n  if (!handlers) {\n    return;\n  }\n\n  // If no listener was provided, remove all listeners for type\n  if (!fn) {\n    removeType(elem, type);\n    return;\n  }\n\n  // We're only removing a single handler\n  if (fn.guid) {\n    for (var n = 0; n < handlers.length; n++) {\n      if (handlers[n].guid === fn.guid) {\n        handlers.splice(n--, 1);\n      }\n    }\n  }\n\n  _cleanUpEvents(elem, type);\n}\n\n/**\n * Trigger an event for an element\n *\n * @param {Element|Object} elem\n *        Element to trigger an event on\n *\n * @param {EventTarget~Event|string} event\n *        A string (the type) or an event object with a type attribute\n *\n * @param {Object} [hash]\n *        data hash to pass along with the event\n *\n * @return {boolean|undefined}\n *         - Returns the opposite of `defaultPrevented` if default was prevented\n *         - Otherwise returns undefined\n */\nfunction trigger(elem, event, hash) {\n  // Fetches element data and a reference to the parent (for bubbling).\n  // Don't want to add a data object to cache for every parent,\n  // so checking hasElData first.\n  var elemData = hasData(elem) ? getData(elem) : {};\n  var parent = elem.parentNode || elem.ownerDocument;\n  // type = event.type || event,\n  // handler;\n\n  // If an event name was passed as a string, creates an event out of it\n  if (typeof event === 'string') {\n    event = { type: event, target: elem };\n  } else if (!event.target) {\n    event.target = elem;\n  }\n\n  // Normalizes the event properties.\n  event = fixEvent(event);\n\n  // If the passed element has a dispatcher, executes the established handlers.\n  if (elemData.dispatcher) {\n    elemData.dispatcher.call(elem, event, hash);\n  }\n\n  // Unless explicitly stopped or the event does not bubble (e.g. media events)\n  // recursively calls this function to bubble the event up the DOM.\n  if (parent && !event.isPropagationStopped() && event.bubbles === true) {\n    trigger.call(null, parent, event, hash);\n\n    // If at the top of the DOM, triggers the default action unless disabled.\n  } else if (!parent && !event.defaultPrevented) {\n    var targetData = getData(event.target);\n\n    // Checks if the target has a default action for this event.\n    if (event.target[event.type]) {\n      // Temporarily disables event dispatching on the target as we have already executed the handler.\n      targetData.disabled = true;\n      // Executes the default action.\n      if (typeof event.target[event.type] === 'function') {\n        event.target[event.type]();\n      }\n      // Re-enables event dispatching.\n      targetData.disabled = false;\n    }\n  }\n\n  // Inform the triggerer if the default was prevented by returning false\n  return !event.defaultPrevented;\n}\n\n/**\n * Trigger a listener only once for an event\n *\n * @param {Element|Object} elem\n *        Element or object to bind to.\n *\n * @param {string|string[]} type\n *        Name/type of event\n *\n * @param {Event~EventListener} fn\n *        Event Listener function\n */\nfunction one(elem, type, fn) {\n  if (Array.isArray(type)) {\n    return _handleMultipleEvents(one, elem, type, fn);\n  }\n  var func = function func() {\n    off(elem, type, func);\n    fn.apply(this, arguments);\n  };\n\n  // copy the guid to the new function so it can removed using the original function's ID\n  func.guid = fn.guid = fn.guid || newGUID();\n  on(elem, type, func);\n}\n\nvar Events = (Object.freeze || Object)({\n\tfixEvent: fixEvent,\n\ton: on,\n\toff: off,\n\ttrigger: trigger,\n\tone: one\n});\n\n/**\n * @file setup.js - Functions for setting up a player without\n * user interaction based on the data-setup `attribute` of the video tag.\n *\n * @module setup\n */\nvar _windowLoaded = false;\nvar videojs$2 = void 0;\n\n/**\n * Set up any tags that have a data-setup `attribute` when the player is started.\n */\nvar autoSetup = function autoSetup() {\n\n  // Protect against breakage in non-browser environments and check global autoSetup option.\n  if (!isReal() || videojs$2.options.autoSetup === false) {\n    return;\n  }\n\n  // One day, when we stop supporting IE8, go back to this, but in the meantime...*hack hack hack*\n  // var vids = Array.prototype.slice.call(document.getElementsByTagName('video'));\n  // var audios = Array.prototype.slice.call(document.getElementsByTagName('audio'));\n  // var mediaEls = vids.concat(audios);\n\n  // Because IE8 doesn't support calling slice on a node list, we need to loop\n  // through each list of elements to build up a new, combined list of elements.\n  var vids = document.getElementsByTagName('video');\n  var audios = document.getElementsByTagName('audio');\n  var divs = document.getElementsByTagName('video-js');\n  var mediaEls = [];\n\n  if (vids && vids.length > 0) {\n    for (var i = 0, e = vids.length; i < e; i++) {\n      mediaEls.push(vids[i]);\n    }\n  }\n\n  if (audios && audios.length > 0) {\n    for (var _i = 0, _e = audios.length; _i < _e; _i++) {\n      mediaEls.push(audios[_i]);\n    }\n  }\n\n  if (divs && divs.length > 0) {\n    for (var _i2 = 0, _e2 = divs.length; _i2 < _e2; _i2++) {\n      mediaEls.push(divs[_i2]);\n    }\n  }\n\n  // Check if any media elements exist\n  if (mediaEls && mediaEls.length > 0) {\n\n    for (var _i3 = 0, _e3 = mediaEls.length; _i3 < _e3; _i3++) {\n      var mediaEl = mediaEls[_i3];\n\n      // Check if element exists, has getAttribute func.\n      // IE seems to consider typeof el.getAttribute == 'object' instead of\n      // 'function' like expected, at least when loading the player immediately.\n      if (mediaEl && mediaEl.getAttribute) {\n\n        // Make sure this player hasn't already been set up.\n        if (mediaEl.player === undefined) {\n          var options = mediaEl.getAttribute('data-setup');\n\n          // Check if data-setup attr exists.\n          // We only auto-setup if they've added the data-setup attr.\n          if (options !== null) {\n            // Create new video.js instance.\n            videojs$2(mediaEl);\n          }\n        }\n\n        // If getAttribute isn't defined, we need to wait for the DOM.\n      } else {\n        autoSetupTimeout(1);\n        break;\n      }\n    }\n\n    // No videos were found, so keep looping unless page is finished loading.\n  } else if (!_windowLoaded) {\n    autoSetupTimeout(1);\n  }\n};\n\n/**\n * Wait until the page is loaded before running autoSetup. This will be called in\n * autoSetup if `hasLoaded` returns false.\n *\n * @param {number} wait\n *        How long to wait in ms\n *\n * @param {module:videojs} [vjs]\n *        The videojs library function\n */\nfunction autoSetupTimeout(wait, vjs) {\n  if (vjs) {\n    videojs$2 = vjs;\n  }\n\n  window.setTimeout(autoSetup, wait);\n}\n\nif (isReal() && document.readyState === 'complete') {\n  _windowLoaded = true;\n} else {\n  /**\n   * Listen for the load event on window, and set _windowLoaded to true.\n   *\n   * @listens load\n   */\n  one(window, 'load', function () {\n    _windowLoaded = true;\n  });\n}\n\n/**\n * @file stylesheet.js\n * @module stylesheet\n */\n/**\n * Create a DOM syle element given a className for it.\n *\n * @param {string} className\n *        The className to add to the created style element.\n *\n * @return {Element}\n *         The element that was created.\n */\nvar createStyleElement = function createStyleElement(className) {\n  var style = document.createElement('style');\n\n  style.className = className;\n\n  return style;\n};\n\n/**\n * Add text to a DOM element.\n *\n * @param {Element} el\n *        The Element to add text content to.\n *\n * @param {string} content\n *        The text to add to the element.\n */\nvar setTextContent = function setTextContent(el, content) {\n  if (el.styleSheet) {\n    el.styleSheet.cssText = content;\n  } else {\n    el.textContent = content;\n  }\n};\n\n/**\n * @file fn.js\n * @module fn\n */\n/**\n * Bind (a.k.a proxy or Context). A simple method for changing the context of a function\n * It also stores a unique id on the function so it can be easily removed from events.\n *\n * @param {Mixed} context\n *        The object to bind as scope.\n *\n * @param {Function} fn\n *        The function to be bound to a scope.\n *\n * @param {number} [uid]\n *        An optional unique ID for the function to be set\n *\n * @return {Function}\n *         The new function that will be bound into the context given\n */\nvar bind = function bind(context, fn, uid) {\n  // Make sure the function has a unique ID\n  if (!fn.guid) {\n    fn.guid = newGUID();\n  }\n\n  // Create the new function that changes the context\n  var bound = function bound() {\n    return fn.apply(context, arguments);\n  };\n\n  // Allow for the ability to individualize this function\n  // Needed in the case where multiple objects might share the same prototype\n  // IF both items add an event listener with the same function, then you try to remove just one\n  // it will remove both because they both have the same guid.\n  // when using this, you need to use the bind method when you remove the listener as well.\n  // currently used in text tracks\n  bound.guid = uid ? uid + '_' + fn.guid : fn.guid;\n\n  return bound;\n};\n\n/**\n * Wraps the given function, `fn`, with a new function that only invokes `fn`\n * at most once per every `wait` milliseconds.\n *\n * @param  {Function} fn\n *         The function to be throttled.\n *\n * @param  {Number}   wait\n *         The number of milliseconds by which to throttle.\n *\n * @return {Function}\n */\nvar throttle = function throttle(fn, wait) {\n  var last = Date.now();\n\n  var throttled = function throttled() {\n    var now = Date.now();\n\n    if (now - last >= wait) {\n      fn.apply(undefined, arguments);\n      last = now;\n    }\n  };\n\n  return throttled;\n};\n\n/**\n * Creates a debounced function that delays invoking `func` until after `wait`\n * milliseconds have elapsed since the last time the debounced function was\n * invoked.\n *\n * Inspired by lodash and underscore implementations.\n *\n * @param  {Function} func\n *         The function to wrap with debounce behavior.\n *\n * @param  {number} wait\n *         The number of milliseconds to wait after the last invocation.\n *\n * @param  {boolean} [immediate]\n *         Whether or not to invoke the function immediately upon creation.\n *\n * @param  {Object} [context=window]\n *         The \"context\" in which the debounced function should debounce. For\n *         example, if this function should be tied to a Video.js player,\n *         the player can be passed here. Alternatively, defaults to the\n *         global `window` object.\n *\n * @return {Function}\n *         A debounced function.\n */\nvar debounce = function debounce(func, wait, immediate) {\n  var context = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : window;\n\n  var timeout = void 0;\n\n  /* eslint-disable consistent-this */\n  return function () {\n    var self = this;\n    var args = arguments;\n\n    var _later = function later() {\n      timeout = null;\n      _later = null;\n      if (!immediate) {\n        func.apply(self, args);\n      }\n    };\n\n    if (!timeout && immediate) {\n      func.apply(self, args);\n    }\n\n    context.clearTimeout(timeout);\n    timeout = context.setTimeout(_later, wait);\n  };\n  /* eslint-enable consistent-this */\n};\n\n/**\n * @file src/js/event-target.js\n */\n/**\n * `EventTarget` is a class that can have the same API as the DOM `EventTarget`. It\n * adds shorthand functions that wrap around lengthy functions. For example:\n * the `on` function is a wrapper around `addEventListener`.\n *\n * @see [EventTarget Spec]{@link https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-EventTarget}\n * @class EventTarget\n */\nvar EventTarget = function EventTarget() {};\n\n/**\n * A Custom DOM event.\n *\n * @typedef {Object} EventTarget~Event\n * @see [Properties]{@link https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent}\n */\n\n/**\n * All event listeners should follow the following format.\n *\n * @callback EventTarget~EventListener\n * @this {EventTarget}\n *\n * @param {EventTarget~Event} event\n *        the event that triggered this function\n *\n * @param {Object} [hash]\n *        hash of data sent during the event\n */\n\n/**\n * An object containing event names as keys and booleans as values.\n *\n * > NOTE: If an event name is set to a true value here {@link EventTarget#trigger}\n *         will have extra functionality. See that function for more information.\n *\n * @property EventTarget.prototype.allowedEvents_\n * @private\n */\nEventTarget.prototype.allowedEvents_ = {};\n\n/**\n * Adds an `event listener` to an instance of an `EventTarget`. An `event listener` is a\n * function that will get called when an event with a certain name gets triggered.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to call with `EventTarget`s\n */\nEventTarget.prototype.on = function (type, fn) {\n  // Remove the addEventListener alias before calling Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  on(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * An alias of {@link EventTarget#on}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#on}\n */\nEventTarget.prototype.addEventListener = EventTarget.prototype.on;\n\n/**\n * Removes an `event listener` for a specific event from an instance of `EventTarget`.\n * This makes it so that the `event listener` will no longer get called when the\n * named event happens.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to remove.\n */\nEventTarget.prototype.off = function (type, fn) {\n  off(this, type, fn);\n};\n\n/**\n * An alias of {@link EventTarget#off}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#off}\n */\nEventTarget.prototype.removeEventListener = EventTarget.prototype.off;\n\n/**\n * This function will add an `event listener` that gets triggered only once. After the\n * first trigger it will get removed. This is like adding an `event listener`\n * with {@link EventTarget#on} that calls {@link EventTarget#off} on itself.\n *\n * @param {string|string[]} type\n *        An event name or an array of event names.\n *\n * @param {EventTarget~EventListener} fn\n *        The function to be called once for each event name.\n */\nEventTarget.prototype.one = function (type, fn) {\n  // Remove the addEventListener alialing Events.on\n  // so we don't get into an infinite type loop\n  var ael = this.addEventListener;\n\n  this.addEventListener = function () {};\n  one(this, type, fn);\n  this.addEventListener = ael;\n};\n\n/**\n * This function causes an event to happen. This will then cause any `event listeners`\n * that are waiting for that event, to get called. If there are no `event listeners`\n * for an event then nothing will happen.\n *\n * If the name of the `Event` that is being triggered is in `EventTarget.allowedEvents_`.\n * Trigger will also call the `on` + `uppercaseEventName` function.\n *\n * Example:\n * 'click' is in `EventTarget.allowedEvents_`, so, trigger will attempt to call\n * `onClick` if it exists.\n *\n * @param {string|EventTarget~Event|Object} event\n *        The name of the event, an `Event`, or an object with a key of type set to\n *        an event name.\n */\nEventTarget.prototype.trigger = function (event) {\n  var type = event.type || event;\n\n  if (typeof event === 'string') {\n    event = { type: type };\n  }\n  event = fixEvent(event);\n\n  if (this.allowedEvents_[type] && this['on' + type]) {\n    this['on' + type](event);\n  }\n\n  trigger(this, event);\n};\n\n/**\n * An alias of {@link EventTarget#trigger}. Allows `EventTarget` to mimic\n * the standard DOM API.\n *\n * @function\n * @see {@link EventTarget#trigger}\n */\nEventTarget.prototype.dispatchEvent = EventTarget.prototype.trigger;\n\n/**\n * @file mixins/evented.js\n * @module evented\n */\n/**\n * Returns whether or not an object has had the evented mixin applied.\n *\n * @param  {Object} object\n *         An object to test.\n *\n * @return {boolean}\n *         Whether or not the object appears to be evented.\n */\nvar isEvented = function isEvented(object) {\n  return object instanceof EventTarget || !!object.eventBusEl_ && ['on', 'one', 'off', 'trigger'].every(function (k) {\n    return typeof object[k] === 'function';\n  });\n};\n\n/**\n * Whether a value is a valid event type - non-empty string or array.\n *\n * @private\n * @param  {string|Array} type\n *         The type value to test.\n *\n * @return {boolean}\n *         Whether or not the type is a valid event type.\n */\nvar isValidEventType = function isValidEventType(type) {\n  return (\n    // The regex here verifies that the `type` contains at least one non-\n    // whitespace character.\n    typeof type === 'string' && /\\S/.test(type) || Array.isArray(type) && !!type.length\n  );\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the target does not appear to be a valid event target.\n *\n * @param  {Object} target\n *         The object to test.\n */\nvar validateTarget = function validateTarget(target) {\n  if (!target.nodeName && !isEvented(target)) {\n    throw new Error('Invalid target; must be a DOM node or evented object.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid event target. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the type does not appear to be a valid event type.\n *\n * @param  {string|Array} type\n *         The type to test.\n */\nvar validateEventType = function validateEventType(type) {\n  if (!isValidEventType(type)) {\n    throw new Error('Invalid event type; must be a non-empty string or array.');\n  }\n};\n\n/**\n * Validates a value to determine if it is a valid listener. Throws if not.\n *\n * @private\n * @throws {Error}\n *         If the listener is not a function.\n *\n * @param  {Function} listener\n *         The listener to test.\n */\nvar validateListener = function validateListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new Error('Invalid listener; must be a function.');\n  }\n};\n\n/**\n * Takes an array of arguments given to `on()` or `one()`, validates them, and\n * normalizes them into an object.\n *\n * @private\n * @param  {Object} self\n *         The evented object on which `on()` or `one()` was called. This\n *         object will be bound as the `this` value for the listener.\n *\n * @param  {Array} args\n *         An array of arguments passed to `on()` or `one()`.\n *\n * @return {Object}\n *         An object containing useful values for `on()` or `one()` calls.\n */\nvar normalizeListenArgs = function normalizeListenArgs(self, args) {\n\n  // If the number of arguments is less than 3, the target is always the\n  // evented object itself.\n  var isTargetingSelf = args.length < 3 || args[0] === self || args[0] === self.eventBusEl_;\n  var target = void 0;\n  var type = void 0;\n  var listener = void 0;\n\n  if (isTargetingSelf) {\n    target = self.eventBusEl_;\n\n    // Deal with cases where we got 3 arguments, but we are still listening to\n    // the evented object itself.\n    if (args.length >= 3) {\n      args.shift();\n    }\n\n    type = args[0];\n    listener = args[1];\n  } else {\n    target = args[0];\n    type = args[1];\n    listener = args[2];\n  }\n\n  validateTarget(target);\n  validateEventType(type);\n  validateListener(listener);\n\n  listener = bind(self, listener);\n\n  return { isTargetingSelf: isTargetingSelf, target: target, type: type, listener: listener };\n};\n\n/**\n * Adds the listener to the event type(s) on the target, normalizing for\n * the type of target.\n *\n * @private\n * @param  {Element|Object} target\n *         A DOM node or evented object.\n *\n * @param  {string} method\n *         The event binding method to use (\"on\" or \"one\").\n *\n * @param  {string|Array} type\n *         One or more event type(s).\n *\n * @param  {Function} listener\n *         A listener function.\n */\nvar listen = function listen(target, method, type, listener) {\n  validateTarget(target);\n\n  if (target.nodeName) {\n    Events[method](target, type, listener);\n  } else {\n    target[method](type, listener);\n  }\n};\n\n/**\n * Contains methods that provide event capabilites to an object which is passed\n * to {@link module:evented|evented}.\n *\n * @mixin EventedMixin\n */\nvar EventedMixin = {\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  on: function on$$1() {\n    var _this = this;\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var _normalizeListenArgs = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs.isTargetingSelf,\n        target = _normalizeListenArgs.target,\n        type = _normalizeListenArgs.type,\n        listener = _normalizeListenArgs.listener;\n\n    listen(target, 'on', type, listener);\n\n    // If this object is listening to another evented object.\n    if (!isTargetingSelf) {\n\n      // If this object is disposed, remove the listener.\n      var removeListenerOnDispose = function removeListenerOnDispose() {\n        return _this.off(target, type, listener);\n      };\n\n      // Use the same function ID as the listener so we can remove it later it\n      // using the ID of the original listener.\n      removeListenerOnDispose.guid = listener.guid;\n\n      // Add a listener to the target's dispose event as well. This ensures\n      // that if the target is disposed BEFORE this object, we remove the\n      // removal listener that was just added. Otherwise, we create a memory leak.\n      var removeRemoverOnTargetDispose = function removeRemoverOnTargetDispose() {\n        return _this.off('dispose', removeListenerOnDispose);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      removeRemoverOnTargetDispose.guid = listener.guid;\n\n      listen(this, 'on', 'dispose', removeListenerOnDispose);\n      listen(target, 'on', 'dispose', removeRemoverOnTargetDispose);\n    }\n  },\n\n\n  /**\n   * Add a listener to an event (or events) on this object or another evented\n   * object. The listener will only be called once and then removed.\n   *\n   * @param  {string|Array|Element|Object} targetOrType\n   *         If this is a string or array, it represents the event type(s)\n   *         that will trigger the listener.\n   *\n   *         Another evented object can be passed here instead, which will\n   *         cause the listener to listen for events on _that_ object.\n   *\n   *         In either case, the listener's `this` value will be bound to\n   *         this object.\n   *\n   * @param  {string|Array|Function} typeOrListener\n   *         If the first argument was a string or array, this should be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function.\n   */\n  one: function one$$1() {\n    var _this2 = this;\n\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    var _normalizeListenArgs2 = normalizeListenArgs(this, args),\n        isTargetingSelf = _normalizeListenArgs2.isTargetingSelf,\n        target = _normalizeListenArgs2.target,\n        type = _normalizeListenArgs2.type,\n        listener = _normalizeListenArgs2.listener;\n\n    // Targeting this evented object.\n\n\n    if (isTargetingSelf) {\n      listen(target, 'one', type, listener);\n\n      // Targeting another evented object.\n    } else {\n      var wrapper = function wrapper() {\n        for (var _len3 = arguments.length, largs = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n          largs[_key3] = arguments[_key3];\n        }\n\n        _this2.off(target, type, wrapper);\n        listener.apply(null, largs);\n      };\n\n      // Use the same function ID as the listener so we can remove it later\n      // it using the ID of the original listener.\n      wrapper.guid = listener.guid;\n      listen(target, 'one', type, wrapper);\n    }\n  },\n\n\n  /**\n   * Removes listener(s) from event(s) on an evented object.\n   *\n   * @param  {string|Array|Element|Object} [targetOrType]\n   *         If this is a string or array, it represents the event type(s).\n   *\n   *         Another evented object can be passed here instead, in which case\n   *         ALL 3 arguments are _required_.\n   *\n   * @param  {string|Array|Function} [typeOrListener]\n   *         If the first argument was a string or array, this may be the\n   *         listener function. Otherwise, this is a string or array of event\n   *         type(s).\n   *\n   * @param  {Function} [listener]\n   *         If the first argument was another evented object, this will be\n   *         the listener function; otherwise, _all_ listeners bound to the\n   *         event type(s) will be removed.\n   */\n  off: function off$$1(targetOrType, typeOrListener, listener) {\n\n    // Targeting this evented object.\n    if (!targetOrType || isValidEventType(targetOrType)) {\n      off(this.eventBusEl_, targetOrType, typeOrListener);\n\n      // Targeting another evented object.\n    } else {\n      var target = targetOrType;\n      var type = typeOrListener;\n\n      // Fail fast and in a meaningful way!\n      validateTarget(target);\n      validateEventType(type);\n      validateListener(listener);\n\n      // Ensure there's at least a guid, even if the function hasn't been used\n      listener = bind(this, listener);\n\n      // Remove the dispose listener on this evented object, which was given\n      // the same guid as the event listener in on().\n      this.off('dispose', listener);\n\n      if (target.nodeName) {\n        off(target, type, listener);\n        off(target, 'dispose', listener);\n      } else if (isEvented(target)) {\n        target.off(type, listener);\n        target.off('dispose', listener);\n      }\n    }\n  },\n\n\n  /**\n   * Fire an event on this evented object, causing its listeners to be called.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash]\n   *          An additional object to pass along to listeners.\n   *\n   * @returns {boolean}\n   *          Whether or not the default behavior was prevented.\n   */\n  trigger: function trigger$$1(event, hash) {\n    return trigger(this.eventBusEl_, event, hash);\n  }\n};\n\n/**\n * Applies {@link module:evented~EventedMixin|EventedMixin} to a target object.\n *\n * @param  {Object} target\n *         The object to which to add event methods.\n *\n * @param  {Object} [options={}]\n *         Options for customizing the mixin behavior.\n *\n * @param  {String} [options.eventBusKey]\n *         By default, adds a `eventBusEl_` DOM element to the target object,\n *         which is used as an event bus. If the target object already has a\n *         DOM element that should be used, pass its key here.\n *\n * @return {Object}\n *         The target object.\n */\nfunction evented(target) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var eventBusKey = options.eventBusKey;\n\n  // Set or create the eventBusEl_.\n\n  if (eventBusKey) {\n    if (!target[eventBusKey].nodeName) {\n      throw new Error('The eventBusKey \"' + eventBusKey + '\" does not refer to an element.');\n    }\n    target.eventBusEl_ = target[eventBusKey];\n  } else {\n    target.eventBusEl_ = createEl('span', { className: 'vjs-event-bus' });\n  }\n\n  assign(target, EventedMixin);\n\n  // When any evented object is disposed, it removes all its listeners.\n  target.on('dispose', function () {\n    target.off();\n    window.setTimeout(function () {\n      target.eventBusEl_ = null;\n    }, 0);\n  });\n\n  return target;\n}\n\n/**\n * @file mixins/stateful.js\n * @module stateful\n */\n/**\n * Contains methods that provide statefulness to an object which is passed\n * to {@link module:stateful}.\n *\n * @mixin StatefulMixin\n */\nvar StatefulMixin = {\n\n  /**\n   * A hash containing arbitrary keys and values representing the state of\n   * the object.\n   *\n   * @type {Object}\n   */\n  state: {},\n\n  /**\n   * Set the state of an object by mutating its\n   * {@link module:stateful~StatefulMixin.state|state} object in place.\n   *\n   * @fires   module:stateful~StatefulMixin#statechanged\n   * @param   {Object|Function} stateUpdates\n   *          A new set of properties to shallow-merge into the plugin state.\n   *          Can be a plain object or a function returning a plain object.\n   *\n   * @returns {Object|undefined}\n   *          An object containing changes that occurred. If no changes\n   *          occurred, returns `undefined`.\n   */\n  setState: function setState(stateUpdates) {\n    var _this = this;\n\n    // Support providing the `stateUpdates` state as a function.\n    if (typeof stateUpdates === 'function') {\n      stateUpdates = stateUpdates();\n    }\n\n    var changes = void 0;\n\n    each(stateUpdates, function (value, key) {\n\n      // Record the change if the value is different from what's in the\n      // current state.\n      if (_this.state[key] !== value) {\n        changes = changes || {};\n        changes[key] = {\n          from: _this.state[key],\n          to: value\n        };\n      }\n\n      _this.state[key] = value;\n    });\n\n    // Only trigger \"statechange\" if there were changes AND we have a trigger\n    // function. This allows us to not require that the target object be an\n    // evented object.\n    if (changes && isEvented(this)) {\n\n      /**\n       * An event triggered on an object that is both\n       * {@link module:stateful|stateful} and {@link module:evented|evented}\n       * indicating that its state has changed.\n       *\n       * @event    module:stateful~StatefulMixin#statechanged\n       * @type     {Object}\n       * @property {Object} changes\n       *           A hash containing the properties that were changed and\n       *           the values they were changed `from` and `to`.\n       */\n      this.trigger({\n        changes: changes,\n        type: 'statechanged'\n      });\n    }\n\n    return changes;\n  }\n};\n\n/**\n * Applies {@link module:stateful~StatefulMixin|StatefulMixin} to a target\n * object.\n *\n * If the target object is {@link module:evented|evented} and has a\n * `handleStateChanged` method, that method will be automatically bound to the\n * `statechanged` event on itself.\n *\n * @param   {Object} target\n *          The object to be made stateful.\n *\n * @param   {Object} [defaultState]\n *          A default set of properties to populate the newly-stateful object's\n *          `state` property.\n *\n * @returns {Object}\n *          Returns the `target`.\n */\nfunction stateful(target, defaultState) {\n  assign(target, StatefulMixin);\n\n  // This happens after the mixing-in because we need to replace the `state`\n  // added in that step.\n  target.state = assign({}, target.state, defaultState);\n\n  // Auto-bind the `handleStateChanged` method of the target object if it exists.\n  if (typeof target.handleStateChanged === 'function' && isEvented(target)) {\n    target.on('statechanged', target.handleStateChanged);\n  }\n\n  return target;\n}\n\n/**\n * @file to-title-case.js\n * @module to-title-case\n */\n\n/**\n * Uppercase the first letter of a string.\n *\n * @param {string} string\n *        String to be uppercased\n *\n * @return {string}\n *         The string with an uppercased first letter\n */\nfunction toTitleCase(string) {\n  if (typeof string !== 'string') {\n    return string;\n  }\n\n  return string.charAt(0).toUpperCase() + string.slice(1);\n}\n\n/**\n * Compares the TitleCase versions of the two strings for equality.\n *\n * @param {string} str1\n *        The first string to compare\n *\n * @param {string} str2\n *        The second string to compare\n *\n * @return {boolean}\n *         Whether the TitleCase versions of the strings are equal\n */\nfunction titleCaseEquals(str1, str2) {\n  return toTitleCase(str1) === toTitleCase(str2);\n}\n\n/**\n * @file merge-options.js\n * @module merge-options\n */\n/**\n * Deep-merge one or more options objects, recursively merging **only** plain\n * object properties.\n *\n * @param   {Object[]} sources\n *          One or more objects to merge into a new object.\n *\n * @returns {Object}\n *          A new object that is the merged result of all sources.\n */\nfunction mergeOptions() {\n  var result = {};\n\n  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n    sources[_key] = arguments[_key];\n  }\n\n  sources.forEach(function (source) {\n    if (!source) {\n      return;\n    }\n\n    each(source, function (value, key) {\n      if (!isPlain(value)) {\n        result[key] = value;\n        return;\n      }\n\n      if (!isPlain(result[key])) {\n        result[key] = {};\n      }\n\n      result[key] = mergeOptions(result[key], value);\n    });\n  });\n\n  return result;\n}\n\n/**\n * Player Component - Base class for all UI objects\n *\n * @file component.js\n */\n/**\n * Base class for all UI Components.\n * Components are UI objects which represent both a javascript object and an element\n * in the DOM. They can be children of other components, and can have\n * children themselves.\n *\n * Components can also use methods from {@link EventTarget}\n */\n\nvar Component = function () {\n\n  /**\n   * A callback that is called when a component is ready. Does not have any\n   * paramters and any callback value will be ignored.\n   *\n   * @callback Component~ReadyCallback\n   * @this Component\n   */\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Object[]} [options.children]\n   *        An array of children objects to intialize this component with. Children objects have\n   *        a name property that will be used if more than one component of the same type needs to be\n   *        added.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Function that gets called when the `Component` is ready.\n   */\n  function Component(player, options, ready) {\n    classCallCheck(this, Component);\n\n\n    // The component might be the player itself and we can't pass `this` to super\n    if (!player && this.play) {\n      this.player_ = player = this; // eslint-disable-line\n    } else {\n      this.player_ = player;\n    }\n\n    // Make a copy of prototype.options_ to protect against overriding defaults\n    this.options_ = mergeOptions({}, this.options_);\n\n    // Updated options with supplied options\n    options = this.options_ = mergeOptions(this.options_, options);\n\n    // Get ID from options or options element if one is supplied\n    this.id_ = options.id || options.el && options.el.id;\n\n    // If there was no ID from the options, generate one\n    if (!this.id_) {\n      // Don't require the player ID function in the case of mock players\n      var id = player && player.id && player.id() || 'no_player';\n\n      this.id_ = id + '_component_' + newGUID();\n    }\n\n    this.name_ = options.name || null;\n\n    // Create element if one wasn't provided in options\n    if (options.el) {\n      this.el_ = options.el;\n    } else if (options.createEl !== false) {\n      this.el_ = this.createEl();\n    }\n\n    // if evented is anything except false, we want to mixin in evented\n    if (options.evented !== false) {\n      // Make this an evented object and use `el_`, if available, as its event bus\n      evented(this, { eventBusKey: this.el_ ? 'el_' : null });\n    }\n    stateful(this, this.constructor.defaultState);\n\n    this.children_ = [];\n    this.childIndex_ = {};\n    this.childNameIndex_ = {};\n\n    // Add any child components in options\n    if (options.initChildren !== false) {\n      this.initChildren();\n    }\n\n    this.ready(ready);\n    // Don't want to trigger ready here or it will before init is actually\n    // finished for all children that run this constructor\n\n    if (options.reportTouchActivity !== false) {\n      this.enableTouchActivity();\n    }\n  }\n\n  /**\n   * Dispose of the `Component` and all child components.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Component.prototype.dispose = function dispose() {\n\n    /**\n     * Triggered when a `Component` is disposed.\n     *\n     * @event Component#dispose\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up\n     */\n    this.trigger({ type: 'dispose', bubbles: false });\n\n    // Dispose all children.\n    if (this.children_) {\n      for (var i = this.children_.length - 1; i >= 0; i--) {\n        if (this.children_[i].dispose) {\n          this.children_[i].dispose();\n        }\n      }\n    }\n\n    // Delete child references\n    this.children_ = null;\n    this.childIndex_ = null;\n    this.childNameIndex_ = null;\n\n    if (this.el_) {\n      // Remove element from DOM\n      if (this.el_.parentNode) {\n        this.el_.parentNode.removeChild(this.el_);\n      }\n\n      removeData(this.el_);\n      this.el_ = null;\n    }\n\n    // remove reference to the player after disposing of the element\n    this.player_ = null;\n  };\n\n  /**\n   * Return the {@link Player} that the `Component` has attached to.\n   *\n   * @return {Player}\n   *         The player that this `Component` has attached to.\n   */\n\n\n  Component.prototype.player = function player() {\n    return this.player_;\n  };\n\n  /**\n   * Deep merge of options objects with new options.\n   * > Note: When both `obj` and `options` contain properties whose values are objects.\n   *         The two properties get merged using {@link module:mergeOptions}\n   *\n   * @param {Object} obj\n   *        The object that contains new options.\n   *\n   * @return {Object}\n   *         A new object of `this.options_` and `obj` merged together.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Component.prototype.options = function options(obj) {\n    log$1.warn('this.options() has been deprecated and will be moved to the constructor in 6.0');\n\n    if (!obj) {\n      return this.options_;\n    }\n\n    this.options_ = mergeOptions(this.options_, obj);\n    return this.options_;\n  };\n\n  /**\n   * Get the `Component`s DOM element\n   *\n   * @return {Element}\n   *         The DOM element for this `Component`.\n   */\n\n\n  Component.prototype.el = function el() {\n    return this.el_;\n  };\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tagName]\n   *        Element's DOM node type. e.g. 'div'\n   *\n   * @param {Object} [properties]\n   *        An object of properties that should be set.\n   *\n   * @param {Object} [attributes]\n   *        An object of attributes that should be set.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Component.prototype.createEl = function createEl$$1(tagName, properties, attributes) {\n    return createEl(tagName, properties, attributes);\n  };\n\n  /**\n   * Localize a string given the string in english.\n   *\n   * If tokens are provided, it'll try and run a simple token replacement on the provided string.\n   * The tokens it looks for look like `{1}` with the index being 1-indexed into the tokens array.\n   *\n   * If a `defaultValue` is provided, it'll use that over `string`,\n   * if a value isn't found in provided language files.\n   * This is useful if you want to have a descriptive key for token replacement\n   * but have a succinct localized string and not require `en.json` to be included.\n   *\n   * Currently, it is used for the progress bar timing.\n   * ```js\n   * {\n   *   \"progress bar timing: currentTime={1} duration={2}\": \"{1} of {2}\"\n   * }\n   * ```\n   * It is then used like so:\n   * ```js\n   * this.localize('progress bar timing: currentTime={1} duration{2}',\n   *               [this.player_.currentTime(), this.player_.duration()],\n   *               '{1} of {2}');\n   * ```\n   *\n   * Which outputs something like: `01:23 of 24:56`.\n   *\n   *\n   * @param {string} string\n   *        The string to localize and the key to lookup in the language files.\n   * @param {string[]} [tokens]\n   *        If the current item has token replacements, provide the tokens here.\n   * @param {string} [defaultValue]\n   *        Defaults to `string`. Can be a default value to use for token replacement\n   *        if the lookup key is needed to be separate.\n   *\n   * @return {string}\n   *         The localized string or if no localization exists the english string.\n   */\n\n\n  Component.prototype.localize = function localize(string, tokens) {\n    var defaultValue = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : string;\n\n    var code = this.player_.language && this.player_.language();\n    var languages = this.player_.languages && this.player_.languages();\n    var language = languages && languages[code];\n    var primaryCode = code && code.split('-')[0];\n    var primaryLang = languages && languages[primaryCode];\n\n    var localizedString = defaultValue;\n\n    if (language && language[string]) {\n      localizedString = language[string];\n    } else if (primaryLang && primaryLang[string]) {\n      localizedString = primaryLang[string];\n    }\n\n    if (tokens) {\n      localizedString = localizedString.replace(/\\{(\\d+)\\}/g, function (match, index) {\n        var value = tokens[index - 1];\n        var ret = value;\n\n        if (typeof value === 'undefined') {\n          ret = match;\n        }\n\n        return ret;\n      });\n    }\n\n    return localizedString;\n  };\n\n  /**\n   * Return the `Component`s DOM element. This is where children get inserted.\n   * This will usually be the the same as the element returned in {@link Component#el}.\n   *\n   * @return {Element}\n   *         The content element for this `Component`.\n   */\n\n\n  Component.prototype.contentEl = function contentEl() {\n    return this.contentEl_ || this.el_;\n  };\n\n  /**\n   * Get this `Component`s ID\n   *\n   * @return {string}\n   *         The id of this `Component`\n   */\n\n\n  Component.prototype.id = function id() {\n    return this.id_;\n  };\n\n  /**\n   * Get the `Component`s name. The name gets used to reference the `Component`\n   * and is set during registration.\n   *\n   * @return {string}\n   *         The name of this `Component`.\n   */\n\n\n  Component.prototype.name = function name() {\n    return this.name_;\n  };\n\n  /**\n   * Get an array of all child components\n   *\n   * @return {Array}\n   *         The children\n   */\n\n\n  Component.prototype.children = function children() {\n    return this.children_;\n  };\n\n  /**\n   * Returns the child `Component` with the given `id`.\n   *\n   * @param {string} id\n   *        The id of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `id` or undefined.\n   */\n\n\n  Component.prototype.getChildById = function getChildById(id) {\n    return this.childIndex_[id];\n  };\n\n  /**\n   * Returns the child `Component` with the given `name`.\n   *\n   * @param {string} name\n   *        The name of the child `Component` to get.\n   *\n   * @return {Component|undefined}\n   *         The child `Component` with the given `name` or undefined.\n   */\n\n\n  Component.prototype.getChild = function getChild(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    return this.childNameIndex_[name];\n  };\n\n  /**\n   * Add a child `Component` inside the current `Component`.\n   *\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @param {number} [index=this.children_.length]\n   *        The index to attempt to add a child into.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   */\n\n\n  Component.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var index = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : this.children_.length;\n\n    var component = void 0;\n    var componentName = void 0;\n\n    // If child is a string, create component with options\n    if (typeof child === 'string') {\n      componentName = toTitleCase(child);\n\n      var componentClassName = options.componentClass || componentName;\n\n      // Set name through options\n      options.name = componentName;\n\n      // Create a new object & element for this controls set\n      // If there's no .player_, this is a player\n      var ComponentClass = Component.getComponent(componentClassName);\n\n      if (!ComponentClass) {\n        throw new Error('Component ' + componentClassName + ' does not exist');\n      }\n\n      // data stored directly on the videojs object may be\n      // misidentified as a component to retain\n      // backwards-compatibility with 4.x. check to make sure the\n      // component class can be instantiated.\n      if (typeof ComponentClass !== 'function') {\n        return null;\n      }\n\n      component = new ComponentClass(this.player_ || this, options);\n\n      // child is a component instance\n    } else {\n      component = child;\n    }\n\n    this.children_.splice(index, 0, component);\n\n    if (typeof component.id === 'function') {\n      this.childIndex_[component.id()] = component;\n    }\n\n    // If a name wasn't used to create the component, check if we can use the\n    // name function of the component\n    componentName = componentName || component.name && toTitleCase(component.name());\n\n    if (componentName) {\n      this.childNameIndex_[componentName] = component;\n    }\n\n    // Add the UI object's element to the container div (box)\n    // Having an element is not required\n    if (typeof component.el === 'function' && component.el()) {\n      var childNodes = this.contentEl().children;\n      var refNode = childNodes[index] || null;\n\n      this.contentEl().insertBefore(component.el(), refNode);\n    }\n\n    // Return so it can stored on parent object if desired.\n    return component;\n  };\n\n  /**\n   * Remove a child `Component` from this `Component`s list of children. Also removes\n   * the child `Component`s element from this `Component`s element.\n   *\n   * @param {Component} component\n   *        The child `Component` to remove.\n   */\n\n\n  Component.prototype.removeChild = function removeChild(component) {\n    if (typeof component === 'string') {\n      component = this.getChild(component);\n    }\n\n    if (!component || !this.children_) {\n      return;\n    }\n\n    var childFound = false;\n\n    for (var i = this.children_.length - 1; i >= 0; i--) {\n      if (this.children_[i] === component) {\n        childFound = true;\n        this.children_.splice(i, 1);\n        break;\n      }\n    }\n\n    if (!childFound) {\n      return;\n    }\n\n    this.childIndex_[component.id()] = null;\n    this.childNameIndex_[component.name()] = null;\n\n    var compEl = component.el();\n\n    if (compEl && compEl.parentNode === this.contentEl()) {\n      this.contentEl().removeChild(component.el());\n    }\n  };\n\n  /**\n   * Add and initialize default child `Component`s based upon options.\n   */\n\n\n  Component.prototype.initChildren = function initChildren() {\n    var _this = this;\n\n    var children = this.options_.children;\n\n    if (children) {\n      // `this` is `parent`\n      var parentOptions = this.options_;\n\n      var handleAdd = function handleAdd(child) {\n        var name = child.name;\n        var opts = child.opts;\n\n        // Allow options for children to be set at the parent options\n        // e.g. videojs(id, { controlBar: false });\n        // instead of videojs(id, { children: { controlBar: false });\n        if (parentOptions[name] !== undefined) {\n          opts = parentOptions[name];\n        }\n\n        // Allow for disabling default components\n        // e.g. options['children']['posterImage'] = false\n        if (opts === false) {\n          return;\n        }\n\n        // Allow options to be passed as a simple boolean if no configuration\n        // is necessary.\n        if (opts === true) {\n          opts = {};\n        }\n\n        // We also want to pass the original player options\n        // to each component as well so they don't need to\n        // reach back into the player for options later.\n        opts.playerOptions = _this.options_.playerOptions;\n\n        // Create and add the child component.\n        // Add a direct reference to the child by name on the parent instance.\n        // If two of the same component are used, different names should be supplied\n        // for each\n        var newChild = _this.addChild(name, opts);\n\n        if (newChild) {\n          _this[name] = newChild;\n        }\n      };\n\n      // Allow for an array of children details to passed in the options\n      var workingChildren = void 0;\n      var Tech = Component.getComponent('Tech');\n\n      if (Array.isArray(children)) {\n        workingChildren = children;\n      } else {\n        workingChildren = Object.keys(children);\n      }\n\n      workingChildren\n      // children that are in this.options_ but also in workingChildren  would\n      // give us extra children we do not want. So, we want to filter them out.\n      .concat(Object.keys(this.options_).filter(function (child) {\n        return !workingChildren.some(function (wchild) {\n          if (typeof wchild === 'string') {\n            return child === wchild;\n          }\n          return child === wchild.name;\n        });\n      })).map(function (child) {\n        var name = void 0;\n        var opts = void 0;\n\n        if (typeof child === 'string') {\n          name = child;\n          opts = children[name] || _this.options_[name] || {};\n        } else {\n          name = child.name;\n          opts = child;\n        }\n\n        return { name: name, opts: opts };\n      }).filter(function (child) {\n        // we have to make sure that child.name isn't in the techOrder since\n        // techs are registerd as Components but can't aren't compatible\n        // See https://github.com/videojs/video.js/issues/2772\n        var c = Component.getComponent(child.opts.componentClass || toTitleCase(child.name));\n\n        return c && !Tech.isTech(c);\n      }).forEach(handleAdd);\n    }\n  };\n\n  /**\n   * Builds the default DOM class name. Should be overriden by sub-components.\n   *\n   * @return {string}\n   *         The DOM class name for this object.\n   *\n   * @abstract\n   */\n\n\n  Component.prototype.buildCSSClass = function buildCSSClass() {\n    // Child classes can include a function that does:\n    // return 'CLASS NAME' + this._super();\n    return '';\n  };\n\n  /**\n   * Bind a listener to the component's ready state.\n   * Different from event listeners in that if the ready event has already happened\n   * it will trigger the function immediately.\n   *\n   * @return {Component}\n   *         Returns itself; method can be chained.\n   */\n\n\n  Component.prototype.ready = function ready(fn) {\n    var sync = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!fn) {\n      return;\n    }\n\n    if (!this.isReady_) {\n      this.readyQueue_ = this.readyQueue_ || [];\n      this.readyQueue_.push(fn);\n      return;\n    }\n\n    if (sync) {\n      fn.call(this);\n    } else {\n      // Call the function asynchronously by default for consistency\n      this.setTimeout(fn, 1);\n    }\n  };\n\n  /**\n   * Trigger all the ready listeners for this `Component`.\n   *\n   * @fires Component#ready\n   */\n\n\n  Component.prototype.triggerReady = function triggerReady() {\n    this.isReady_ = true;\n\n    // Ensure ready is triggered asynchronously\n    this.setTimeout(function () {\n      var readyQueue = this.readyQueue_;\n\n      // Reset Ready Queue\n      this.readyQueue_ = [];\n\n      if (readyQueue && readyQueue.length > 0) {\n        readyQueue.forEach(function (fn) {\n          fn.call(this);\n        }, this);\n      }\n\n      // Allow for using event listeners also\n      /**\n       * Triggered when a `Component` is ready.\n       *\n       * @event Component#ready\n       * @type {EventTarget~Event}\n       */\n      this.trigger('ready');\n    }, 1);\n  };\n\n  /**\n   * Find a single DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelector`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {Element|null}\n   *         the dom element that was found, or null\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$ = function $$$1(selector, context) {\n    return $(selector, context || this.contentEl());\n  };\n\n  /**\n   * Finds all DOM element matching a `selector`. This can be within the `Component`s\n   * `contentEl()` or another custom context.\n   *\n   * @param {string} selector\n   *        A valid CSS selector, which will be passed to `querySelectorAll`.\n   *\n   * @param {Element|string} [context=this.contentEl()]\n   *        A DOM element within which to query. Can also be a selector string in\n   *        which case the first matching element will get used as context. If\n   *        missing `this.contentEl()` gets used. If  `this.contentEl()` returns\n   *        nothing it falls back to `document`.\n   *\n   * @return {NodeList}\n   *         a list of dom elements that were found\n   *\n   * @see [Information on CSS Selectors](https://developer.mozilla.org/en-US/docs/Web/Guide/CSS/Getting_Started/Selectors)\n   */\n\n\n  Component.prototype.$$ = function $$$$1(selector, context) {\n    return $$(selector, context || this.contentEl());\n  };\n\n  /**\n   * Check if a component's element has a CSS class name.\n   *\n   * @param {string} classToCheck\n   *        CSS class name to check.\n   *\n   * @return {boolean}\n   *         - True if the `Component` has the class.\n   *         - False if the `Component` does not have the class`\n   */\n\n\n  Component.prototype.hasClass = function hasClass$$1(classToCheck) {\n    return hasClass(this.el_, classToCheck);\n  };\n\n  /**\n   * Add a CSS class name to the `Component`s element.\n   *\n   * @param {string} classToAdd\n   *        CSS class name to add\n   */\n\n\n  Component.prototype.addClass = function addClass$$1(classToAdd) {\n    addClass(this.el_, classToAdd);\n  };\n\n  /**\n   * Remove a CSS class name from the `Component`s element.\n   *\n   * @param {string} classToRemove\n   *        CSS class name to remove\n   */\n\n\n  Component.prototype.removeClass = function removeClass$$1(classToRemove) {\n    removeClass(this.el_, classToRemove);\n  };\n\n  /**\n   * Add or remove a CSS class name from the component's element.\n   * - `classToToggle` gets added when {@link Component#hasClass} would return false.\n   * - `classToToggle` gets removed when {@link Component#hasClass} would return true.\n   *\n   * @param  {string} classToToggle\n   *         The class to add or remove based on (@link Component#hasClass}\n   *\n   * @param  {boolean|Dom~predicate} [predicate]\n   *         An {@link Dom~predicate} function or a boolean\n   */\n\n\n  Component.prototype.toggleClass = function toggleClass$$1(classToToggle, predicate) {\n    toggleClass(this.el_, classToToggle, predicate);\n  };\n\n  /**\n   * Show the `Component`s element if it is hidden by removing the\n   * 'vjs-hidden' class name from it.\n   */\n\n\n  Component.prototype.show = function show() {\n    this.removeClass('vjs-hidden');\n  };\n\n  /**\n   * Hide the `Component`s element if it is currently showing by adding the\n   * 'vjs-hidden` class name to it.\n   */\n\n\n  Component.prototype.hide = function hide() {\n    this.addClass('vjs-hidden');\n  };\n\n  /**\n   * Lock a `Component`s element in its visible state by adding the 'vjs-lock-showing'\n   * class name to it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.lockShowing = function lockShowing() {\n    this.addClass('vjs-lock-showing');\n  };\n\n  /**\n   * Unlock a `Component`s element from its visible state by removing the 'vjs-lock-showing'\n   * class name from it. Used during fadeIn/fadeOut.\n   *\n   * @private\n   */\n\n\n  Component.prototype.unlockShowing = function unlockShowing() {\n    this.removeClass('vjs-lock-showing');\n  };\n\n  /**\n   * Get the value of an attribute on the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to get the value from.\n   *\n   * @return {string|null}\n   *         - The value of the attribute that was asked for.\n   *         - Can be an empty string on some browsers if the attribute does not exist\n   *           or has no value\n   *         - Most browsers will return null if the attibute does not exist or has\n   *           no value.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/getAttribute}\n   */\n\n\n  Component.prototype.getAttribute = function getAttribute$$1(attribute) {\n    return getAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Set the value of an attribute on the `Component`'s element\n   *\n   * @param {string} attribute\n   *        Name of the attribute to set.\n   *\n   * @param {string} value\n   *        Value to set the attribute to.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/setAttribute}\n   */\n\n\n  Component.prototype.setAttribute = function setAttribute$$1(attribute, value) {\n    setAttribute(this.el_, attribute, value);\n  };\n\n  /**\n   * Remove an attribute from the `Component`s element.\n   *\n   * @param {string} attribute\n   *        Name of the attribute to remove.\n   *\n   * @see [DOM API]{@link https://developer.mozilla.org/en-US/docs/Web/API/Element/removeAttribute}\n   */\n\n\n  Component.prototype.removeAttribute = function removeAttribute$$1(attribute) {\n    removeAttribute(this.el_, attribute);\n  };\n\n  /**\n   * Get or set the width of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The width that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *           postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.width = function width(num, skipListeners) {\n    return this.dimension('width', num, skipListeners);\n  };\n\n  /**\n   * Get or set the height of the component based upon the CSS styles.\n   * See {@link Component#dimension} for more detailed information.\n   *\n   * @param {number|string} [num]\n   *        The height that you want to set postfixed with '%', 'px' or nothing.\n   *\n   * @param {boolean} [skipListeners]\n   *        Skip the componentresize event trigger\n   *\n   * @return {number|string}\n   *         The width when getting, zero if there is no width. Can be a string\n   *         postpixed with '%' or 'px'.\n   */\n\n\n  Component.prototype.height = function height(num, skipListeners) {\n    return this.dimension('height', num, skipListeners);\n  };\n\n  /**\n   * Set both the width and height of the `Component` element at the same time.\n   *\n   * @param  {number|string} width\n   *         Width to set the `Component`s element to.\n   *\n   * @param  {number|string} height\n   *         Height to set the `Component`s element to.\n   */\n\n\n  Component.prototype.dimensions = function dimensions(width, height) {\n    // Skip componentresize listeners on width for optimization\n    this.width(width, true);\n    this.height(height);\n  };\n\n  /**\n   * Get or set width or height of the `Component` element. This is the shared code\n   * for the {@link Component#width} and {@link Component#height}.\n   *\n   * Things to know:\n   * - If the width or height in an number this will return the number postfixed with 'px'.\n   * - If the width/height is a percent this will return the percent postfixed with '%'\n   * - Hidden elements have a width of 0 with `window.getComputedStyle`. This function\n   *   defaults to the `Component`s `style.width` and falls back to `window.getComputedStyle`.\n   *   See [this]{@link http://www.foliotek.com/devblog/getting-the-width-of-a-hidden-element-with-jquery-using-width/}\n   *   for more information\n   * - If you want the computed style of the component, use {@link Component#currentWidth}\n   *   and {@link {Component#currentHeight}\n   *\n   * @fires Component#componentresize\n   *\n   * @param {string} widthOrHeight\n   8        'width' or 'height'\n   *\n   * @param  {number|string} [num]\n   8         New dimension\n   *\n   * @param  {boolean} [skipListeners]\n   *         Skip componentresize event trigger\n   *\n   * @return {number}\n   *         The dimension when getting or 0 if unset\n   */\n\n\n  Component.prototype.dimension = function dimension(widthOrHeight, num, skipListeners) {\n    if (num !== undefined) {\n      // Set to zero if null or literally NaN (NaN !== NaN)\n      if (num === null || num !== num) {\n        num = 0;\n      }\n\n      // Check if using css width/height (% or px) and adjust\n      if (('' + num).indexOf('%') !== -1 || ('' + num).indexOf('px') !== -1) {\n        this.el_.style[widthOrHeight] = num;\n      } else if (num === 'auto') {\n        this.el_.style[widthOrHeight] = '';\n      } else {\n        this.el_.style[widthOrHeight] = num + 'px';\n      }\n\n      // skipListeners allows us to avoid triggering the resize event when setting both width and height\n      if (!skipListeners) {\n        /**\n         * Triggered when a component is resized.\n         *\n         * @event Component#componentresize\n         * @type {EventTarget~Event}\n         */\n        this.trigger('componentresize');\n      }\n\n      return;\n    }\n\n    // Not setting a value, so getting it\n    // Make sure element exists\n    if (!this.el_) {\n      return 0;\n    }\n\n    // Get dimension value from style\n    var val = this.el_.style[widthOrHeight];\n    var pxIndex = val.indexOf('px');\n\n    if (pxIndex !== -1) {\n      // Return the pixel value with no 'px'\n      return parseInt(val.slice(0, pxIndex), 10);\n    }\n\n    // No px so using % or no style was set, so falling back to offsetWidth/height\n    // If component has display:none, offset will return 0\n    // TODO: handle display:none and no dimension style using px\n    return parseInt(this.el_['offset' + toTitleCase(widthOrHeight)], 10);\n  };\n\n  /**\n   * Get the width or the height of the `Component` elements computed style. Uses\n   * `window.getComputedStyle`.\n   *\n   * @param {string} widthOrHeight\n   *        A string containing 'width' or 'height'. Whichever one you want to get.\n   *\n   * @return {number}\n   *         The dimension that gets asked for or 0 if nothing was set\n   *         for that dimension.\n   */\n\n\n  Component.prototype.currentDimension = function currentDimension(widthOrHeight) {\n    var computedWidthOrHeight = 0;\n\n    if (widthOrHeight !== 'width' && widthOrHeight !== 'height') {\n      throw new Error('currentDimension only accepts width or height value');\n    }\n\n    if (typeof window.getComputedStyle === 'function') {\n      var computedStyle = window.getComputedStyle(this.el_);\n\n      computedWidthOrHeight = computedStyle.getPropertyValue(widthOrHeight) || computedStyle[widthOrHeight];\n    }\n\n    // remove 'px' from variable and parse as integer\n    computedWidthOrHeight = parseFloat(computedWidthOrHeight);\n\n    // if the computed value is still 0, it's possible that the browser is lying\n    // and we want to check the offset values.\n    // This code also runs on IE8 and wherever getComputedStyle doesn't exist.\n    if (computedWidthOrHeight === 0) {\n      var rule = 'offset' + toTitleCase(widthOrHeight);\n\n      computedWidthOrHeight = this.el_[rule];\n    }\n\n    return computedWidthOrHeight;\n  };\n\n  /**\n   * An object that contains width and height values of the `Component`s\n   * computed style. Uses `window.getComputedStyle`.\n   *\n   * @typedef {Object} Component~DimensionObject\n   *\n   * @property {number} width\n   *           The width of the `Component`s computed style.\n   *\n   * @property {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n  /**\n   * Get an object that contains width and height values of the `Component`s\n   * computed style.\n   *\n   * @return {Component~DimensionObject}\n   *         The dimensions of the components element\n   */\n\n\n  Component.prototype.currentDimensions = function currentDimensions() {\n    return {\n      width: this.currentDimension('width'),\n      height: this.currentDimension('height')\n    };\n  };\n\n  /**\n   * Get the width of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} width\n   *           The width of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentWidth = function currentWidth() {\n    return this.currentDimension('width');\n  };\n\n  /**\n   * Get the height of the `Component`s computed style. Uses `window.getComputedStyle`.\n   *\n   * @return {number} height\n   *           The height of the `Component`s computed style.\n   */\n\n\n  Component.prototype.currentHeight = function currentHeight() {\n    return this.currentDimension('height');\n  };\n\n  /**\n   * Set the focus to this component\n   */\n\n\n  Component.prototype.focus = function focus() {\n    this.el_.focus();\n  };\n\n  /**\n   * Remove the focus from this component\n   */\n\n\n  Component.prototype.blur = function blur() {\n    this.el_.blur();\n  };\n\n  /**\n   * Emit a 'tap' events when touch event support gets detected. This gets used to\n   * support toggling the controls through a tap on the video. They get enabled\n   * because every sub-component would have extra overhead otherwise.\n   *\n   * @private\n   * @fires Component#tap\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchleave\n   * @listens Component#touchcancel\n   * @listens Component#touchend\n    */\n\n\n  Component.prototype.emitTapEvents = function emitTapEvents() {\n    // Track the start time so we can determine how long the touch lasted\n    var touchStart = 0;\n    var firstTouch = null;\n\n    // Maximum movement allowed during a touch event to still be considered a tap\n    // Other popular libs use anywhere from 2 (hammer.js) to 15,\n    // so 10 seems like a nice, round number.\n    var tapMovementThreshold = 10;\n\n    // The maximum length a touch can be while still being considered a tap\n    var touchTimeThreshold = 200;\n\n    var couldBeTap = void 0;\n\n    this.on('touchstart', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length === 1) {\n        // Copy pageX/pageY from the object\n        firstTouch = {\n          pageX: event.touches[0].pageX,\n          pageY: event.touches[0].pageY\n        };\n        // Record start time so we can detect a tap vs. \"touch and hold\"\n        touchStart = new Date().getTime();\n        // Reset couldBeTap tracking\n        couldBeTap = true;\n      }\n    });\n\n    this.on('touchmove', function (event) {\n      // If more than one finger, don't consider treating this as a click\n      if (event.touches.length > 1) {\n        couldBeTap = false;\n      } else if (firstTouch) {\n        // Some devices will throw touchmoves for all but the slightest of taps.\n        // So, if we moved only a small distance, this could still be a tap\n        var xdiff = event.touches[0].pageX - firstTouch.pageX;\n        var ydiff = event.touches[0].pageY - firstTouch.pageY;\n        var touchDistance = Math.sqrt(xdiff * xdiff + ydiff * ydiff);\n\n        if (touchDistance > tapMovementThreshold) {\n          couldBeTap = false;\n        }\n      }\n    });\n\n    var noTap = function noTap() {\n      couldBeTap = false;\n    };\n\n    // TODO: Listen to the original target. http://youtu.be/DujfpXOKUp8?t=13m8s\n    this.on('touchleave', noTap);\n    this.on('touchcancel', noTap);\n\n    // When the touch ends, measure how long it took and trigger the appropriate\n    // event\n    this.on('touchend', function (event) {\n      firstTouch = null;\n      // Proceed only if the touchmove/leave/cancel event didn't happen\n      if (couldBeTap === true) {\n        // Measure how long the touch lasted\n        var touchTime = new Date().getTime() - touchStart;\n\n        // Make sure the touch was less than the threshold to be considered a tap\n        if (touchTime < touchTimeThreshold) {\n          // Don't let browser turn this into a click\n          event.preventDefault();\n          /**\n           * Triggered when a `Component` is tapped.\n           *\n           * @event Component#tap\n           * @type {EventTarget~Event}\n           */\n          this.trigger('tap');\n          // It may be good to copy the touchend event object and change the\n          // type to tap, if the other event properties aren't exact after\n          // Events.fixEvent runs (e.g. event.target)\n        }\n      }\n    });\n  };\n\n  /**\n   * This function reports user activity whenever touch events happen. This can get\n   * turned off by any sub-components that wants touch events to act another way.\n   *\n   * Report user touch activity when touch events occur. User activity gets used to\n   * determine when controls should show/hide. It is simple when it comes to mouse\n   * events, because any mouse event should show the controls. So we capture mouse\n   * events that bubble up to the player and report activity when that happens.\n   * With touch events it isn't as easy as `touchstart` and `touchend` toggle player\n   * controls. So touch events can't help us at the player level either.\n   *\n   * User activity gets checked asynchronously. So what could happen is a tap event\n   * on the video turns the controls off. Then the `touchend` event bubbles up to\n   * the player. Which, if it reported user activity, would turn the controls right\n   * back on. We also don't want to completely block touch events from bubbling up.\n   * Furthermore a `touchmove` event and anything other than a tap, should not turn\n   * controls back on.\n   *\n   * @listens Component#touchstart\n   * @listens Component#touchmove\n   * @listens Component#touchend\n   * @listens Component#touchcancel\n   */\n\n\n  Component.prototype.enableTouchActivity = function enableTouchActivity() {\n    // Don't continue if the root player doesn't support reporting user activity\n    if (!this.player() || !this.player().reportUserActivity) {\n      return;\n    }\n\n    // listener for reporting that the user is active\n    var report = bind(this.player(), this.player().reportUserActivity);\n\n    var touchHolding = void 0;\n\n    this.on('touchstart', function () {\n      report();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(touchHolding);\n      // report at the same interval as activityCheck\n      touchHolding = this.setInterval(report, 250);\n    });\n\n    var touchEnd = function touchEnd(event) {\n      report();\n      // stop the interval that maintains activity if the touch is holding\n      this.clearInterval(touchHolding);\n    };\n\n    this.on('touchmove', report);\n    this.on('touchend', touchEnd);\n    this.on('touchcancel', touchEnd);\n  };\n\n  /**\n   * A callback that has no parameters and is bound into `Component`s context.\n   *\n   * @callback Component~GenericCallback\n   * @this Component\n   */\n\n  /**\n   * Creates a function that runs after an `x` millisecond timeout. This function is a\n   * wrapper around `window.setTimeout`. There are a few reasons to use this one\n   * instead though:\n   * 1. It gets cleared via  {@link Component#clearTimeout} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will gets turned into a {@link Component~GenericCallback}\n   *\n   * > Note: You can't use `window.clearTimeout` on the id returned by this function. This\n   *         will cause its dispose listener not to get cleaned up! Please use\n   *         {@link Component#clearTimeout} or {@link Component#dispose} instead.\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function that will be run after `timeout`.\n   *\n   * @param {number} timeout\n   *        Timeout in milliseconds to delay before executing the specified function.\n   *\n   * @return {number}\n   *         Returns a timeout ID that gets used to identify the timeout. It can also\n   *         get used in {@link Component#clearTimeout} to clear the timeout that\n   *         was set.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setTimeout}\n   */\n\n\n  Component.prototype.setTimeout = function setTimeout(fn, timeout) {\n    var _this2 = this;\n\n    // declare as variables so they are properly available in timeout function\n    // eslint-disable-next-line\n    var timeoutId, disposeFn;\n\n    fn = bind(this, fn);\n\n    timeoutId = window.setTimeout(function () {\n      _this2.off('dispose', disposeFn);\n      fn();\n    }, timeout);\n\n    disposeFn = function disposeFn() {\n      return _this2.clearTimeout(timeoutId);\n    };\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.on('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Clears a timeout that gets created via `window.setTimeout` or\n   * {@link Component#setTimeout}. If you set a timeout via {@link Component#setTimeout}\n   * use this function instead of `window.clearTimout`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} timeoutId\n   *        The id of the timeout to clear. The return value of\n   *        {@link Component#setTimeout} or `window.setTimeout`.\n   *\n   * @return {number}\n   *         Returns the timeout id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearTimeout}\n   */\n\n\n  Component.prototype.clearTimeout = function clearTimeout(timeoutId) {\n    window.clearTimeout(timeoutId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-timeout-' + timeoutId;\n\n    this.off('dispose', disposeFn);\n\n    return timeoutId;\n  };\n\n  /**\n   * Creates a function that gets run every `x` milliseconds. This function is a wrapper\n   * around `window.setInterval`. There are a few reasons to use this one instead though.\n   * 1. It gets cleared via  {@link Component#clearInterval} when\n   *    {@link Component#dispose} gets called.\n   * 2. The function callback will be a {@link Component~GenericCallback}\n   *\n   * @param {Component~GenericCallback} fn\n   *        The function to run every `x` seconds.\n   *\n   * @param {number} interval\n   *        Execute the specified function every `x` milliseconds.\n   *\n   * @return {number}\n   *         Returns an id that can be used to identify the interval. It can also be be used in\n   *         {@link Component#clearInterval} to clear the interval.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/setInterval}\n   */\n\n\n  Component.prototype.setInterval = function setInterval(fn, interval) {\n    var _this3 = this;\n\n    fn = bind(this, fn);\n\n    var intervalId = window.setInterval(fn, interval);\n\n    var disposeFn = function disposeFn() {\n      return _this3.clearInterval(intervalId);\n    };\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.on('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Clears an interval that gets created via `window.setInterval` or\n   * {@link Component#setInterval}. If you set an inteval via {@link Component#setInterval}\n   * use this function instead of `window.clearInterval`. If you don't your dispose\n   * listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} intervalId\n   *        The id of the interval to clear. The return value of\n   *        {@link Component#setInterval} or `window.setInterval`.\n   *\n   * @return {number}\n   *         Returns the interval id that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/WindowTimers/clearInterval}\n   */\n\n\n  Component.prototype.clearInterval = function clearInterval(intervalId) {\n    window.clearInterval(intervalId);\n\n    var disposeFn = function disposeFn() {};\n\n    disposeFn.guid = 'vjs-interval-' + intervalId;\n\n    this.off('dispose', disposeFn);\n\n    return intervalId;\n  };\n\n  /**\n   * Queues up a callback to be passed to requestAnimationFrame (rAF), but\n   * with a few extra bonuses:\n   *\n   * - Supports browsers that do not support rAF by falling back to\n   *   {@link Component#setTimeout}.\n   *\n   * - The callback is turned into a {@link Component~GenericCallback} (i.e.\n   *   bound to the component).\n   *\n   * - Automatic cancellation of the rAF callback is handled if the component\n   *   is disposed before it is called.\n   *\n   * @param  {Component~GenericCallback} fn\n   *         A function that will be bound to this component and executed just\n   *         before the browser's next repaint.\n   *\n   * @return {number}\n   *         Returns an rAF ID that gets used to identify the timeout. It can\n   *         also be used in {@link Component#cancelAnimationFrame} to cancel\n   *         the animation frame callback.\n   *\n   * @listens Component#dispose\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/requestAnimationFrame}\n   */\n\n\n  Component.prototype.requestAnimationFrame = function requestAnimationFrame(fn) {\n    var _this4 = this;\n\n    // declare as variables so they are properly available in rAF function\n    // eslint-disable-next-line\n    var id, disposeFn;\n\n    if (this.supportsRaf_) {\n      fn = bind(this, fn);\n\n      id = window.requestAnimationFrame(function () {\n        _this4.off('dispose', disposeFn);\n        fn();\n      });\n\n      disposeFn = function disposeFn() {\n        return _this4.cancelAnimationFrame(id);\n      };\n\n      disposeFn.guid = 'vjs-raf-' + id;\n      this.on('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.setTimeout(fn, 1000 / 60);\n  };\n\n  /**\n   * Cancels a queued callback passed to {@link Component#requestAnimationFrame}\n   * (rAF).\n   *\n   * If you queue an rAF callback via {@link Component#requestAnimationFrame},\n   * use this function instead of `window.cancelAnimationFrame`. If you don't,\n   * your dispose listener will not get cleaned up until {@link Component#dispose}!\n   *\n   * @param {number} id\n   *        The rAF ID to clear. The return value of {@link Component#requestAnimationFrame}.\n   *\n   * @return {number}\n   *         Returns the rAF ID that was cleared.\n   *\n   * @see [Similar to]{@link https://developer.mozilla.org/en-US/docs/Web/API/window/cancelAnimationFrame}\n   */\n\n\n  Component.prototype.cancelAnimationFrame = function cancelAnimationFrame(id) {\n    if (this.supportsRaf_) {\n      window.cancelAnimationFrame(id);\n\n      var disposeFn = function disposeFn() {};\n\n      disposeFn.guid = 'vjs-raf-' + id;\n\n      this.off('dispose', disposeFn);\n\n      return id;\n    }\n\n    // Fall back to using a timer.\n    return this.clearTimeout(id);\n  };\n\n  /**\n   * Register a `Component` with `videojs` given the name and the component.\n   *\n   * > NOTE: {@link Tech}s should not be registered as a `Component`. {@link Tech}s\n   *         should be registered using {@link Tech.registerTech} or\n   *         {@link videojs:videojs.registerTech}.\n   *\n   * > NOTE: This function can also be seen on videojs as\n   *         {@link videojs:videojs.registerComponent}.\n   *\n   * @param {string} name\n   *        The name of the `Component` to register.\n   *\n   * @param {Component} ComponentToRegister\n   *        The `Component` class to register.\n   *\n   * @return {Component}\n   *         The `Component` that was registered.\n   */\n\n\n  Component.registerComponent = function registerComponent(name, ComponentToRegister) {\n    if (typeof name !== 'string' || !name) {\n      throw new Error('Illegal component name, \"' + name + '\"; must be a non-empty string.');\n    }\n\n    var Tech = Component.getComponent('Tech');\n\n    // We need to make sure this check is only done if Tech has been registered.\n    var isTech = Tech && Tech.isTech(ComponentToRegister);\n    var isComp = Component === ComponentToRegister || Component.prototype.isPrototypeOf(ComponentToRegister.prototype);\n\n    if (isTech || !isComp) {\n      var reason = void 0;\n\n      if (isTech) {\n        reason = 'techs must be registered using Tech.registerTech()';\n      } else {\n        reason = 'must be a Component subclass';\n      }\n\n      throw new Error('Illegal component, \"' + name + '\"; ' + reason + '.');\n    }\n\n    name = toTitleCase(name);\n\n    if (!Component.components_) {\n      Component.components_ = {};\n    }\n\n    var Player = Component.getComponent('Player');\n\n    if (name === 'Player' && Player && Player.players) {\n      var players = Player.players;\n      var playerNames = Object.keys(players);\n\n      // If we have players that were disposed, then their name will still be\n      // in Players.players. So, we must loop through and verify that the value\n      // for each item is not null. This allows registration of the Player component\n      // after all players have been disposed or before any were created.\n      if (players && playerNames.length > 0 && playerNames.map(function (pname) {\n        return players[pname];\n      }).every(Boolean)) {\n        throw new Error('Can not register Player component after player has been created.');\n      }\n    }\n\n    Component.components_[name] = ComponentToRegister;\n\n    return ComponentToRegister;\n  };\n\n  /**\n   * Get a `Component` based on the name it was registered with.\n   *\n   * @param {string} name\n   *        The Name of the component to get.\n   *\n   * @return {Component}\n   *         The `Component` that got registered under the given name.\n   *\n   * @deprecated In `videojs` 6 this will not return `Component`s that were not\n   *             registered using {@link Component.registerComponent}. Currently we\n   *             check the global `videojs` object for a `Component` name and\n   *             return that if it exists.\n   */\n\n\n  Component.getComponent = function getComponent(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Component.components_ && Component.components_[name]) {\n      return Component.components_[name];\n    }\n  };\n\n  return Component;\n}();\n\n/**\n * Whether or not this component supports `requestAnimationFrame`.\n *\n * This is exposed primarily for testing purposes.\n *\n * @private\n * @type {Boolean}\n */\n\n\nComponent.prototype.supportsRaf_ = typeof window.requestAnimationFrame === 'function' && typeof window.cancelAnimationFrame === 'function';\n\nComponent.registerComponent('Component', Component);\n\n/**\n * @file time-ranges.js\n * @module time-ranges\n */\n\n/**\n * Returns the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @function time-ranges:indexFunction\n *\n * @param {number} [index=0]\n *        The range number to return the time for.\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n * @depricated index must be set to a value, in the future this will throw an error.\n */\n\n/**\n * An object that contains ranges of time for various reasons.\n *\n * @typedef {Object} TimeRange\n *\n * @property {number} length\n *           The number of time ranges represented by this Object\n *\n * @property {time-ranges:indexFunction} start\n *           Returns the time offset at which a specified time range begins.\n *\n * @property {time-ranges:indexFunction} end\n *           Returns the time offset at which a specified time range ends.\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/API/TimeRanges\n */\n\n/**\n * Check if any of the time ranges are over the maximum index.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {number} index\n *        The index to check\n *\n * @param {number} maxIndex\n *        The maximum possible index\n *\n * @throws {Error} if the timeRanges provided are over the maxIndex\n */\nfunction rangeCheck(fnName, index, maxIndex) {\n  if (typeof index !== 'number' || index < 0 || index > maxIndex) {\n    throw new Error('Failed to execute \\'' + fnName + '\\' on \\'TimeRanges\\': The index provided (' + index + ') is non-numeric or out of bounds (0-' + maxIndex + ').');\n  }\n}\n\n/**\n * Get the time for the specified index at the start or end\n * of a TimeRange object.\n *\n * @param {string} fnName\n *        The function name to use for logging\n *\n * @param {string} valueIndex\n *        The proprety that should be used to get the time. should be 'start' or 'end'\n *\n * @param {Array} ranges\n *        An array of time ranges\n *\n * @param {Array} [rangeIndex=0]\n *        The index to start the search at\n *\n * @return {number}\n *         The time that offset at the specified index.\n *\n *\n * @depricated rangeIndex must be set to a value, in the future this will throw an error.\n * @throws {Error} if rangeIndex is more than the length of ranges\n */\nfunction getRange(fnName, valueIndex, ranges, rangeIndex) {\n  rangeCheck(fnName, rangeIndex, ranges.length - 1);\n  return ranges[rangeIndex][valueIndex];\n}\n\n/**\n * Create a time range object given ranges of time.\n *\n * @param {Array} [ranges]\n *        An array of time ranges.\n */\nfunction createTimeRangesObj(ranges) {\n  if (ranges === undefined || ranges.length === 0) {\n    return {\n      length: 0,\n      start: function start() {\n        throw new Error('This TimeRanges object is empty');\n      },\n      end: function end() {\n        throw new Error('This TimeRanges object is empty');\n      }\n    };\n  }\n  return {\n    length: ranges.length,\n    start: getRange.bind(null, 'start', 0, ranges),\n    end: getRange.bind(null, 'end', 1, ranges)\n  };\n}\n\n/**\n * Should create a fake `TimeRange` object which mimics an HTML5 time range instance.\n *\n * @param {number|Array} start\n *        The start of a single range or an array of ranges\n *\n * @param {number} end\n *        The end of a single range.\n *\n * @private\n */\nfunction createTimeRanges(start, end) {\n  if (Array.isArray(start)) {\n    return createTimeRangesObj(start);\n  } else if (start === undefined || end === undefined) {\n    return createTimeRangesObj();\n  }\n  return createTimeRangesObj([[start, end]]);\n}\n\n/**\n * @file buffer.js\n * @module buffer\n */\n/**\n * Compute the percentage of the media that has been buffered.\n *\n * @param {TimeRange} buffered\n *        The current `TimeRange` object representing buffered time ranges\n *\n * @param {number} duration\n *        Total duration of the media\n *\n * @return {number}\n *         Percent buffered of the total duration in decimal form.\n */\nfunction bufferedPercent(buffered, duration) {\n  var bufferedDuration = 0;\n  var start = void 0;\n  var end = void 0;\n\n  if (!duration) {\n    return 0;\n  }\n\n  if (!buffered || !buffered.length) {\n    buffered = createTimeRanges(0, 0);\n  }\n\n  for (var i = 0; i < buffered.length; i++) {\n    start = buffered.start(i);\n    end = buffered.end(i);\n\n    // buffered end can be bigger than duration by a very small fraction\n    if (end > duration) {\n      end = duration;\n    }\n\n    bufferedDuration += end - start;\n  }\n\n  return bufferedDuration / duration;\n}\n\n/**\n * @file fullscreen-api.js\n * @module fullscreen-api\n * @private\n */\n/**\n * Store the browser-specific methods for the fullscreen API.\n *\n * @type {Object}\n * @see [Specification]{@link https://fullscreen.spec.whatwg.org}\n * @see [Map Approach From Screenfull.js]{@link https://github.com/sindresorhus/screenfull.js}\n */\nvar FullscreenApi = {};\n\n// browser API methods\nvar apiMap = [['requestFullscreen', 'exitFullscreen', 'fullscreenElement', 'fullscreenEnabled', 'fullscreenchange', 'fullscreenerror'],\n// WebKit\n['webkitRequestFullscreen', 'webkitExitFullscreen', 'webkitFullscreenElement', 'webkitFullscreenEnabled', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Old WebKit (Safari 5.1)\n['webkitRequestFullScreen', 'webkitCancelFullScreen', 'webkitCurrentFullScreenElement', 'webkitCancelFullScreen', 'webkitfullscreenchange', 'webkitfullscreenerror'],\n// Mozilla\n['mozRequestFullScreen', 'mozCancelFullScreen', 'mozFullScreenElement', 'mozFullScreenEnabled', 'mozfullscreenchange', 'mozfullscreenerror'],\n// Microsoft\n['msRequestFullscreen', 'msExitFullscreen', 'msFullscreenElement', 'msFullscreenEnabled', 'MSFullscreenChange', 'MSFullscreenError']];\n\nvar specApi = apiMap[0];\nvar browserApi = void 0;\n\n// determine the supported set of functions\nfor (var i = 0; i < apiMap.length; i++) {\n  // check for exitFullscreen function\n  if (apiMap[i][1] in document) {\n    browserApi = apiMap[i];\n    break;\n  }\n}\n\n// map the browser API names to the spec API names\nif (browserApi) {\n  for (var _i = 0; _i < browserApi.length; _i++) {\n    FullscreenApi[specApi[_i]] = browserApi[_i];\n  }\n}\n\n/**\n * @file media-error.js\n */\n/**\n * A Custom `MediaError` class which mimics the standard HTML5 `MediaError` class.\n *\n * @param {number|string|Object|MediaError} value\n *        This can be of multiple types:\n *        - number: should be a standard error code\n *        - string: an error message (the code will be 0)\n *        - Object: arbitrary properties\n *        - `MediaError` (native): used to populate a video.js `MediaError` object\n *        - `MediaError` (video.js): will return itself if it's already a\n *          video.js `MediaError` object.\n *\n * @see [MediaError Spec]{@link https://dev.w3.org/html5/spec-author-view/video.html#mediaerror}\n * @see [Encrypted MediaError Spec]{@link https://www.w3.org/TR/2013/WD-encrypted-media-20130510/#error-codes}\n *\n * @class MediaError\n */\nfunction MediaError(value) {\n\n  // Allow redundant calls to this constructor to avoid having `instanceof`\n  // checks peppered around the code.\n  if (value instanceof MediaError) {\n    return value;\n  }\n\n  if (typeof value === 'number') {\n    this.code = value;\n  } else if (typeof value === 'string') {\n    // default code is zero, so this is a custom error\n    this.message = value;\n  } else if (isObject(value)) {\n\n    // We assign the `code` property manually because native `MediaError` objects\n    // do not expose it as an own/enumerable property of the object.\n    if (typeof value.code === 'number') {\n      this.code = value.code;\n    }\n\n    assign(this, value);\n  }\n\n  if (!this.message) {\n    this.message = MediaError.defaultMessages[this.code] || '';\n  }\n}\n\n/**\n * The error code that refers two one of the defined `MediaError` types\n *\n * @type {Number}\n */\nMediaError.prototype.code = 0;\n\n/**\n * An optional message that to show with the error. Message is not part of the HTML5\n * video spec but allows for more informative custom errors.\n *\n * @type {String}\n */\nMediaError.prototype.message = '';\n\n/**\n * An optional status code that can be set by plugins to allow even more detail about\n * the error. For example a plugin might provide a specific HTTP status code and an\n * error message for that code. Then when the plugin gets that error this class will\n * know how to display an error message for it. This allows a custom message to show\n * up on the `Player` error overlay.\n *\n * @type {Array}\n */\nMediaError.prototype.status = null;\n\n/**\n * Errors indexed by the W3C standard. The order **CANNOT CHANGE**! See the\n * specification listed under {@link MediaError} for more information.\n *\n * @enum {array}\n * @readonly\n * @property {string} 0 - MEDIA_ERR_CUSTOM\n * @property {string} 1 - MEDIA_ERR_CUSTOM\n * @property {string} 2 - MEDIA_ERR_ABORTED\n * @property {string} 3 - MEDIA_ERR_NETWORK\n * @property {string} 4 - MEDIA_ERR_SRC_NOT_SUPPORTED\n * @property {string} 5 - MEDIA_ERR_ENCRYPTED\n */\nMediaError.errorTypes = ['MEDIA_ERR_CUSTOM', 'MEDIA_ERR_ABORTED', 'MEDIA_ERR_NETWORK', 'MEDIA_ERR_DECODE', 'MEDIA_ERR_SRC_NOT_SUPPORTED', 'MEDIA_ERR_ENCRYPTED'];\n\n/**\n * The default `MediaError` messages based on the {@link MediaError.errorTypes}.\n *\n * @type {Array}\n * @constant\n */\nMediaError.defaultMessages = {\n  1: 'You aborted the media playback',\n  2: 'A network error caused the media download to fail part-way.',\n  3: 'The media playback was aborted due to a corruption problem or because the media used features your browser did not support.',\n  4: 'The media could not be loaded, either because the server or network failed or because the format is not supported.',\n  5: 'The media is encrypted and we do not have the keys to decrypt it.'\n};\n\n// Add types as properties on MediaError\n// e.g. MediaError.MEDIA_ERR_SRC_NOT_SUPPORTED = 4;\nfor (var errNum = 0; errNum < MediaError.errorTypes.length; errNum++) {\n  MediaError[MediaError.errorTypes[errNum]] = errNum;\n  // values should be accessible on both the class and instance\n  MediaError.prototype[MediaError.errorTypes[errNum]] = errNum;\n}\n\n/**\n * Returns whether an object is `Promise`-like (i.e. has a `then` method).\n *\n * @param  {Object}  value\n *         An object that may or may not be `Promise`-like.\n *\n * @return {Boolean}\n *         Whether or not the object is `Promise`-like.\n */\nfunction isPromise(value) {\n  return value !== undefined && value !== null && typeof value.then === 'function';\n}\n\n/**\n * Silence a Promise-like object.\n *\n * This is useful for avoiding non-harmful, but potentially confusing \"uncaught\n * play promise\" rejection error messages.\n *\n * @param  {Object} value\n *         An object that may or may not be `Promise`-like.\n */\nfunction silencePromise(value) {\n  if (isPromise(value)) {\n    value.then(null, function (e) {});\n  }\n}\n\n/**\n * @file text-track-list-converter.js Utilities for capturing text track state and\n * re-creating tracks based on a capture.\n *\n * @module text-track-list-converter\n */\n\n/**\n * Examine a single {@link TextTrack} and return a JSON-compatible javascript object that\n * represents the {@link TextTrack}'s state.\n *\n * @param {TextTrack} track\n *        The text track to query.\n *\n * @return {Object}\n *         A serializable javascript representation of the TextTrack.\n * @private\n */\nvar trackToJson_ = function trackToJson_(track) {\n  var ret = ['kind', 'label', 'language', 'id', 'inBandMetadataTrackDispatchType', 'mode', 'src'].reduce(function (acc, prop, i) {\n\n    if (track[prop]) {\n      acc[prop] = track[prop];\n    }\n\n    return acc;\n  }, {\n    cues: track.cues && Array.prototype.map.call(track.cues, function (cue) {\n      return {\n        startTime: cue.startTime,\n        endTime: cue.endTime,\n        text: cue.text,\n        id: cue.id\n      };\n    })\n  });\n\n  return ret;\n};\n\n/**\n * Examine a {@link Tech} and return a JSON-compatible javascript array that represents the\n * state of all {@link TextTrack}s currently configured. The return array is compatible with\n * {@link text-track-list-converter:jsonToTextTracks}.\n *\n * @param {Tech} tech\n *        The tech object to query\n *\n * @return {Array}\n *         A serializable javascript representation of the {@link Tech}s\n *         {@link TextTrackList}.\n */\nvar textTracksToJson = function textTracksToJson(tech) {\n\n  var trackEls = tech.$$('track');\n\n  var trackObjs = Array.prototype.map.call(trackEls, function (t) {\n    return t.track;\n  });\n  var tracks = Array.prototype.map.call(trackEls, function (trackEl) {\n    var json = trackToJson_(trackEl.track);\n\n    if (trackEl.src) {\n      json.src = trackEl.src;\n    }\n    return json;\n  });\n\n  return tracks.concat(Array.prototype.filter.call(tech.textTracks(), function (track) {\n    return trackObjs.indexOf(track) === -1;\n  }).map(trackToJson_));\n};\n\n/**\n * Create a set of remote {@link TextTrack}s on a {@link Tech} based on an array of javascript\n * object {@link TextTrack} representations.\n *\n * @param {Array} json\n *        An array of `TextTrack` representation objects, like those that would be\n *        produced by `textTracksToJson`.\n *\n * @param {Tech} tech\n *        The `Tech` to create the `TextTrack`s on.\n */\nvar jsonToTextTracks = function jsonToTextTracks(json, tech) {\n  json.forEach(function (track) {\n    var addedTrack = tech.addRemoteTextTrack(track).track;\n\n    if (!track.src && track.cues) {\n      track.cues.forEach(function (cue) {\n        return addedTrack.addCue(cue);\n      });\n    }\n  });\n\n  return tech.textTracks();\n};\n\nvar textTrackConverter = { textTracksToJson: textTracksToJson, jsonToTextTracks: jsonToTextTracks, trackToJson_: trackToJson_ };\n\n/**\n * @file modal-dialog.js\n */\nvar MODAL_CLASS_NAME = 'vjs-modal-dialog';\nvar ESC = 27;\n\n/**\n * The `ModalDialog` displays over the video and its controls, which blocks\n * interaction with the player until it is closed.\n *\n * Modal dialogs include a \"Close\" button and will close when that button\n * is activated - or when ESC is pressed anywhere.\n *\n * @extends Component\n */\n\nvar ModalDialog = function (_Component) {\n  inherits(ModalDialog, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Mixed} [options.content=undefined]\n   *        Provide customized content for this modal.\n   *\n   * @param {string} [options.description]\n   *        A text description for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.fillAlways=false]\n   *        Normally, modals are automatically filled only the first time\n   *        they open. This tells the modal to refresh its content\n   *        every time it opens.\n   *\n   * @param {string} [options.label]\n   *        A text label for the modal, primarily for accessibility.\n   *\n   * @param {boolean} [options.temporary=true]\n   *        If `true`, the modal can only be opened once; it will be\n   *        disposed as soon as it's closed.\n   *\n   * @param {boolean} [options.uncloseable=false]\n   *        If `true`, the user will not be able to close the modal\n   *        through the UI in the normal ways. Programmatic closing is\n   *        still possible.\n   */\n  function ModalDialog(player, options) {\n    classCallCheck(this, ModalDialog);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.opened_ = _this.hasBeenOpened_ = _this.hasBeenFilled_ = false;\n\n    _this.closeable(!_this.options_.uncloseable);\n    _this.content(_this.options_.content);\n\n    // Make sure the contentEl is defined AFTER any children are initialized\n    // because we only want the contents of the modal in the contentEl\n    // (not the UI elements like the close button).\n    _this.contentEl_ = createEl('div', {\n      className: MODAL_CLASS_NAME + '-content'\n    }, {\n      role: 'document'\n    });\n\n    _this.descEl_ = createEl('p', {\n      className: MODAL_CLASS_NAME + '-description vjs-control-text',\n      id: _this.el().getAttribute('aria-describedby')\n    });\n\n    textContent(_this.descEl_, _this.description());\n    _this.el_.appendChild(_this.descEl_);\n    _this.el_.appendChild(_this.contentEl_);\n    return _this;\n  }\n\n  /**\n   * Create the `ModalDialog`'s DOM element\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  ModalDialog.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass(),\n      tabIndex: -1\n    }, {\n      'aria-describedby': this.id() + '_description',\n      'aria-hidden': 'true',\n      'aria-label': this.label(),\n      'role': 'dialog'\n    });\n  };\n\n  ModalDialog.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.descEl_ = null;\n    this.previouslyActiveEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ModalDialog.prototype.buildCSSClass = function buildCSSClass() {\n    return MODAL_CLASS_NAME + ' vjs-hidden ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles `keydown` events on the document, looking for ESC, which closes\n   * the modal.\n   *\n   * @param {EventTarget~Event} e\n   *        The keypress that triggered this event.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyPress = function handleKeyPress(e) {\n    if (e.which === ESC && this.closeable()) {\n      this.close();\n    }\n  };\n\n  /**\n   * Returns the label string for this modal. Primarily used for accessibility.\n   *\n   * @return {string}\n   *         the localized or raw label of this modal.\n   */\n\n\n  ModalDialog.prototype.label = function label() {\n    return this.localize(this.options_.label || 'Modal Window');\n  };\n\n  /**\n   * Returns the description string for this modal. Primarily used for\n   * accessibility.\n   *\n   * @return {string}\n   *         The localized or raw description of this modal.\n   */\n\n\n  ModalDialog.prototype.description = function description() {\n    var desc = this.options_.description || this.localize('This is a modal window.');\n\n    // Append a universal closeability message if the modal is closeable.\n    if (this.closeable()) {\n      desc += ' ' + this.localize('This modal can be closed by pressing the Escape key or activating the close button.');\n    }\n\n    return desc;\n  };\n\n  /**\n   * Opens the modal.\n   *\n   * @fires ModalDialog#beforemodalopen\n   * @fires ModalDialog#modalopen\n   */\n\n\n  ModalDialog.prototype.open = function open() {\n    if (!this.opened_) {\n      var player = this.player();\n\n      /**\n        * Fired just before a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#beforemodalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('beforemodalopen');\n      this.opened_ = true;\n\n      // Fill content if the modal has never opened before and\n      // never been filled.\n      if (this.options_.fillAlways || !this.hasBeenOpened_ && !this.hasBeenFilled_) {\n        this.fill();\n      }\n\n      // If the player was playing, pause it and take note of its previously\n      // playing state.\n      this.wasPlaying_ = !player.paused();\n\n      if (this.options_.pauseOnOpen && this.wasPlaying_) {\n        player.pause();\n      }\n\n      if (this.closeable()) {\n        this.on(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n      }\n\n      // Hide controls and note if they were enabled.\n      this.hadControls_ = player.controls();\n      player.controls(false);\n\n      this.show();\n      this.conditionalFocus_();\n      this.el().setAttribute('aria-hidden', 'false');\n\n      /**\n        * Fired just after a `ModalDialog` is opened.\n        *\n        * @event ModalDialog#modalopen\n        * @type {EventTarget~Event}\n        */\n      this.trigger('modalopen');\n      this.hasBeenOpened_ = true;\n    }\n  };\n\n  /**\n   * If the `ModalDialog` is currently open or closed.\n   *\n   * @param  {boolean} [value]\n   *         If given, it will open (`true`) or close (`false`) the modal.\n   *\n   * @return {boolean}\n   *         the current open state of the modaldialog\n   */\n\n\n  ModalDialog.prototype.opened = function opened(value) {\n    if (typeof value === 'boolean') {\n      this[value ? 'open' : 'close']();\n    }\n    return this.opened_;\n  };\n\n  /**\n   * Closes the modal, does nothing if the `ModalDialog` is\n   * not open.\n   *\n   * @fires ModalDialog#beforemodalclose\n   * @fires ModalDialog#modalclose\n   */\n\n\n  ModalDialog.prototype.close = function close() {\n    if (!this.opened_) {\n      return;\n    }\n    var player = this.player();\n\n    /**\n      * Fired just before a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#beforemodalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('beforemodalclose');\n    this.opened_ = false;\n\n    if (this.wasPlaying_ && this.options_.pauseOnOpen) {\n      player.play();\n    }\n\n    if (this.closeable()) {\n      this.off(this.el_.ownerDocument, 'keydown', bind(this, this.handleKeyPress));\n    }\n\n    if (this.hadControls_) {\n      player.controls(true);\n    }\n\n    this.hide();\n    this.el().setAttribute('aria-hidden', 'true');\n\n    /**\n      * Fired just after a `ModalDialog` is closed.\n      *\n      * @event ModalDialog#modalclose\n      * @type {EventTarget~Event}\n      */\n    this.trigger('modalclose');\n    this.conditionalBlur_();\n\n    if (this.options_.temporary) {\n      this.dispose();\n    }\n  };\n\n  /**\n   * Check to see if the `ModalDialog` is closeable via the UI.\n   *\n   * @param  {boolean} [value]\n   *         If given as a boolean, it will set the `closeable` option.\n   *\n   * @return {boolean}\n   *         Returns the final value of the closable option.\n   */\n\n\n  ModalDialog.prototype.closeable = function closeable(value) {\n    if (typeof value === 'boolean') {\n      var closeable = this.closeable_ = !!value;\n      var close = this.getChild('closeButton');\n\n      // If this is being made closeable and has no close button, add one.\n      if (closeable && !close) {\n\n        // The close button should be a child of the modal - not its\n        // content element, so temporarily change the content element.\n        var temp = this.contentEl_;\n\n        this.contentEl_ = this.el_;\n        close = this.addChild('closeButton', { controlText: 'Close Modal Dialog' });\n        this.contentEl_ = temp;\n        this.on(close, 'close', this.close);\n      }\n\n      // If this is being made uncloseable and has a close button, remove it.\n      if (!closeable && close) {\n        this.off(close, 'close', this.close);\n        this.removeChild(close);\n        close.dispose();\n      }\n    }\n    return this.closeable_;\n  };\n\n  /**\n   * Fill the modal's content element with the modal's \"content\" option.\n   * The content element will be emptied before this change takes place.\n   */\n\n\n  ModalDialog.prototype.fill = function fill() {\n    this.fillWith(this.content());\n  };\n\n  /**\n   * Fill the modal's content element with arbitrary content.\n   * The content element will be emptied before this change takes place.\n   *\n   * @fires ModalDialog#beforemodalfill\n   * @fires ModalDialog#modalfill\n   *\n   * @param {Mixed} [content]\n   *        The same rules apply to this as apply to the `content` option.\n   */\n\n\n  ModalDialog.prototype.fillWith = function fillWith(content) {\n    var contentEl = this.contentEl();\n    var parentEl = contentEl.parentNode;\n    var nextSiblingEl = contentEl.nextSibling;\n\n    /**\n     * Fired just before a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#beforemodalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalfill');\n    this.hasBeenFilled_ = true;\n\n    // Detach the content element from the DOM before performing\n    // manipulation to avoid modifying the live DOM multiple times.\n    parentEl.removeChild(contentEl);\n    this.empty();\n    insertContent(contentEl, content);\n    /**\n     * Fired just after a `ModalDialog` is filled with content.\n     *\n     * @event ModalDialog#modalfill\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalfill');\n\n    // Re-inject the re-filled content element.\n    if (nextSiblingEl) {\n      parentEl.insertBefore(contentEl, nextSiblingEl);\n    } else {\n      parentEl.appendChild(contentEl);\n    }\n\n    // make sure that the close button is last in the dialog DOM\n    var closeButton = this.getChild('closeButton');\n\n    if (closeButton) {\n      parentEl.appendChild(closeButton.el_);\n    }\n  };\n\n  /**\n   * Empties the content element. This happens anytime the modal is filled.\n   *\n   * @fires ModalDialog#beforemodalempty\n   * @fires ModalDialog#modalempty\n   */\n\n\n  ModalDialog.prototype.empty = function empty() {\n    /**\n     * Fired just before a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#beforemodalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('beforemodalempty');\n    emptyEl(this.contentEl());\n\n    /**\n     * Fired just after a `ModalDialog` is emptied.\n     *\n     * @event ModalDialog#modalempty\n     * @type {EventTarget~Event}\n     */\n    this.trigger('modalempty');\n  };\n\n  /**\n   * Gets or sets the modal content, which gets normalized before being\n   * rendered into the DOM.\n   *\n   * This does not update the DOM or fill the modal, but it is called during\n   * that process.\n   *\n   * @param  {Mixed} [value]\n   *         If defined, sets the internal content value to be used on the\n   *         next call(s) to `fill`. This value is normalized before being\n   *         inserted. To \"clear\" the internal content value, pass `null`.\n   *\n   * @return {Mixed}\n   *         The current content of the modal dialog\n   */\n\n\n  ModalDialog.prototype.content = function content(value) {\n    if (typeof value !== 'undefined') {\n      this.content_ = value;\n    }\n    return this.content_;\n  };\n\n  /**\n   * conditionally focus the modal dialog if focus was previously on the player.\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalFocus_ = function conditionalFocus_() {\n    var activeEl = document.activeElement;\n    var playerEl = this.player_.el_;\n\n    this.previouslyActiveEl_ = null;\n\n    if (playerEl.contains(activeEl) || playerEl === activeEl) {\n      this.previouslyActiveEl_ = activeEl;\n\n      this.focus();\n\n      this.on(document, 'keydown', this.handleKeyDown);\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the last focused element\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.conditionalBlur_ = function conditionalBlur_() {\n    if (this.previouslyActiveEl_) {\n      this.previouslyActiveEl_.focus();\n      this.previouslyActiveEl_ = null;\n    }\n\n    this.off(document, 'keydown', this.handleKeyDown);\n  };\n\n  /**\n   * Keydown handler. Attached when modal is focused.\n   *\n   * @listens keydown\n   */\n\n\n  ModalDialog.prototype.handleKeyDown = function handleKeyDown(event) {\n    // exit early if it isn't a tab key\n    if (event.which !== 9) {\n      return;\n    }\n\n    var focusableEls = this.focusableEls_();\n    var activeEl = this.el_.querySelector(':focus');\n    var focusIndex = void 0;\n\n    for (var i = 0; i < focusableEls.length; i++) {\n      if (activeEl === focusableEls[i]) {\n        focusIndex = i;\n        break;\n      }\n    }\n\n    if (document.activeElement === this.el_) {\n      focusIndex = 0;\n    }\n\n    if (event.shiftKey && focusIndex === 0) {\n      focusableEls[focusableEls.length - 1].focus();\n      event.preventDefault();\n    } else if (!event.shiftKey && focusIndex === focusableEls.length - 1) {\n      focusableEls[0].focus();\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * get all focusable elements\n   *\n   * @private\n   */\n\n\n  ModalDialog.prototype.focusableEls_ = function focusableEls_() {\n    var allChildren = this.el_.querySelectorAll('*');\n\n    return Array.prototype.filter.call(allChildren, function (child) {\n      return (child instanceof window.HTMLAnchorElement || child instanceof window.HTMLAreaElement) && child.hasAttribute('href') || (child instanceof window.HTMLInputElement || child instanceof window.HTMLSelectElement || child instanceof window.HTMLTextAreaElement || child instanceof window.HTMLButtonElement) && !child.hasAttribute('disabled') || child instanceof window.HTMLIFrameElement || child instanceof window.HTMLObjectElement || child instanceof window.HTMLEmbedElement || child.hasAttribute('tabindex') && child.getAttribute('tabindex') !== -1 || child.hasAttribute('contenteditable');\n    });\n  };\n\n  return ModalDialog;\n}(Component);\n\n/**\n * Default options for `ModalDialog` default options.\n *\n * @type {Object}\n * @private\n */\n\n\nModalDialog.prototype.options_ = {\n  pauseOnOpen: true,\n  temporary: true\n};\n\nComponent.registerComponent('ModalDialog', ModalDialog);\n\n/**\n * @file track-list.js\n */\n/**\n * Common functionaliy between {@link TextTrackList}, {@link AudioTrackList}, and\n * {@link VideoTrackList}\n *\n * @extends EventTarget\n */\n\nvar TrackList = function (_EventTarget) {\n  inherits(TrackList, _EventTarget);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Track[]} tracks\n   *        A list of tracks to initialize the list with.\n   *\n   * @param {Object} [list]\n   *        The child object with inheritance done manually for ie8.\n   *\n   * @abstract\n   */\n  function TrackList() {\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    var _ret;\n\n    var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n    classCallCheck(this, TrackList);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    if (!list) {\n      list = _this; // eslint-disable-line\n      if (IS_IE8) {\n        list = document.createElement('custom');\n        for (var prop in TrackList.prototype) {\n          if (prop !== 'constructor') {\n            list[prop] = TrackList.prototype[prop];\n          }\n        }\n      }\n    }\n\n    list.tracks_ = [];\n\n    /**\n     * @memberof TrackList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.tracks_.length;\n      }\n    });\n\n    for (var i = 0; i < tracks.length; i++) {\n      list.addTrack(tracks[i]);\n    }\n\n    // must return the object, as for ie8 it will not be this\n    // but a reference to a document object\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link Track} to the `TrackList`\n   *\n   * @param {Track} track\n   *        The audio, video, or text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TrackList.prototype.addTrack = function addTrack(track) {\n    var index = this.tracks_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.tracks_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate tracks\n    if (this.tracks_.indexOf(track) === -1) {\n      this.tracks_.push(track);\n      /**\n       * Triggered when a track is added to a track list.\n       *\n       * @event TrackList#addtrack\n       * @type {EventTarget~Event}\n       * @property {Track} track\n       *           A reference to track that was added.\n       */\n      this.trigger({\n        track: track,\n        type: 'addtrack'\n      });\n    }\n  };\n\n  /**\n   * Remove a {@link Track} from the `TrackList`\n   *\n   * @param {Track} rtrack\n   *        The audio, video, or text track to remove from the list.\n   *\n   * @fires TrackList#removetrack\n   */\n\n\n  TrackList.prototype.removeTrack = function removeTrack(rtrack) {\n    var track = void 0;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      if (this[i] === rtrack) {\n        track = this[i];\n        if (track.off) {\n          track.off();\n        }\n\n        this.tracks_.splice(i, 1);\n\n        break;\n      }\n    }\n\n    if (!track) {\n      return;\n    }\n\n    /**\n     * Triggered when a track is removed from track list.\n     *\n     * @event TrackList#removetrack\n     * @type {EventTarget~Event}\n     * @property {Track} track\n     *           A reference to track that was removed.\n     */\n    this.trigger({\n      track: track,\n      type: 'removetrack'\n    });\n  };\n\n  /**\n   * Get a Track from the TrackList by a tracks id\n   *\n   * @param {String} id - the id of the track to get\n   * @method getTrackById\n   * @return {Track}\n   * @private\n   */\n\n\n  TrackList.prototype.getTrackById = function getTrackById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var track = this[i];\n\n      if (track.id === id) {\n        result = track;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TrackList;\n}(EventTarget);\n\n/**\n * Triggered when a different track is selected/enabled.\n *\n * @event TrackList#change\n * @type {EventTarget~Event}\n */\n\n/**\n * Events that can be called with on + eventName. See {@link EventHandler}.\n *\n * @property {Object} TrackList#allowedEvents_\n * @private\n */\n\n\nTrackList.prototype.allowedEvents_ = {\n  change: 'change',\n  addtrack: 'addtrack',\n  removetrack: 'removetrack'\n};\n\n// emulate attribute EventHandler support to allow for feature detection\nfor (var event in TrackList.prototype.allowedEvents_) {\n  TrackList.prototype['on' + event] = null;\n}\n\n/**\n * @file audio-track-list.js\n */\n/**\n * Anywhere we call this function we diverge from the spec\n * as we only support one enabled audiotrack at a time\n *\n * @param {AudioTrackList} list\n *        list to work on\n *\n * @param {AudioTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another audio track is enabled, disable it\n    list[i].enabled = false;\n  }\n};\n\n/**\n * The current list of {@link AudioTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist}\n * @extends TrackList\n */\n\nvar AudioTrackList = function (_TrackList) {\n  inherits(AudioTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {AudioTrack[]} [tracks=[]]\n   *        A list of `AudioTrack` to instantiate the list with.\n   */\n  function AudioTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, AudioTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].enabled) {\n        disableOthers(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in AudioTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = AudioTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add an {@link AudioTrack} to the `AudioTrackList`.\n   *\n   * @param {AudioTrack} track\n   *        The AudioTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  AudioTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.enabled) {\n      disableOthers(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens AudioTrack#enabledchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('enabledchange', function () {\n      // when we are disabling other tracks (since we don't support\n      // more than one track at a time) we will set changing_\n      // to true so that we don't trigger additional change events\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return AudioTrackList;\n}(TrackList);\n\n/**\n * @file video-track-list.js\n */\n/**\n * Un-select all other {@link VideoTrack}s that are selected.\n *\n * @param {VideoTrackList} list\n *        list to work on\n *\n * @param {VideoTrack} track\n *        The track to skip\n *\n * @private\n */\nvar disableOthers$1 = function disableOthers(list, track) {\n  for (var i = 0; i < list.length; i++) {\n    if (!Object.keys(list[i]).length || track.id === list[i].id) {\n      continue;\n    }\n    // another video track is enabled, disable it\n    list[i].selected = false;\n  }\n};\n\n/**\n * The current list of {@link VideoTrack} for a video.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist}\n * @extends TrackList\n */\n\nvar VideoTrackList = function (_TrackList) {\n  inherits(VideoTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {VideoTrack[]} [tracks=[]]\n   *        A list of `VideoTrack` to instantiate the list with.\n   */\n  function VideoTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, VideoTrackList);\n\n    var list = void 0;\n\n    // make sure only 1 track is enabled\n    // sorted from last index to first index\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      if (tracks[i].selected) {\n        disableOthers$1(tracks, tracks[i]);\n        break;\n      }\n    }\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in VideoTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = VideoTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    list.changing_ = false;\n\n    /**\n     * @member {number} VideoTrackList#selectedIndex\n     *         The current index of the selected {@link VideoTrack`}.\n     */\n    Object.defineProperty(list, 'selectedIndex', {\n      get: function get$$1() {\n        for (var _i = 0; _i < this.length; _i++) {\n          if (this[_i].selected) {\n            return _i;\n          }\n        }\n        return -1;\n      },\n      set: function set$$1() {}\n    });\n\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link VideoTrack} to the `VideoTrackList`.\n   *\n   * @param {VideoTrack} track\n   *        The VideoTrack to add to the list\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  VideoTrackList.prototype.addTrack = function addTrack(track) {\n    var _this2 = this;\n\n    if (track.selected) {\n      disableOthers$1(this, track);\n    }\n\n    _TrackList.prototype.addTrack.call(this, track);\n    // native tracks don't have this\n    if (!track.addEventListener) {\n      return;\n    }\n\n    /**\n     * @listens VideoTrack#selectedchange\n     * @fires TrackList#change\n     */\n    track.addEventListener('selectedchange', function () {\n      if (_this2.changing_) {\n        return;\n      }\n      _this2.changing_ = true;\n      disableOthers$1(_this2, track);\n      _this2.changing_ = false;\n      _this2.trigger('change');\n    });\n  };\n\n  return VideoTrackList;\n}(TrackList);\n\n/**\n * @file text-track-list.js\n */\n/**\n * The current list of {@link TextTrack} for a media file.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttracklist}\n * @extends TrackList\n */\n\nvar TextTrackList = function (_TrackList) {\n  inherits(TextTrackList, _TrackList);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {TextTrack[]} [tracks=[]]\n   *        A list of `TextTrack` to instantiate the list with.\n   */\n  function TextTrackList() {\n    var _this, _ret;\n\n    var tracks = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, TextTrackList);\n\n    var list = void 0;\n\n    // IE8 forces us to implement inheritance ourselves\n    // as it does not support Object.defineProperty properly\n    if (IS_IE8) {\n      list = document.createElement('custom');\n      for (var prop in TrackList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TrackList.prototype[prop];\n        }\n      }\n      for (var _prop in TextTrackList.prototype) {\n        if (_prop !== 'constructor') {\n          list[_prop] = TextTrackList.prototype[_prop];\n        }\n      }\n    }\n\n    list = (_this = possibleConstructorReturn(this, _TrackList.call(this, tracks, list)), _this);\n    return _ret = list, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a {@link TextTrack} to the `TextTrackList`\n   *\n   * @param {TextTrack} track\n   *        The text track to add to the list.\n   *\n   * @fires TrackList#addtrack\n   */\n\n\n  TextTrackList.prototype.addTrack = function addTrack(track) {\n    _TrackList.prototype.addTrack.call(this, track);\n\n    /**\n     * @listens TextTrack#modechange\n     * @fires TrackList#change\n     */\n    track.addEventListener('modechange', bind(this, function () {\n      this.trigger('change');\n    }));\n\n    var nonLanguageTextTrackKind = ['metadata', 'chapters'];\n\n    if (nonLanguageTextTrackKind.indexOf(track.kind) === -1) {\n      track.addEventListener('modechange', bind(this, function () {\n        this.trigger('selectedlanguagechange');\n      }));\n    }\n  };\n\n  return TextTrackList;\n}(TrackList);\n\n/**\n * @file html-track-element-list.js\n */\n\n/**\n * The current list of {@link HtmlTrackElement}s.\n */\n\nvar HtmlTrackElementList = function () {\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {HtmlTrackElement[]} [tracks=[]]\n   *        A list of `HtmlTrackElement` to instantiate the list with.\n   */\n  function HtmlTrackElementList() {\n    var trackElements = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    classCallCheck(this, HtmlTrackElementList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in HtmlTrackElementList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = HtmlTrackElementList.prototype[prop];\n        }\n      }\n    }\n\n    list.trackElements_ = [];\n\n    /**\n     * @memberof HtmlTrackElementList\n     * @member {number} length\n     *         The current number of `Track`s in the this Trackist.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.trackElements_.length;\n      }\n    });\n\n    for (var i = 0, length = trackElements.length; i < length; i++) {\n      list.addTrackElement_(trackElements[i]);\n    }\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * Add an {@link HtmlTrackElement} to the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to add to the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.addTrackElement_ = function addTrackElement_(trackElement) {\n    var index = this.trackElements_.length;\n\n    if (!('' + index in this)) {\n      Object.defineProperty(this, index, {\n        get: function get$$1() {\n          return this.trackElements_[index];\n        }\n      });\n    }\n\n    // Do not add duplicate elements\n    if (this.trackElements_.indexOf(trackElement) === -1) {\n      this.trackElements_.push(trackElement);\n    }\n  };\n\n  /**\n   * Get an {@link HtmlTrackElement} from the `HtmlTrackElementList` given an\n   * {@link TextTrack}.\n   *\n   * @param {TextTrack} track\n   *        The track associated with a track element.\n   *\n   * @return {HtmlTrackElement|undefined}\n   *         The track element that was found or undefined.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.getTrackElementByTrack_ = function getTrackElementByTrack_(track) {\n    var trackElement_ = void 0;\n\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (track === this.trackElements_[i].track) {\n        trackElement_ = this.trackElements_[i];\n\n        break;\n      }\n    }\n\n    return trackElement_;\n  };\n\n  /**\n   * Remove a {@link HtmlTrackElement} from the `HtmlTrackElementList`\n   *\n   * @param {HtmlTrackElement} trackElement\n   *        The track element to remove from the list.\n   *\n   * @private\n   */\n\n\n  HtmlTrackElementList.prototype.removeTrackElement_ = function removeTrackElement_(trackElement) {\n    for (var i = 0, length = this.trackElements_.length; i < length; i++) {\n      if (trackElement === this.trackElements_[i]) {\n        this.trackElements_.splice(i, 1);\n\n        break;\n      }\n    }\n  };\n\n  return HtmlTrackElementList;\n}();\n\n/**\n * @file text-track-cue-list.js\n */\n/**\n * @typedef {Object} TextTrackCueList~TextTrackCue\n *\n * @property {string} id\n *           The unique id for this text track cue\n *\n * @property {number} startTime\n *           The start time for this text track cue\n *\n * @property {number} endTime\n *           The end time for this text track cue\n *\n * @property {boolean} pauseOnExit\n *           Pause when the end time is reached if true.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcue}\n */\n\n/**\n * A List of TextTrackCues.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackcuelist}\n */\n\nvar TextTrackCueList = function () {\n\n  /**\n   * Create an instance of this class..\n   *\n   * @param {Array} cues\n   *        A list of cues to be initialized with\n   */\n  function TextTrackCueList(cues) {\n    classCallCheck(this, TextTrackCueList);\n\n    var list = this; // eslint-disable-line\n\n    if (IS_IE8) {\n      list = document.createElement('custom');\n\n      for (var prop in TextTrackCueList.prototype) {\n        if (prop !== 'constructor') {\n          list[prop] = TextTrackCueList.prototype[prop];\n        }\n      }\n    }\n\n    TextTrackCueList.prototype.setCues_.call(list, cues);\n\n    /**\n     * @memberof TextTrackCueList\n     * @member {number} length\n     *         The current number of `TextTrackCue`s in the TextTrackCueList.\n     * @instance\n     */\n    Object.defineProperty(list, 'length', {\n      get: function get$$1() {\n        return this.length_;\n      }\n    });\n\n    if (IS_IE8) {\n      return list;\n    }\n  }\n\n  /**\n   * A setter for cues in this list. Creates getters\n   * an an index for the cues.\n   *\n   * @param {Array} cues\n   *        An array of cues to set\n   *\n   * @private\n   */\n\n\n  TextTrackCueList.prototype.setCues_ = function setCues_(cues) {\n    var oldLength = this.length || 0;\n    var i = 0;\n    var l = cues.length;\n\n    this.cues_ = cues;\n    this.length_ = cues.length;\n\n    var defineProp = function defineProp(index) {\n      if (!('' + index in this)) {\n        Object.defineProperty(this, '' + index, {\n          get: function get$$1() {\n            return this.cues_[index];\n          }\n        });\n      }\n    };\n\n    if (oldLength < l) {\n      i = oldLength;\n\n      for (; i < l; i++) {\n        defineProp.call(this, i);\n      }\n    }\n  };\n\n  /**\n   * Get a `TextTrackCue` that is currently in the `TextTrackCueList` by id.\n   *\n   * @param {string} id\n   *        The id of the cue that should be searched for.\n   *\n   * @return {TextTrackCueList~TextTrackCue|null}\n   *         A single cue or null if none was found.\n   */\n\n\n  TextTrackCueList.prototype.getCueById = function getCueById(id) {\n    var result = null;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n      var cue = this[i];\n\n      if (cue.id === id) {\n        result = cue;\n        break;\n      }\n    }\n\n    return result;\n  };\n\n  return TextTrackCueList;\n}();\n\n/**\n * @file track-kinds.js\n */\n\n/**\n * All possible `VideoTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-videotrack-kind\n * @typedef VideoTrack~Kind\n * @enum\n */\nvar VideoTrackKind = {\n  alternative: 'alternative',\n  captions: 'captions',\n  main: 'main',\n  sign: 'sign',\n  subtitles: 'subtitles',\n  commentary: 'commentary'\n};\n\n/**\n * All possible `AudioTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-audiotrack-kind\n * @typedef AudioTrack~Kind\n * @enum\n */\nvar AudioTrackKind = {\n  'alternative': 'alternative',\n  'descriptions': 'descriptions',\n  'main': 'main',\n  'main-desc': 'main-desc',\n  'translation': 'translation',\n  'commentary': 'commentary'\n};\n\n/**\n * All possible `TextTrackKind`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-texttrack-kind\n * @typedef TextTrack~Kind\n * @enum\n */\nvar TextTrackKind = {\n  subtitles: 'subtitles',\n  captions: 'captions',\n  descriptions: 'descriptions',\n  chapters: 'chapters',\n  metadata: 'metadata'\n};\n\n/**\n * All possible `TextTrackMode`s\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#texttrackmode\n * @typedef TextTrack~Mode\n * @enum\n */\nvar TextTrackMode = {\n  disabled: 'disabled',\n  hidden: 'hidden',\n  showing: 'showing'\n};\n\n/**\n * @file track.js\n */\n/**\n * A Track class that contains all of the common functionality for {@link AudioTrack},\n * {@link VideoTrack}, and {@link TextTrack}.\n *\n * > Note: This class should not be used directly\n *\n * @see {@link https://html.spec.whatwg.org/multipage/embedded-content.html}\n * @extends EventTarget\n * @abstract\n */\n\nvar Track = function (_EventTarget) {\n  inherits(Track, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid kind for the track type you are creating.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @abstract\n   */\n  function Track() {\n    var _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, Track);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var track = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      track = document.createElement('custom');\n      for (var prop in Track.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = Track.prototype[prop];\n        }\n      }\n    }\n\n    var trackProps = {\n      id: options.id || 'vjs_track_' + newGUID(),\n      kind: options.kind || '',\n      label: options.label || '',\n      language: options.language || ''\n    };\n\n    /**\n     * @memberof Track\n     * @member {string} id\n     *         The id of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} kind\n     *         The kind of track that this is. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} label\n     *         The label of this track. Cannot be changed after creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    /**\n     * @memberof Track\n     * @member {string} language\n     *         The two letter language code for this track. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n\n    var _loop = function _loop(key) {\n      Object.defineProperty(track, key, {\n        get: function get$$1() {\n          return trackProps[key];\n        },\n        set: function set$$1() {}\n      });\n    };\n\n    for (var key in trackProps) {\n      _loop(key);\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return Track;\n}(EventTarget);\n\n/**\n * @file url.js\n * @module url\n */\n/**\n * @typedef {Object} url:URLObject\n *\n * @property {string} protocol\n *           The protocol of the url that was parsed.\n *\n * @property {string} hostname\n *           The hostname of the url that was parsed.\n *\n * @property {string} port\n *           The port of the url that was parsed.\n *\n * @property {string} pathname\n *           The pathname of the url that was parsed.\n *\n * @property {string} search\n *           The search query of the url that was parsed.\n *\n * @property {string} hash\n *           The hash of the url that was parsed.\n *\n * @property {string} host\n *           The host of the url that was parsed.\n */\n\n/**\n * Resolve and parse the elements of a URL.\n *\n * @param  {String} url\n *         The url to parse\n *\n * @return {url:URLObject}\n *         An object of url details\n */\nvar parseUrl = function parseUrl(url) {\n  var props = ['protocol', 'hostname', 'port', 'pathname', 'search', 'hash', 'host'];\n\n  // add the url to an anchor and let the browser parse the URL\n  var a = document.createElement('a');\n\n  a.href = url;\n\n  // IE8 (and 9?) Fix\n  // ie8 doesn't parse the URL correctly until the anchor is actually\n  // added to the body, and an innerHTML is needed to trigger the parsing\n  var addToBody = a.host === '' && a.protocol !== 'file:';\n  var div = void 0;\n\n  if (addToBody) {\n    div = document.createElement('div');\n    div.innerHTML = '<a href=\"' + url + '\"></a>';\n    a = div.firstChild;\n    // prevent the div from affecting layout\n    div.setAttribute('style', 'display:none; position:absolute;');\n    document.body.appendChild(div);\n  }\n\n  // Copy the specific URL properties to a new object\n  // This is also needed for IE8 because the anchor loses its\n  // properties when it's removed from the dom\n  var details = {};\n\n  for (var i = 0; i < props.length; i++) {\n    details[props[i]] = a[props[i]];\n  }\n\n  // IE9 adds the port to the host property unlike everyone else. If\n  // a port identifier is added for standard ports, strip it.\n  if (details.protocol === 'http:') {\n    details.host = details.host.replace(/:80$/, '');\n  }\n\n  if (details.protocol === 'https:') {\n    details.host = details.host.replace(/:443$/, '');\n  }\n\n  if (!details.protocol) {\n    details.protocol = window.location.protocol;\n  }\n\n  if (addToBody) {\n    document.body.removeChild(div);\n  }\n\n  return details;\n};\n\n/**\n * Get absolute version of relative URL. Used to tell flash correct URL.\n *\n *\n * @param  {string} url\n *         URL to make absolute\n *\n * @return {string}\n *         Absolute URL\n *\n * @see http://stackoverflow.com/questions/470832/getting-an-absolute-url-from-a-relative-one-ie6-issue\n */\nvar getAbsoluteURL = function getAbsoluteURL(url) {\n  // Check if absolute URL\n  if (!url.match(/^https?:\\/\\//)) {\n    // Convert to absolute URL. Flash hosted off-site needs an absolute URL.\n    var div = document.createElement('div');\n\n    div.innerHTML = '<a href=\"' + url + '\">x</a>';\n    url = div.firstChild.href;\n  }\n\n  return url;\n};\n\n/**\n * Returns the extension of the passed file name. It will return an empty string\n * if passed an invalid path.\n *\n * @param {string} path\n *        The fileName path like '/path/to/file.mp4'\n *\n * @returns {string}\n *          The extension in lower case or an empty string if no\n *          extension could be found.\n */\nvar getFileExtension = function getFileExtension(path) {\n  if (typeof path === 'string') {\n    var splitPathRe = /^(\\/?)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?)(\\.([^\\.\\/\\?]+)))(?:[\\/]*|[\\?].*)$/i;\n    var pathParts = splitPathRe.exec(path);\n\n    if (pathParts) {\n      return pathParts.pop().toLowerCase();\n    }\n  }\n\n  return '';\n};\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @param {string} url\n *        The url to check.\n *\n * @return {boolean}\n *         Whether it is a cross domain request or not.\n */\nvar isCrossOrigin = function isCrossOrigin(url) {\n  var winLoc = window.location;\n  var urlInfo = parseUrl(url);\n\n  // IE8 protocol relative urls will return ':' for protocol\n  var srcProtocol = urlInfo.protocol === ':' ? winLoc.protocol : urlInfo.protocol;\n\n  // Check if url is for another domain/origin\n  // IE8 doesn't know location.origin, so we won't rely on it here\n  var crossOrigin = srcProtocol + urlInfo.host !== winLoc.protocol + winLoc.host;\n\n  return crossOrigin;\n};\n\nvar Url = (Object.freeze || Object)({\n\tparseUrl: parseUrl,\n\tgetAbsoluteURL: getAbsoluteURL,\n\tgetFileExtension: getFileExtension,\n\tisCrossOrigin: isCrossOrigin\n});\n\n/**\n * @file text-track.js\n */\n/**\n * Takes a webvtt file contents and parses it into cues\n *\n * @param {string} srcContent\n *        webVTT file contents\n *\n * @param {TextTrack} track\n *        TextTrack to add cues to. Cues come from the srcContent.\n *\n * @private\n */\nvar parseCues = function parseCues(srcContent, track) {\n  var parser = new window.WebVTT.Parser(window, window.vttjs, window.WebVTT.StringDecoder());\n  var errors = [];\n\n  parser.oncue = function (cue) {\n    track.addCue(cue);\n  };\n\n  parser.onparsingerror = function (error) {\n    errors.push(error);\n  };\n\n  parser.onflush = function () {\n    track.trigger({\n      type: 'loadeddata',\n      target: track\n    });\n  };\n\n  parser.parse(srcContent);\n  if (errors.length > 0) {\n    if (window.console && window.console.groupCollapsed) {\n      window.console.groupCollapsed('Text Track parsing errors for ' + track.src);\n    }\n    errors.forEach(function (error) {\n      return log$1.error(error);\n    });\n    if (window.console && window.console.groupEnd) {\n      window.console.groupEnd();\n    }\n  }\n\n  parser.flush();\n};\n\n/**\n * Load a `TextTrack` from a specifed url.\n *\n * @param {string} src\n *        Url to load track from.\n *\n * @param {TextTrack} track\n *        Track to add cues to. Comes from the content at the end of `url`.\n *\n * @private\n */\nvar loadTrack = function loadTrack(src, track) {\n  var opts = {\n    uri: src\n  };\n  var crossOrigin = isCrossOrigin(src);\n\n  if (crossOrigin) {\n    opts.cors = crossOrigin;\n  }\n\n  xhr(opts, bind(this, function (err, response, responseBody) {\n    if (err) {\n      return log$1.error(err, response);\n    }\n\n    track.loaded_ = true;\n\n    // Make sure that vttjs has loaded, otherwise, wait till it finished loading\n    // NOTE: this is only used for the alt/video.novtt.js build\n    if (typeof window.WebVTT !== 'function') {\n      if (track.tech_) {\n        var loadHandler = function loadHandler() {\n          return parseCues(responseBody, track);\n        };\n\n        track.tech_.on('vttjsloaded', loadHandler);\n        track.tech_.on('vttjserror', function () {\n          log$1.error('vttjs failed to load, stopping trying to process ' + track.src);\n          track.tech_.off('vttjsloaded', loadHandler);\n        });\n      }\n    } else {\n      parseCues(responseBody, track);\n    }\n  }));\n};\n\n/**\n * A representation of a single `TextTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#texttrack}\n * @extends Track\n */\n\nvar TextTrack = function (_Track) {\n  inherits(TextTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this TextTrack.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function TextTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, TextTrack);\n\n    if (!options.tech) {\n      throw new Error('A tech was not provided.');\n    }\n\n    var settings = mergeOptions(options, {\n      kind: TextTrackKind[options.kind] || 'subtitles',\n      language: options.language || options.srclang || ''\n    });\n    var mode = TextTrackMode[settings.mode] || 'disabled';\n    var default_ = settings['default'];\n\n    if (settings.kind === 'metadata' || settings.kind === 'chapters') {\n      mode = 'hidden';\n    }\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var tt = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n\n    tt.tech_ = settings.tech;\n\n    if (IS_IE8) {\n      for (var prop in TextTrack.prototype) {\n        if (prop !== 'constructor') {\n          tt[prop] = TextTrack.prototype[prop];\n        }\n      }\n    }\n\n    tt.cues_ = [];\n    tt.activeCues_ = [];\n\n    var cues = new TextTrackCueList(tt.cues_);\n    var activeCues = new TextTrackCueList(tt.activeCues_);\n    var changed = false;\n    var timeupdateHandler = bind(tt, function () {\n\n      // Accessing this.activeCues for the side-effects of updating itself\n      // due to it's nature as a getter function. Do not remove or cues will\n      // stop updating!\n      /* eslint-disable no-unused-expressions */\n      this.activeCues;\n      /* eslint-enable no-unused-expressions */\n      if (changed) {\n        this.trigger('cuechange');\n        changed = false;\n      }\n    });\n\n    if (mode !== 'disabled') {\n      tt.tech_.ready(function () {\n        tt.tech_.on('timeupdate', timeupdateHandler);\n      }, true);\n    }\n\n    /**\n     * @memberof TextTrack\n     * @member {boolean} default\n     *         If this track was set to be on or off by default. Cannot be changed after\n     *         creation.\n     * @instance\n     *\n     * @readonly\n     */\n    Object.defineProperty(tt, 'default', {\n      get: function get$$1() {\n        return default_;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {string} mode\n     *         Set the mode of this TextTrack to a valid {@link TextTrack~Mode}. Will\n     *         not be set if setting to an invalid mode.\n     * @instance\n     *\n     * @fires TextTrack#modechange\n     */\n    Object.defineProperty(tt, 'mode', {\n      get: function get$$1() {\n        return mode;\n      },\n      set: function set$$1(newMode) {\n        var _this2 = this;\n\n        if (!TextTrackMode[newMode]) {\n          return;\n        }\n        mode = newMode;\n        if (mode === 'showing') {\n\n          this.tech_.ready(function () {\n            _this2.tech_.on('timeupdate', timeupdateHandler);\n          }, true);\n        }\n        /**\n         * An event that fires when mode changes on this track. This allows\n         * the TextTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec!\n         *\n         * @event TextTrack#modechange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('modechange');\n      }\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} cues\n     *         The text track cue list for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'cues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        return cues;\n      },\n      set: function set$$1() {}\n    });\n\n    /**\n     * @memberof TextTrack\n     * @member {TextTrackCueList} activeCues\n     *         The list text track cues that are currently active for this TextTrack.\n     * @instance\n     */\n    Object.defineProperty(tt, 'activeCues', {\n      get: function get$$1() {\n        if (!this.loaded_) {\n          return null;\n        }\n\n        // nothing to do\n        if (this.cues.length === 0) {\n          return activeCues;\n        }\n\n        var ct = this.tech_.currentTime();\n        var active = [];\n\n        for (var i = 0, l = this.cues.length; i < l; i++) {\n          var cue = this.cues[i];\n\n          if (cue.startTime <= ct && cue.endTime >= ct) {\n            active.push(cue);\n          } else if (cue.startTime === cue.endTime && cue.startTime <= ct && cue.startTime + 0.5 >= ct) {\n            active.push(cue);\n          }\n        }\n\n        changed = false;\n\n        if (active.length !== this.activeCues_.length) {\n          changed = true;\n        } else {\n          for (var _i = 0; _i < active.length; _i++) {\n            if (this.activeCues_.indexOf(active[_i]) === -1) {\n              changed = true;\n            }\n          }\n        }\n\n        this.activeCues_ = active;\n        activeCues.setCues_(this.activeCues_);\n\n        return activeCues;\n      },\n      set: function set$$1() {}\n    });\n\n    if (settings.src) {\n      tt.src = settings.src;\n      loadTrack(settings.src, tt);\n    } else {\n      tt.loaded_ = true;\n    }\n\n    return _ret = tt, possibleConstructorReturn(_this, _ret);\n  }\n\n  /**\n   * Add a cue to the internal list of cues.\n   *\n   * @param {TextTrack~Cue} cue\n   *        The cue to add to our internal list\n   */\n\n\n  TextTrack.prototype.addCue = function addCue(originalCue) {\n    var cue = originalCue;\n\n    if (window.vttjs && !(originalCue instanceof window.vttjs.VTTCue)) {\n      cue = new window.vttjs.VTTCue(originalCue.startTime, originalCue.endTime, originalCue.text);\n\n      for (var prop in originalCue) {\n        if (!(prop in cue)) {\n          cue[prop] = originalCue[prop];\n        }\n      }\n\n      // make sure that `id` is copied over\n      cue.id = originalCue.id;\n      cue.originalCue_ = originalCue;\n    }\n\n    var tracks = this.tech_.textTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      if (tracks[i] !== this) {\n        tracks[i].removeCue(cue);\n      }\n    }\n\n    this.cues_.push(cue);\n    this.cues.setCues_(this.cues_);\n  };\n\n  /**\n   * Remove a cue from our internal list\n   *\n   * @param {TextTrack~Cue} removeCue\n   *        The cue to remove from our internal list\n   */\n\n\n  TextTrack.prototype.removeCue = function removeCue(_removeCue) {\n    var i = this.cues_.length;\n\n    while (i--) {\n      var cue = this.cues_[i];\n\n      if (cue === _removeCue || cue.originalCue_ && cue.originalCue_ === _removeCue) {\n        this.cues_.splice(i, 1);\n        this.cues.setCues_(this.cues_);\n        break;\n      }\n    }\n  };\n\n  return TextTrack;\n}(Track);\n\n/**\n * cuechange - One or more cues in the track have become active or stopped being active.\n */\n\n\nTextTrack.prototype.allowedEvents_ = {\n  cuechange: 'cuechange'\n};\n\n/**\n * A representation of a single `AudioTrack`. If it is part of an {@link AudioTrackList}\n * only one `AudioTrack` in the list will be enabled at a time.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotrack}\n * @extends Track\n */\n\nvar AudioTrack = function (_Track) {\n  inherits(AudioTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {AudioTrack~Kind} [options.kind='']\n   *        A valid audio track kind\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.enabled]\n   *        If this track is the one that is currently playing. If this track is part of\n   *        an {@link AudioTrackList}, only one {@link AudioTrack} will be enabled.\n   */\n  function AudioTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, AudioTrack);\n\n    var settings = mergeOptions(options, {\n      kind: AudioTrackKind[options.kind] || ''\n    });\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var enabled = false;\n\n    if (IS_IE8) {\n      for (var prop in AudioTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = AudioTrack.prototype[prop];\n        }\n      }\n    }\n    /**\n     * @memberof AudioTrack\n     * @member {boolean} enabled\n     *         If this `AudioTrack` is enabled or not. When setting this will\n     *         fire {@link AudioTrack#enabledchange} if the state of enabled is changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'enabled', {\n      get: function get$$1() {\n        return enabled;\n      },\n      set: function set$$1(newEnabled) {\n        // an invalid or unchanged value\n        if (typeof newEnabled !== 'boolean' || newEnabled === enabled) {\n          return;\n        }\n        enabled = newEnabled;\n\n        /**\n         * An event that fires when enabled changes on this track. This allows\n         * the AudioTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event AudioTrack#enabledchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('enabledchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.enabled) {\n      track.enabled = settings.enabled;\n    }\n    track.loaded_ = true;\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return AudioTrack;\n}(Track);\n\n/**\n * A representation of a single `VideoTrack`.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#videotrack}\n * @extends Track\n */\n\nvar VideoTrack = function (_Track) {\n  inherits(VideoTrack, _Track);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} [options={}]\n   *        Object of option names and values\n   *\n   * @param {string} [options.kind='']\n   *        A valid {@link VideoTrack~Kind}\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this AudioTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {boolean} [options.selected]\n   *        If this track is the one that is currently playing.\n   */\n  function VideoTrack() {\n    var _this, _ret;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, VideoTrack);\n\n    var settings = mergeOptions(options, {\n      kind: VideoTrackKind[options.kind] || ''\n    });\n\n    // on IE8 this will be a document element\n    // for every other browser this will be a normal object\n    var track = (_this = possibleConstructorReturn(this, _Track.call(this, settings)), _this);\n    var selected = false;\n\n    if (IS_IE8) {\n      for (var prop in VideoTrack.prototype) {\n        if (prop !== 'constructor') {\n          track[prop] = VideoTrack.prototype[prop];\n        }\n      }\n    }\n\n    /**\n     * @memberof VideoTrack\n     * @member {boolean} selected\n     *         If this `VideoTrack` is selected or not. When setting this will\n     *         fire {@link VideoTrack#selectedchange} if the state of selected changed.\n     * @instance\n     *\n     * @fires VideoTrack#selectedchange\n     */\n    Object.defineProperty(track, 'selected', {\n      get: function get$$1() {\n        return selected;\n      },\n      set: function set$$1(newSelected) {\n        // an invalid or unchanged value\n        if (typeof newSelected !== 'boolean' || newSelected === selected) {\n          return;\n        }\n        selected = newSelected;\n\n        /**\n         * An event that fires when selected changes on this track. This allows\n         * the VideoTrackList that holds this track to act accordingly.\n         *\n         * > Note: This is not part of the spec! Native tracks will do\n         *         this internally without an event.\n         *\n         * @event VideoTrack#selectedchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('selectedchange');\n      }\n    });\n\n    // if the user sets this track to selected then\n    // set selected to that true value otherwise\n    // we keep it false\n    if (settings.selected) {\n      track.selected = settings.selected;\n    }\n\n    return _ret = track, possibleConstructorReturn(_this, _ret);\n  }\n\n  return VideoTrack;\n}(Track);\n\n/**\n * @file html-track-element.js\n */\n\n/**\n * @memberof HTMLTrackElement\n * @typedef {HTMLTrackElement~ReadyState}\n * @enum {number}\n */\nvar NONE = 0;\nvar LOADING = 1;\nvar LOADED = 2;\nvar ERROR = 3;\n\n/**\n * A single track represented in the DOM.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#htmltrackelement}\n * @extends EventTarget\n */\n\nvar HTMLTrackElement = function (_EventTarget) {\n  inherits(HTMLTrackElement, _EventTarget);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Object} options={}\n   *        Object of option names and values\n   *\n   * @param {Tech} options.tech\n   *        A reference to the tech that owns this HTMLTrackElement.\n   *\n   * @param {TextTrack~Kind} [options.kind='subtitles']\n   *        A valid text track kind.\n   *\n   * @param {TextTrack~Mode} [options.mode='disabled']\n   *        A valid text track mode.\n   *\n   * @param {string} [options.id='vjs_track_' + Guid.newGUID()]\n   *        A unique id for this TextTrack.\n   *\n   * @param {string} [options.label='']\n   *        The menu label for this track.\n   *\n   * @param {string} [options.language='']\n   *        A valid two character language code.\n   *\n   * @param {string} [options.srclang='']\n   *        A valid two character language code. An alternative, but deprioritized\n   *        vesion of `options.language`\n   *\n   * @param {string} [options.src]\n   *        A url to TextTrack cues.\n   *\n   * @param {boolean} [options.default]\n   *        If this track should default to on or off.\n   */\n  function HTMLTrackElement() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, HTMLTrackElement);\n\n    var _this = possibleConstructorReturn(this, _EventTarget.call(this));\n\n    var readyState = void 0;\n    var trackElement = _this; // eslint-disable-line\n\n    if (IS_IE8) {\n      trackElement = document.createElement('custom');\n\n      for (var prop in HTMLTrackElement.prototype) {\n        if (prop !== 'constructor') {\n          trackElement[prop] = HTMLTrackElement.prototype[prop];\n        }\n      }\n    }\n\n    var track = new TextTrack(options);\n\n    trackElement.kind = track.kind;\n    trackElement.src = track.src;\n    trackElement.srclang = track.language;\n    trackElement.label = track.label;\n    trackElement['default'] = track['default'];\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {HTMLTrackElement~ReadyState} readyState\n     *         The current ready state of the track element.\n     * @instance\n     */\n    Object.defineProperty(trackElement, 'readyState', {\n      get: function get$$1() {\n        return readyState;\n      }\n    });\n\n    /**\n     * @memberof HTMLTrackElement\n     * @member {TextTrack} track\n     *         The underlying TextTrack object.\n     * @instance\n     *\n     */\n    Object.defineProperty(trackElement, 'track', {\n      get: function get$$1() {\n        return track;\n      }\n    });\n\n    readyState = NONE;\n\n    /**\n     * @listens TextTrack#loadeddata\n     * @fires HTMLTrackElement#load\n     */\n    track.addEventListener('loadeddata', function () {\n      readyState = LOADED;\n\n      trackElement.trigger({\n        type: 'load',\n        target: trackElement\n      });\n    });\n\n    if (IS_IE8) {\n      var _ret;\n\n      return _ret = trackElement, possibleConstructorReturn(_this, _ret);\n    }\n    return _this;\n  }\n\n  return HTMLTrackElement;\n}(EventTarget);\n\nHTMLTrackElement.prototype.allowedEvents_ = {\n  load: 'load'\n};\n\nHTMLTrackElement.NONE = NONE;\nHTMLTrackElement.LOADING = LOADING;\nHTMLTrackElement.LOADED = LOADED;\nHTMLTrackElement.ERROR = ERROR;\n\n/*\n * This file contains all track properties that are used in\n * player.js, tech.js, html5.js and possibly other techs in the future.\n */\n\nvar NORMAL = {\n  audio: {\n    ListClass: AudioTrackList,\n    TrackClass: AudioTrack,\n    capitalName: 'Audio'\n  },\n  video: {\n    ListClass: VideoTrackList,\n    TrackClass: VideoTrack,\n    capitalName: 'Video'\n  },\n  text: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'Text'\n  }\n};\n\nObject.keys(NORMAL).forEach(function (type) {\n  NORMAL[type].getterName = type + 'Tracks';\n  NORMAL[type].privateName = type + 'Tracks_';\n});\n\nvar REMOTE = {\n  remoteText: {\n    ListClass: TextTrackList,\n    TrackClass: TextTrack,\n    capitalName: 'RemoteText',\n    getterName: 'remoteTextTracks',\n    privateName: 'remoteTextTracks_'\n  },\n  remoteTextEl: {\n    ListClass: HtmlTrackElementList,\n    TrackClass: HTMLTrackElement,\n    capitalName: 'RemoteTextTrackEls',\n    getterName: 'remoteTextTrackEls',\n    privateName: 'remoteTextTrackEls_'\n  }\n};\n\nvar ALL = mergeOptions(NORMAL, REMOTE);\n\nREMOTE.names = Object.keys(REMOTE);\nNORMAL.names = Object.keys(NORMAL);\nALL.names = [].concat(REMOTE.names).concat(NORMAL.names);\n\n/**\n * @file tech.js\n */\n\n/**\n * An Object containing a structure like: `{src: 'url', type: 'mimetype'}` or string\n * that just contains the src url alone.\n * * `var SourceObject = {src: 'http://ex.com/video.mp4', type: 'video/mp4'};`\n   * `var SourceString = 'http://example.com/some-video.mp4';`\n *\n * @typedef {Object|string} Tech~SourceObject\n *\n * @property {string} src\n *           The url to the source\n *\n * @property {string} type\n *           The mime type of the source\n */\n\n/**\n * A function used by {@link Tech} to create a new {@link TextTrack}.\n *\n * @private\n *\n * @param {Tech} self\n *        An instance of the Tech class.\n *\n * @param {string} kind\n *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n *\n * @param {string} [label]\n *        Label to identify the text track\n *\n * @param {string} [language]\n *        Two letter language abbreviation\n *\n * @param {Object} [options={}]\n *        An object with additional text track options\n *\n * @return {TextTrack}\n *          The text track that was created.\n */\nfunction createTrackHelper(self, kind, label, language) {\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  var tracks = self.textTracks();\n\n  options.kind = kind;\n\n  if (label) {\n    options.label = label;\n  }\n  if (language) {\n    options.language = language;\n  }\n  options.tech = self;\n\n  var track = new ALL.text.TrackClass(options);\n\n  tracks.addTrack(track);\n\n  return track;\n}\n\n/**\n * This is the base class for media playback technology controllers, such as\n * {@link Flash} and {@link HTML5}\n *\n * @extends Component\n */\n\nvar Tech = function (_Component) {\n  inherits(Tech, _Component);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Tech() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var ready = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function () {};\n    classCallCheck(this, Tech);\n\n    // we don't want the tech to report user activity automatically.\n    // This is done manually in addControlsListeners\n    options.reportTouchActivity = false;\n\n    // keep track of whether the current source has played at all to\n    // implement a very limited played()\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.hasStarted_ = false;\n    _this.on('playing', function () {\n      this.hasStarted_ = true;\n    });\n    _this.on('loadstart', function () {\n      this.hasStarted_ = false;\n    });\n\n    ALL.names.forEach(function (name) {\n      var props = ALL[name];\n\n      if (options && options[props.getterName]) {\n        _this[props.privateName] = options[props.getterName];\n      }\n    });\n\n    // Manually track progress in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresProgressEvents) {\n      _this.manualProgressOn();\n    }\n\n    // Manually track timeupdates in cases where the browser/flash player doesn't report it.\n    if (!_this.featuresTimeupdateEvents) {\n      _this.manualTimeUpdatesOn();\n    }\n\n    ['Text', 'Audio', 'Video'].forEach(function (track) {\n      if (options['native' + track + 'Tracks'] === false) {\n        _this['featuresNative' + track + 'Tracks'] = false;\n      }\n    });\n\n    if (options.nativeCaptions === false || options.nativeTextTracks === false) {\n      _this.featuresNativeTextTracks = false;\n    } else if (options.nativeCaptions === true || options.nativeTextTracks === true) {\n      _this.featuresNativeTextTracks = true;\n    }\n\n    if (!_this.featuresNativeTextTracks) {\n      _this.emulateTextTracks();\n    }\n\n    _this.autoRemoteTextTracks_ = new ALL.text.ListClass();\n\n    _this.initTrackListeners();\n\n    // Turn on component tap events only if not using native controls\n    if (!options.nativeControlsForTouch) {\n      _this.emitTapEvents();\n    }\n\n    if (_this.constructor) {\n      _this.name_ = _this.constructor.name || 'Unknown Tech';\n    }\n    return _this;\n  }\n\n  /**\n   * A special function to trigger source set in a way that will allow player\n   * to re-trigger if the player or tech are not ready yet.\n   *\n   * @fires Tech#sourceset\n   * @param {string} src The source string at the time of the source changing.\n   */\n\n\n  Tech.prototype.triggerSourceset = function triggerSourceset(src) {\n    var _this2 = this;\n\n    if (!this.isReady_) {\n      // on initial ready we have to trigger source set\n      // 1ms after ready so that player can watch for it.\n      this.one('ready', function () {\n        return _this2.setTimeout(function () {\n          return _this2.triggerSourceset(src);\n        }, 1);\n      });\n    }\n\n    /**\n     * Fired when the source is set on the tech causing the media element\n     * to reload.\n     *\n     * @see {@link Player#event:sourceset}\n     * @event Tech#sourceset\n     * @type {EventTarget~Event}\n     */\n    this.trigger({\n      src: src,\n      type: 'sourceset'\n    });\n  };\n\n  /* Fallbacks for unsupported event types\n  ================================================================================ */\n\n  /**\n   * Polyfill the `progress` event for browsers that don't support it natively.\n   *\n   * @see {@link Tech#trackProgress}\n   */\n\n\n  Tech.prototype.manualProgressOn = function manualProgressOn() {\n    this.on('durationchange', this.onDurationChange);\n\n    this.manualProgress = true;\n\n    // Trigger progress watching when a source begins loading\n    this.one('ready', this.trackProgress);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   */\n\n\n  Tech.prototype.manualProgressOff = function manualProgressOff() {\n    this.manualProgress = false;\n    this.stopTrackingProgress();\n\n    this.off('durationchange', this.onDurationChange);\n  };\n\n  /**\n   * This is used to trigger a `progress` event when the buffered percent changes. It\n   * sets an interval function that will be called every 500 milliseconds to check if the\n   * buffer end percent has changed.\n   *\n   * > This function is called by {@link Tech#manualProgressOn}\n   *\n   * @param {EventTarget~Event} event\n   *        The `ready` event that caused this to run.\n   *\n   * @listens Tech#ready\n   * @fires Tech#progress\n   */\n\n\n  Tech.prototype.trackProgress = function trackProgress(event) {\n    this.stopTrackingProgress();\n    this.progressInterval = this.setInterval(bind(this, function () {\n      // Don't trigger unless buffered amount is greater than last time\n\n      var numBufferedPercent = this.bufferedPercent();\n\n      if (this.bufferedPercent_ !== numBufferedPercent) {\n        /**\n         * See {@link Player#progress}\n         *\n         * @event Tech#progress\n         * @type {EventTarget~Event}\n         */\n        this.trigger('progress');\n      }\n\n      this.bufferedPercent_ = numBufferedPercent;\n\n      if (numBufferedPercent === 1) {\n        this.stopTrackingProgress();\n      }\n    }), 500);\n  };\n\n  /**\n   * Update our internal duration on a `durationchange` event by calling\n   * {@link Tech#duration}.\n   *\n   * @param {EventTarget~Event} event\n   *        The `durationchange` event that caused this to run.\n   *\n   * @listens Tech#durationchange\n   */\n\n\n  Tech.prototype.onDurationChange = function onDurationChange(event) {\n    this.duration_ = this.duration();\n  };\n\n  /**\n   * Get and create a `TimeRange` object for buffering.\n   *\n   * @return {TimeRange}\n   *         The time range object that was created.\n   */\n\n\n  Tech.prototype.buffered = function buffered() {\n    return createTimeRanges(0, 0);\n  };\n\n  /**\n   * Get the percentage of the current video that is currently buffered.\n   *\n   * @return {number}\n   *         A number from 0 to 1 that represents the decimal percentage of the\n   *         video that is buffered.\n   *\n   */\n\n\n  Tech.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration_);\n  };\n\n  /**\n   * Turn off the polyfill for `progress` events that was created in\n   * {@link Tech#manualProgressOn}\n   * Stop manually tracking progress events by clearing the interval that was set in\n   * {@link Tech#trackProgress}.\n   */\n\n\n  Tech.prototype.stopTrackingProgress = function stopTrackingProgress() {\n    this.clearInterval(this.progressInterval);\n  };\n\n  /**\n   * Polyfill the `timeupdate` event for browsers that don't support it.\n   *\n   * @see {@link Tech#trackCurrentTime}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOn = function manualTimeUpdatesOn() {\n    this.manualTimeUpdates = true;\n\n    this.on('play', this.trackCurrentTime);\n    this.on('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Turn off the polyfill for `timeupdate` events that was created in\n   * {@link Tech#manualTimeUpdatesOn}\n   */\n\n\n  Tech.prototype.manualTimeUpdatesOff = function manualTimeUpdatesOff() {\n    this.manualTimeUpdates = false;\n    this.stopTrackingCurrentTime();\n    this.off('play', this.trackCurrentTime);\n    this.off('pause', this.stopTrackingCurrentTime);\n  };\n\n  /**\n   * Sets up an interval function to track current time and trigger `timeupdate` every\n   * 250 milliseconds.\n   *\n   * @listens Tech#play\n   * @triggers Tech#timeupdate\n   */\n\n\n  Tech.prototype.trackCurrentTime = function trackCurrentTime() {\n    if (this.currentTimeInterval) {\n      this.stopTrackingCurrentTime();\n    }\n    this.currentTimeInterval = this.setInterval(function () {\n      /**\n       * Triggered at an interval of 250ms to indicated that time is passing in the video.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n\n      // 42 = 24 fps // 250 is what Webkit uses // FF uses 15\n    }, 250);\n  };\n\n  /**\n   * Stop the interval function created in {@link Tech#trackCurrentTime} so that the\n   * `timeupdate` event is no longer triggered.\n   *\n   * @listens {Tech#pause}\n   */\n\n\n  Tech.prototype.stopTrackingCurrentTime = function stopTrackingCurrentTime() {\n    this.clearInterval(this.currentTimeInterval);\n\n    // #1002 - if the video ends right before the next timeupdate would happen,\n    // the progress bar won't make it all the way to the end\n    this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n  };\n\n  /**\n   * Turn off all event polyfills, clear the `Tech`s {@link AudioTrackList},\n   * {@link VideoTrackList}, and {@link TextTrackList}, and dispose of this Tech.\n   *\n   * @fires Component#dispose\n   */\n\n\n  Tech.prototype.dispose = function dispose() {\n\n    // clear out all tracks because we can't reuse them between techs\n    this.clearTracks(NORMAL.names);\n\n    // Turn off any manual progress or timeupdate tracking\n    if (this.manualProgress) {\n      this.manualProgressOff();\n    }\n\n    if (this.manualTimeUpdates) {\n      this.manualTimeUpdatesOff();\n    }\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Clear out a single `TrackList` or an array of `TrackLists` given their names.\n   *\n   * > Note: Techs without source handlers should call this between sources for `video`\n   *         & `audio` tracks. You don't want to use them between tracks!\n   *\n   * @param {string[]|string} types\n   *        TrackList names to clear, valid names are `video`, `audio`, and\n   *        `text`.\n   */\n\n\n  Tech.prototype.clearTracks = function clearTracks(types) {\n    var _this3 = this;\n\n    types = [].concat(types);\n    // clear out all tracks because we can't reuse them between techs\n    types.forEach(function (type) {\n      var list = _this3[type + 'Tracks']() || [];\n      var i = list.length;\n\n      while (i--) {\n        var track = list[i];\n\n        if (type === 'text') {\n          _this3.removeRemoteTextTrack(track);\n        }\n        list.removeTrack(track);\n      }\n    });\n  };\n\n  /**\n   * Remove any TextTracks added via addRemoteTextTrack that are\n   * flagged for automatic garbage collection\n   */\n\n\n  Tech.prototype.cleanupAutoTextTracks = function cleanupAutoTextTracks() {\n    var list = this.autoRemoteTextTracks_ || [];\n    var i = list.length;\n\n    while (i--) {\n      var track = list[i];\n\n      this.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Reset the tech, which will removes all sources and reset the internal readyState.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.reset = function reset() {};\n\n  /**\n   * Get or set an error on the Tech.\n   *\n   * @param {MediaError} [err]\n   *        Error to set on the Tech\n   *\n   * @return {MediaError|null}\n   *         The current error object on the tech, or null if there isn't one.\n   */\n\n\n  Tech.prototype.error = function error(err) {\n    if (err !== undefined) {\n      this.error_ = new MediaError(err);\n      this.trigger('error');\n    }\n    return this.error_;\n  };\n\n  /**\n   * Returns the `TimeRange`s that have been played through for the current source.\n   *\n   * > NOTE: This implementation is incomplete. It does not track the played `TimeRange`.\n   *         It only checks wether the source has played at all or not.\n   *\n   * @return {TimeRange}\n   *         - A single time range if this video has played\n   *         - An empty set of ranges if not.\n   */\n\n\n  Tech.prototype.played = function played() {\n    if (this.hasStarted_) {\n      return createTimeRanges(0, 0);\n    }\n    return createTimeRanges();\n  };\n\n  /**\n   * Causes a manual time update to occur if {@link Tech#manualTimeUpdatesOn} was\n   * previously called.\n   *\n   * @fires Tech#timeupdate\n   */\n\n\n  Tech.prototype.setCurrentTime = function setCurrentTime() {\n    // improve the accuracy of manual timeupdates\n    if (this.manualTimeUpdates) {\n      /**\n       * A manual `timeupdate` event.\n       *\n       * @event Tech#timeupdate\n       * @type {EventTarget~Event}\n       */\n      this.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    }\n  };\n\n  /**\n   * Turn on listeners for {@link VideoTrackList}, {@link {AudioTrackList}, and\n   * {@link TextTrackList} events.\n   *\n   * This adds {@link EventTarget~EventListeners} for `addtrack`, and  `removetrack`.\n   *\n   * @fires Tech#audiotrackchange\n   * @fires Tech#videotrackchange\n   * @fires Tech#texttrackchange\n   */\n\n\n  Tech.prototype.initTrackListeners = function initTrackListeners() {\n    var _this4 = this;\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link AudioTrackList}\n     *\n     * @event Tech#audiotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link VideoTrackList}\n     *\n     * @event Tech#videotrackchange\n     * @type {EventTarget~Event}\n     */\n\n    /**\n     * Triggered when tracks are added or removed on the Tech {@link TextTrackList}\n     *\n     * @event Tech#texttrackchange\n     * @type {EventTarget~Event}\n     */\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var trackListChanges = function trackListChanges() {\n        _this4.trigger(name + 'trackchange');\n      };\n\n      var tracks = _this4[props.getterName]();\n\n      tracks.addEventListener('removetrack', trackListChanges);\n      tracks.addEventListener('addtrack', trackListChanges);\n\n      _this4.on('dispose', function () {\n        tracks.removeEventListener('removetrack', trackListChanges);\n        tracks.removeEventListener('addtrack', trackListChanges);\n      });\n    });\n  };\n\n  /**\n   * Emulate TextTracks using vtt.js if necessary\n   *\n   * @fires Tech#vttjsloaded\n   * @fires Tech#vttjserror\n   */\n\n\n  Tech.prototype.addWebVttScript_ = function addWebVttScript_() {\n    var _this5 = this;\n\n    if (window.WebVTT) {\n      return;\n    }\n\n    // Initially, Tech.el_ is a child of a dummy-div wait until the Component system\n    // signals that the Tech is ready at which point Tech.el_ is part of the DOM\n    // before inserting the WebVTT script\n    if (document.body.contains(this.el())) {\n\n      // load via require if available and vtt.js script location was not passed in\n      // as an option. novtt builds will turn the above require call into an empty object\n      // which will cause this if check to always fail.\n      if (!this.options_['vtt.js'] && isPlain(vtt) && Object.keys(vtt).length > 0) {\n        this.trigger('vttjsloaded');\n        return;\n      }\n\n      // load vtt.js via the script location option or the cdn of no location was\n      // passed in\n      var script = document.createElement('script');\n\n      script.src = this.options_['vtt.js'] || 'https://vjs.zencdn.net/vttjs/0.12.4/vtt.min.js';\n      script.onload = function () {\n        /**\n         * Fired when vtt.js is loaded.\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjsloaded');\n      };\n      script.onerror = function () {\n        /**\n         * Fired when vtt.js was not loaded due to an error\n         *\n         * @event Tech#vttjsloaded\n         * @type {EventTarget~Event}\n         */\n        _this5.trigger('vttjserror');\n      };\n      this.on('dispose', function () {\n        script.onload = null;\n        script.onerror = null;\n      });\n      // but have not loaded yet and we set it to true before the inject so that\n      // we don't overwrite the injected window.WebVTT if it loads right away\n      window.WebVTT = true;\n      this.el().parentNode.appendChild(script);\n    } else {\n      this.ready(this.addWebVttScript_);\n    }\n  };\n\n  /**\n   * Emulate texttracks\n   *\n   */\n\n\n  Tech.prototype.emulateTextTracks = function emulateTextTracks() {\n    var _this6 = this;\n\n    var tracks = this.textTracks();\n    var remoteTracks = this.remoteTextTracks();\n    var handleAddTrack = function handleAddTrack(e) {\n      return tracks.addTrack(e.track);\n    };\n    var handleRemoveTrack = function handleRemoveTrack(e) {\n      return tracks.removeTrack(e.track);\n    };\n\n    remoteTracks.on('addtrack', handleAddTrack);\n    remoteTracks.on('removetrack', handleRemoveTrack);\n\n    this.addWebVttScript_();\n\n    var updateDisplay = function updateDisplay() {\n      return _this6.trigger('texttrackchange');\n    };\n\n    var textTracksChanges = function textTracksChanges() {\n      updateDisplay();\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n        if (track.mode === 'showing') {\n          track.addEventListener('cuechange', updateDisplay);\n        }\n      }\n    };\n\n    textTracksChanges();\n    tracks.addEventListener('change', textTracksChanges);\n    tracks.addEventListener('addtrack', textTracksChanges);\n    tracks.addEventListener('removetrack', textTracksChanges);\n\n    this.on('dispose', function () {\n      remoteTracks.off('addtrack', handleAddTrack);\n      remoteTracks.off('removetrack', handleRemoveTrack);\n      tracks.removeEventListener('change', textTracksChanges);\n      tracks.removeEventListener('addtrack', textTracksChanges);\n      tracks.removeEventListener('removetrack', textTracksChanges);\n\n      for (var i = 0; i < tracks.length; i++) {\n        var track = tracks[i];\n\n        track.removeEventListener('cuechange', updateDisplay);\n      }\n    });\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Tech.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!kind) {\n      throw new Error('TextTrack kind is required but was not provided');\n    }\n\n    return createTrackHelper(this, kind, label, language);\n  };\n\n  /**\n   * Create an emulated TextTrack for use by addRemoteTextTrack\n   *\n   * This is intended to be overridden by classes that inherit from\n   * Tech in order to create native or custom TextTracks.\n   *\n   * @param {Object} options\n   *        The object should contain the options to initialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Tech.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    var track = mergeOptions(options, {\n      tech: this\n    });\n\n    return new REMOTE.remoteTextEl.TrackClass(track);\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * > Note: This can be an emulated {@link HTMLTrackElement} or a native one.\n   *\n   * @param {Object} options\n   *        See {@link Tech#createRemoteTextTrack} for more detailed properties.\n   *\n   * @param {boolean} [manualCleanup=true]\n   *        - When false: the TextTrack will be automatically removed from the video\n   *          element whenever the source changes\n   *        - When True: The TextTrack will have to be cleaned up manually\n   *\n   * @return {HTMLTrackElement}\n   *         An Html Track Element.\n   *\n   * @deprecated The default functionality for this function will be equivalent\n   *             to \"manualCleanup=false\" in the future. The manualCleanup parameter will\n   *             also be removed.\n   */\n\n\n  Tech.prototype.addRemoteTextTrack = function addRemoteTextTrack() {\n    var _this7 = this;\n\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var manualCleanup = arguments[1];\n\n    var htmlTrackElement = this.createRemoteTextTrack(options);\n\n    if (manualCleanup !== true && manualCleanup !== false) {\n      // deprecation warning\n      log$1.warn('Calling addRemoteTextTrack without explicitly setting the \"manualCleanup\" parameter to `true` is deprecated and default to `false` in future version of video.js');\n      manualCleanup = true;\n    }\n\n    // store HTMLTrackElement and TextTrack to remote list\n    this.remoteTextTrackEls().addTrackElement_(htmlTrackElement);\n    this.remoteTextTracks().addTrack(htmlTrackElement.track);\n\n    if (manualCleanup !== true) {\n      // create the TextTrackList if it doesn't exist\n      this.ready(function () {\n        return _this7.autoRemoteTextTracks_.addTrack(htmlTrackElement.track);\n      });\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove a remote text track from the remote `TextTrackList`.\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` to remove from the `TextTrackList`\n   */\n\n\n  Tech.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    var trackElement = this.remoteTextTrackEls().getTrackElementByTrack_(track);\n\n    // remove HTMLTrackElement and TextTrack from remote list\n    this.remoteTextTrackEls().removeTrackElement_(trackElement);\n    this.remoteTextTracks().removeTrack(track);\n    this.autoRemoteTextTracks_.removeTrack(track);\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return {};\n  };\n\n  /**\n   * A method to set a poster from a `Tech`.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPoster = function setPoster() {};\n\n  /**\n   * A method to check for the presence of the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.playsinline = function playsinline() {};\n\n  /**\n   * A method to set or unset the 'playsinine' <video> attribute.\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.setPlaysinline = function setPlaysinline() {};\n\n  /*\n   * Check if the tech can support the given mime-type.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param  {string} type\n   *         The mimetype to check for support\n   *\n   * @return {string}\n   *         'probably', 'maybe', or empty string\n   *\n   * @see [Spec]{@link https://developer.mozilla.org/en-US/docs/Web/API/HTMLMediaElement/canPlayType}\n   *\n   * @abstract\n   */\n\n\n  Tech.prototype.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the type is supported by this tech.\n   *\n   * The base tech does not support any type, but source handlers might\n   * overwrite this.\n   *\n   * @param {string} type\n   *        The media type to check\n   * @return {string} Returns the native video element's response\n   */\n\n\n  Tech.canPlayType = function canPlayType() {\n    return '';\n  };\n\n  /**\n   * Check if the tech can support the given source\n   * @param {Object} srcObj\n   *        The source object\n   * @param {Object} options\n   *        The options passed to the tech\n   * @return {string} 'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Tech.canPlaySource = function canPlaySource(srcObj, options) {\n    return Tech.canPlayType(srcObj.type);\n  };\n\n  /*\n   * Return whether the argument is a Tech or not.\n   * Can be passed either a Class like `Html5` or a instance like `player.tech_`\n   *\n   * @param {Object} component\n   *        The item to check\n   *\n   * @return {boolean}\n   *         Whether it is a tech or not\n   *         - True if it is a tech\n   *         - False if it is not\n   */\n\n\n  Tech.isTech = function isTech(component) {\n    return component.prototype instanceof Tech || component instanceof Tech || component === Tech;\n  };\n\n  /**\n   * Registers a `Tech` into a shared list for videojs.\n   *\n   * @param {string} name\n   *        Name of the `Tech` to register.\n   *\n   * @param {Object} tech\n   *        The `Tech` class to register.\n   */\n\n\n  Tech.registerTech = function registerTech(name, tech) {\n    if (!Tech.techs_) {\n      Tech.techs_ = {};\n    }\n\n    if (!Tech.isTech(tech)) {\n      throw new Error('Tech ' + name + ' must be a Tech');\n    }\n\n    if (!Tech.canPlayType) {\n      throw new Error('Techs must have a static canPlayType method on them');\n    }\n    if (!Tech.canPlaySource) {\n      throw new Error('Techs must have a static canPlaySource method on them');\n    }\n\n    name = toTitleCase(name);\n\n    Tech.techs_[name] = tech;\n    if (name !== 'Tech') {\n      // camel case the techName for use in techOrder\n      Tech.defaultTechOrder_.push(name);\n    }\n    return tech;\n  };\n\n  /**\n   * Get a `Tech` from the shared list by name.\n   *\n   * @param {string} name\n   *        `camelCase` or `TitleCase` name of the Tech to get\n   *\n   * @return {Tech|undefined}\n   *         The `Tech` or undefined if there was no tech with the name requsted.\n   */\n\n\n  Tech.getTech = function getTech(name) {\n    if (!name) {\n      return;\n    }\n\n    name = toTitleCase(name);\n\n    if (Tech.techs_ && Tech.techs_[name]) {\n      return Tech.techs_[name];\n    }\n\n    if (window && window.videojs && window.videojs[name]) {\n      log$1.warn('The ' + name + ' tech was added to the videojs object when it should be registered using videojs.registerTech(name, tech)');\n      return window.videojs[name];\n    }\n  };\n\n  return Tech;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n *\n * @returns {VideoTrackList}\n * @method Tech.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n *\n * @returns {AudioTrackList}\n * @method Tech.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.textTracks\n */\n\n/**\n * Get the remote element {@link TextTrackList}\n *\n * @returns {TextTrackList}\n * @method Tech.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote element {@link HtmlTrackElementList}\n *\n * @returns {HtmlTrackElementList}\n * @method Tech.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name) {\n  var props = ALL[name];\n\n  Tech.prototype[props.getterName] = function () {\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * List of associated text tracks\n *\n * @type {TextTrackList}\n * @private\n * @property Tech#textTracks_\n */\n\n/**\n * List of associated audio tracks.\n *\n * @type {AudioTrackList}\n * @private\n * @property Tech#audioTracks_\n */\n\n/**\n * List of associated video tracks.\n *\n * @type {VideoTrackList}\n * @private\n * @property Tech#videoTracks_\n */\n\n/**\n * Boolean indicating wether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresVolumeControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default\n */\nTech.prototype.featuresMuteControl = true;\n\n/**\n * Boolean indicating whether the `Tech` supports fullscreen resize control.\n * Resizing plugins using request fullscreen reloads the plugin\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresFullscreenResize = false;\n\n/**\n * Boolean indicating wether the `Tech` supports changing the speed at which the video\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresPlaybackRate = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `progress` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualProgressOn} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresProgressEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * A tech should set this to `true` and then use {@link Tech#triggerSourceset}\n * to trigger a {@link Tech#event:sourceset} at the earliest time after getting\n * a new source.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresSourceset = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the `timeupdate` event. This is currently\n * not triggered by video-js-swf. This will be used to determine if\n * {@link Tech#manualTimeUpdates} should be called.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresTimeupdateEvents = false;\n\n/**\n * Boolean indicating wether the `Tech` supports the native `TextTrack`s.\n * This will help us integrate with native `TextTrack`s if the browser supports them.\n *\n * @type {boolean}\n * @default\n */\nTech.prototype.featuresNativeTextTracks = false;\n\n/**\n * A functional mixin for techs that want to use the Source Handler pattern.\n * Source handlers are scripts for handling specific formats.\n * The source handler pattern is used for adaptive formats (HLS, DASH) that\n * manually load video data and feed it into a Source Buffer (Media Source Extensions)\n * Example: `Tech.withSourceHandlers.call(MyTech);`\n *\n * @param {Tech} _Tech\n *        The tech to add source handler functions to.\n *\n * @mixes Tech~SourceHandlerAdditions\n */\nTech.withSourceHandlers = function (_Tech) {\n\n  /**\n   * Register a source handler\n   *\n   * @param {Function} handler\n   *        The source handler class\n   *\n   * @param {number} [index]\n   *        Register it at the following index\n   */\n  _Tech.registerSourceHandler = function (handler, index) {\n    var handlers = _Tech.sourceHandlers;\n\n    if (!handlers) {\n      handlers = _Tech.sourceHandlers = [];\n    }\n\n    if (index === undefined) {\n      // add to the end of the list\n      index = handlers.length;\n    }\n\n    handlers.splice(index, 0, handler);\n  };\n\n  /**\n   * Check if the tech can support the given type. Also checks the\n   * Techs sourceHandlers.\n   *\n   * @param {string} type\n   *         The mimetype to check.\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlayType = function (type) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canPlayType(type);\n\n      if (can) {\n        return can;\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Returns the first source handler that supports the source.\n   *\n   * TODO: Answer question: should 'probably' be prioritized over 'maybe'\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {SourceHandler|null}\n   *          The first source handler that supports the source or null if\n   *          no SourceHandler supports the source\n   */\n  _Tech.selectSourceHandler = function (source, options) {\n    var handlers = _Tech.sourceHandlers || [];\n    var can = void 0;\n\n    for (var i = 0; i < handlers.length; i++) {\n      can = handlers[i].canHandleSource(source, options);\n\n      if (can) {\n        return handlers[i];\n      }\n    }\n\n    return null;\n  };\n\n  /**\n   * Check if the tech can support the given source.\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        The source object\n   *\n   * @param {Object} options\n   *        The options passed to the tech\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n  _Tech.canPlaySource = function (srcObj, options) {\n    var sh = _Tech.selectSourceHandler(srcObj, options);\n\n    if (sh) {\n      return sh.canHandleSource(srcObj, options);\n    }\n\n    return '';\n  };\n\n  /**\n   * When using a source handler, prefer its implementation of\n   * any function normally provided by the tech.\n   */\n  var deferrable = ['seekable', 'seeking', 'duration'];\n\n  /**\n   * A wrapper around {@link Tech#seekable} that will call a `SourceHandler`s seekable\n   * function if it exists, with a fallback to the Techs seekable function.\n   *\n   * @method _Tech.seekable\n   */\n\n  /**\n   * A wrapper around {@link Tech#duration} that will call a `SourceHandler`s duration\n   * function if it exists, otherwise it will fallback to the techs duration function.\n   *\n   * @method _Tech.duration\n   */\n\n  deferrable.forEach(function (fnName) {\n    var originalFn = this[fnName];\n\n    if (typeof originalFn !== 'function') {\n      return;\n    }\n\n    this[fnName] = function () {\n      if (this.sourceHandler_ && this.sourceHandler_[fnName]) {\n        return this.sourceHandler_[fnName].apply(this.sourceHandler_, arguments);\n      }\n      return originalFn.apply(this, arguments);\n    };\n  }, _Tech.prototype);\n\n  /**\n   * Create a function for setting the source using a source object\n   * and source handlers.\n   * Should never be called unless a source handler was found.\n   *\n   * @param {Tech~SourceObject} source\n   *        A source object with src and type keys\n   */\n  _Tech.prototype.setSource = function (source) {\n    var sh = _Tech.selectSourceHandler(source, this.options_);\n\n    if (!sh) {\n      // Fall back to a native source hander when unsupported sources are\n      // deliberately set\n      if (_Tech.nativeSourceHandler) {\n        sh = _Tech.nativeSourceHandler;\n      } else {\n        log$1.error('No source hander found for the current source.');\n      }\n    }\n\n    // Dispose any existing source handler\n    this.disposeSourceHandler();\n    this.off('dispose', this.disposeSourceHandler);\n\n    if (sh !== _Tech.nativeSourceHandler) {\n      this.currentSource_ = source;\n    }\n\n    this.sourceHandler_ = sh.handleSource(source, this, this.options_);\n    this.on('dispose', this.disposeSourceHandler);\n  };\n\n  /**\n   * Clean up any existing SourceHandlers and listeners when the Tech is disposed.\n   *\n   * @listens Tech#dispose\n   */\n  _Tech.prototype.disposeSourceHandler = function () {\n    // if we have a source and get another one\n    // then we are loading something new\n    // than clear all of our current tracks\n    if (this.currentSource_) {\n      this.clearTracks(['audio', 'video']);\n      this.currentSource_ = null;\n    }\n\n    // always clean up auto-text tracks\n    this.cleanupAutoTextTracks();\n\n    if (this.sourceHandler_) {\n\n      if (this.sourceHandler_.dispose) {\n        this.sourceHandler_.dispose();\n      }\n\n      this.sourceHandler_ = null;\n    }\n  };\n};\n\n// The base Tech class needs to be registered as a Component. It is the only\n// Tech that can be registered as a Component.\nComponent.registerComponent('Tech', Tech);\nTech.registerTech('Tech', Tech);\n\n/**\n * A list of techs that should be added to techOrder on Players\n *\n * @private\n */\nTech.defaultTechOrder_ = [];\n\nvar middlewares = {};\nvar middlewareInstances = {};\n\nvar TERMINATOR = {};\n\nfunction use(type, middleware) {\n  middlewares[type] = middlewares[type] || [];\n  middlewares[type].push(middleware);\n}\n\n\n\nfunction setSource(player, src, next) {\n  player.setTimeout(function () {\n    return setSourceHelper(src, middlewares[src.type], next, player);\n  }, 1);\n}\n\nfunction setTech(middleware, tech) {\n  middleware.forEach(function (mw) {\n    return mw.setTech && mw.setTech(tech);\n  });\n}\n\n/**\n * Calls a getter on the tech first, through each middleware\n * from right to left to the player.\n */\nfunction get$1(middleware, tech, method) {\n  return middleware.reduceRight(middlewareIterator(method), tech[method]());\n}\n\n/**\n * Takes the argument given to the player and calls the setter method on each\n * middlware from left to right to the tech.\n */\nfunction set$1(middleware, tech, method, arg) {\n  return tech[method](middleware.reduce(middlewareIterator(method), arg));\n}\n\n/**\n * Takes the argument given to the player and calls the `call` version of the method\n * on each middleware from left to right.\n * Then, call the passed in method on the tech and return the result unchanged\n * back to the player, through middleware, this time from right to left.\n */\nfunction mediate(middleware, tech, method) {\n  var arg = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n  var callMethod = 'call' + toTitleCase(method);\n  var middlewareValue = middleware.reduce(middlewareIterator(callMethod), arg);\n  var terminated = middlewareValue === TERMINATOR;\n  var returnValue = terminated ? null : tech[method](middlewareValue);\n\n  executeRight(middleware, method, returnValue, terminated);\n\n  return returnValue;\n}\n\nvar allowedGetters = {\n  buffered: 1,\n  currentTime: 1,\n  duration: 1,\n  seekable: 1,\n  played: 1,\n  paused: 1\n};\n\nvar allowedSetters = {\n  setCurrentTime: 1\n};\n\nvar allowedMediators = {\n  play: 1,\n  pause: 1\n};\n\nfunction middlewareIterator(method) {\n  return function (value, mw) {\n    // if the previous middleware terminated, pass along the termination\n    if (value === TERMINATOR) {\n      return TERMINATOR;\n    }\n\n    if (mw[method]) {\n      return mw[method](value);\n    }\n\n    return value;\n  };\n}\n\nfunction executeRight(mws, method, value, terminated) {\n  for (var i = mws.length - 1; i >= 0; i--) {\n    var mw = mws[i];\n\n    if (mw[method]) {\n      mw[method](terminated, value);\n    }\n  }\n}\n\nfunction clearCacheForPlayer(player) {\n  middlewareInstances[player.id()] = null;\n}\n\n/**\n * {\n *  [playerId]: [[mwFactory, mwInstance], ...]\n * }\n */\nfunction getOrCreateFactory(player, mwFactory) {\n  var mws = middlewareInstances[player.id()];\n  var mw = null;\n\n  if (mws === undefined || mws === null) {\n    mw = mwFactory(player);\n    middlewareInstances[player.id()] = [[mwFactory, mw]];\n    return mw;\n  }\n\n  for (var i = 0; i < mws.length; i++) {\n    var _mws$i = mws[i],\n        mwf = _mws$i[0],\n        mwi = _mws$i[1];\n\n\n    if (mwf !== mwFactory) {\n      continue;\n    }\n\n    mw = mwi;\n  }\n\n  if (mw === null) {\n    mw = mwFactory(player);\n    mws.push([mwFactory, mw]);\n  }\n\n  return mw;\n}\n\nfunction setSourceHelper() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var middleware = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var next = arguments[2];\n  var player = arguments[3];\n  var acc = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : [];\n  var lastRun = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : false;\n  var mwFactory = middleware[0],\n      mwrest = middleware.slice(1);\n\n  // if mwFactory is a string, then we're at a fork in the road\n\n  if (typeof mwFactory === 'string') {\n    setSourceHelper(src, middlewares[mwFactory], next, player, acc, lastRun);\n\n    // if we have an mwFactory, call it with the player to get the mw,\n    // then call the mw's setSource method\n  } else if (mwFactory) {\n    var mw = getOrCreateFactory(player, mwFactory);\n\n    // if setSource isn't present, implicitly select this middleware\n    if (!mw.setSource) {\n      acc.push(mw);\n      return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n    }\n\n    mw.setSource(assign({}, src), function (err, _src) {\n\n      // something happened, try the next middleware on the current level\n      // make sure to use the old src\n      if (err) {\n        return setSourceHelper(src, mwrest, next, player, acc, lastRun);\n      }\n\n      // we've succeeded, now we need to go deeper\n      acc.push(mw);\n\n      // if it's the same type, continue down the current chain\n      // otherwise, we want to go down the new chain\n      setSourceHelper(_src, src.type === _src.type ? mwrest : middlewares[_src.type], next, player, acc, lastRun);\n    });\n  } else if (mwrest.length) {\n    setSourceHelper(src, mwrest, next, player, acc, lastRun);\n  } else if (lastRun) {\n    next(src, acc);\n  } else {\n    setSourceHelper(src, middlewares['*'], next, player, acc, true);\n  }\n}\n\n/**\n * Mimetypes\n *\n * @see http://hul.harvard.edu/ois/////systems/wax/wax-public-help/mimetypes.htm\n * @typedef Mimetypes~Kind\n * @enum\n */\nvar MimetypesKind = {\n  opus: 'video/ogg',\n  ogv: 'video/ogg',\n  mp4: 'video/mp4',\n  mov: 'video/mp4',\n  m4v: 'video/mp4',\n  mkv: 'video/x-matroska',\n  mp3: 'audio/mpeg',\n  aac: 'audio/aac',\n  oga: 'audio/ogg',\n  m3u8: 'application/x-mpegURL'\n};\n\n/**\n * Get the mimetype of a given src url if possible\n *\n * @param {string} src\n *        The url to the src\n *\n * @return {string}\n *         return the mimetype if it was known or empty string otherwise\n */\nvar getMimetype = function getMimetype() {\n  var src = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n  var ext = getFileExtension(src);\n  var mimetype = MimetypesKind[ext.toLowerCase()];\n\n  return mimetype || '';\n};\n\n/**\n * Find the mime type of a given source string if possible. Uses the player\n * source cache.\n *\n * @param {Player} player\n *        The player object\n *\n * @param {string} src\n *        The source string\n *\n * @return {string}\n *         The type that was found\n */\nvar findMimetype = function findMimetype(player, src) {\n  if (!src) {\n    return '';\n  }\n\n  // 1. check for the type in the `source` cache\n  if (player.cache_.source.src === src && player.cache_.source.type) {\n    return player.cache_.source.type;\n  }\n\n  // 2. see if we have this source in our `currentSources` cache\n  var matchingSources = player.cache_.sources.filter(function (s) {\n    return s.src === src;\n  });\n\n  if (matchingSources.length) {\n    return matchingSources[0].type;\n  }\n\n  // 3. look for the src url in source elements and use the type there\n  var sources = player.$$('source');\n\n  for (var i = 0; i < sources.length; i++) {\n    var s = sources[i];\n\n    if (s.type && s.src && s.src === src) {\n      return s.type;\n    }\n  }\n\n  // 4. finally fallback to our list of mime types based on src url extension\n  return getMimetype(src);\n};\n\n/**\n * @module filter-source\n */\n/**\n * Filter out single bad source objects or multiple source objects in an\n * array. Also flattens nested source object arrays into a 1 dimensional\n * array of source objects.\n *\n * @param {Tech~SourceObject|Tech~SourceObject[]} src\n *        The src object to filter\n *\n * @return {Tech~SourceObject[]}\n *         An array of sourceobjects containing only valid sources\n *\n * @private\n */\nvar filterSource = function filterSource(src) {\n  // traverse array\n  if (Array.isArray(src)) {\n    var newsrc = [];\n\n    src.forEach(function (srcobj) {\n      srcobj = filterSource(srcobj);\n\n      if (Array.isArray(srcobj)) {\n        newsrc = newsrc.concat(srcobj);\n      } else if (isObject(srcobj)) {\n        newsrc.push(srcobj);\n      }\n    });\n\n    src = newsrc;\n  } else if (typeof src === 'string' && src.trim()) {\n    // convert string into object\n    src = [fixSource({ src: src })];\n  } else if (isObject(src) && typeof src.src === 'string' && src.src && src.src.trim()) {\n    // src is already valid\n    src = [fixSource(src)];\n  } else {\n    // invalid source, turn it into an empty array\n    src = [];\n  }\n\n  return src;\n};\n\n/**\n * Checks src mimetype, adding it when possible\n *\n * @param {Tech~SourceObject} src\n *        The src object to check\n * @return {Tech~SourceObject}\n *        src Object with known type\n */\nfunction fixSource(src) {\n  var mimetype = getMimetype(src.src);\n\n  if (!src.type && mimetype) {\n    src.type = mimetype;\n  }\n\n  return src;\n}\n\n/**\n * @file loader.js\n */\n/**\n * The `MediaLoader` is the `Component` that decides which playback technology to load\n * when a player is initialized.\n *\n * @extends Component\n */\n\nvar MediaLoader = function (_Component) {\n  inherits(MediaLoader, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value stroe of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function that is run when this component is ready.\n   */\n  function MediaLoader(player, options, ready) {\n    classCallCheck(this, MediaLoader);\n\n    // MediaLoader has no element\n    var options_ = mergeOptions({ createEl: false }, options);\n\n    // If there are no sources when the player is initialized,\n    // load the first supported playback technology.\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_, ready));\n\n    if (!options.playerOptions.sources || options.playerOptions.sources.length === 0) {\n      for (var i = 0, j = options.playerOptions.techOrder; i < j.length; i++) {\n        var techName = toTitleCase(j[i]);\n        var tech = Tech.getTech(techName);\n\n        // Support old behavior of techs being registered as components.\n        // Remove once that deprecated behavior is removed.\n        if (!techName) {\n          tech = Component.getComponent(techName);\n        }\n\n        // Check if the browser supports this technology\n        if (tech && tech.isSupported()) {\n          player.loadTech_(techName);\n          break;\n        }\n      }\n    } else {\n      // Loop through playback technologies (HTML5, Flash) and check for support.\n      // Then load the best source.\n      // A few assumptions here:\n      //   All playback technologies respect preload false.\n      player.src(options.playerOptions.sources);\n    }\n    return _this;\n  }\n\n  return MediaLoader;\n}(Component);\n\nComponent.registerComponent('MediaLoader', MediaLoader);\n\n/**\n * @file button.js\n */\n/**\n * Clickable Component which is clickable or keyboard actionable,\n * but is not a native HTML button.\n *\n * @extends Component\n */\n\nvar ClickableComponent = function (_Component) {\n  inherits(ClickableComponent, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ClickableComponent(player, options) {\n    classCallCheck(this, ClickableComponent);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.emitTapEvents();\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`s DOM element.\n   *\n   * @param {string} [tag=div]\n   *        The element's node type.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createEl = function createEl$$1() {\n    var tag = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'div';\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass(),\n      tabIndex: 0\n    }, props);\n\n    if (tag === 'button') {\n      log$1.error('Creating a ClickableComponent with an HTML element of ' + tag + ' is not supported; use a Button instead.');\n    }\n\n    // Add ARIA attributes for clickable element which is not a native HTML button\n    attributes = assign({\n      role: 'button'\n    }, attributes);\n\n    this.tabIndex_ = props.tabIndex;\n\n    var el = _Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  ClickableComponent.prototype.dispose = function dispose() {\n    // remove controlTextEl_ on dipose\n    this.controlTextEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a control text element on this `Component`\n   *\n   * @param {Element} [el]\n   *        Parent element for the control text.\n   *\n   * @return {Element}\n   *         The control text element that gets created.\n   */\n\n\n  ClickableComponent.prototype.createControlTextEl = function createControlTextEl(el) {\n    this.controlTextEl_ = createEl('span', {\n      className: 'vjs-control-text'\n    }, {\n      // let the screen reader user know that the text of the element may change\n      'aria-live': 'polite'\n    });\n\n    if (el) {\n      el.appendChild(this.controlTextEl_);\n    }\n\n    this.controlText(this.controlText_, el);\n\n    return this.controlTextEl_;\n  };\n\n  /**\n   * Get or set the localize text to use for the controls on the `Component`.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  ClickableComponent.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.el();\n\n    if (text === undefined) {\n      return this.controlText_ || 'Need Text';\n    }\n\n    var localizedText = this.localize(text);\n\n    this.controlText_ = text;\n    textContent(this.controlTextEl_, localizedText);\n    if (!this.nonIconControl) {\n      // Set title attribute if only an icon is shown\n      el.setAttribute('title', localizedText);\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ClickableComponent.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-control vjs-button ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Enable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.enable = function enable() {\n    if (!this.enabled_) {\n      this.enabled_ = true;\n      this.removeClass('vjs-disabled');\n      this.el_.setAttribute('aria-disabled', 'false');\n      if (typeof this.tabIndex_ !== 'undefined') {\n        this.el_.setAttribute('tabIndex', this.tabIndex_);\n      }\n      this.on(['tap', 'click'], this.handleClick);\n      this.on('focus', this.handleFocus);\n      this.on('blur', this.handleBlur);\n    }\n  };\n\n  /**\n   * Disable this `Component`s element.\n   */\n\n\n  ClickableComponent.prototype.disable = function disable() {\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n    this.el_.setAttribute('aria-disabled', 'true');\n    if (typeof this.tabIndex_ !== 'undefined') {\n      this.el_.removeAttribute('tabIndex');\n    }\n    this.off(['tap', 'click'], this.handleClick);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n  };\n\n  /**\n   * This gets called when a `ClickableComponent` gets:\n   * - Clicked (via the `click` event, listening starts in the constructor)\n   * - Tapped (via the `tap` event, listening starts in the constructor)\n   * - The following things happen in order:\n   *   1. {@link ClickableComponent#handleFocus} is called via a `focus` event on the\n   *      `ClickableComponent`.\n   *   2. {@link ClickableComponent#handleFocus} adds a listener for `keydown` on using\n   *      {@link ClickableComponent#handleKeyPress}.\n   *   3. `ClickableComponent` has not had a `blur` event (`blur` means that focus was lost). The user presses\n   *      the space or enter key.\n   *   4. {@link ClickableComponent#handleKeyPress} calls this function with the `keydown`\n   *      event as a parameter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @abstract\n   */\n\n\n  ClickableComponent.prototype.handleClick = function handleClick(event) {};\n\n  /**\n   * This gets called when a `ClickableComponent` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  ClickableComponent.prototype.handleFocus = function handleFocus(event) {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when this ClickableComponent has focus and a key gets pressed down. By\n   * default it will call `this.handleClick` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  ClickableComponent.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.trigger('click');\n    } else if (_Component.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Component.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  /**\n   * Called when a `ClickableComponent` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  ClickableComponent.prototype.handleBlur = function handleBlur(event) {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  return ClickableComponent;\n}(Component);\n\nComponent.registerComponent('ClickableComponent', ClickableComponent);\n\n/**\n * @file poster-image.js\n */\n/**\n * A `ClickableComponent` that handles showing the poster image for the player.\n *\n * @extends ClickableComponent\n */\n\nvar PosterImage = function (_ClickableComponent) {\n  inherits(PosterImage, _ClickableComponent);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should attach to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PosterImage(player, options) {\n    classCallCheck(this, PosterImage);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.update();\n    player.on('posterchange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * Clean up and dispose of the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.dispose = function dispose() {\n    this.player().off('posterchange', this.update);\n    _ClickableComponent.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `PosterImage`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  PosterImage.prototype.createEl = function createEl$$1() {\n    var el = createEl('div', {\n      className: 'vjs-poster',\n\n      // Don't want poster to be tabbable.\n      tabIndex: -1\n    });\n\n    // To ensure the poster image resizes while maintaining its original aspect\n    // ratio, use a div with `background-size` when available. For browsers that\n    // do not support `background-size` (e.g. IE8), fall back on using a regular\n    // img element.\n    if (!BACKGROUND_SIZE_SUPPORTED) {\n      this.fallbackImg_ = createEl('img');\n      el.appendChild(this.fallbackImg_);\n    }\n\n    return el;\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for {@link Player#posterchange} events.\n   *\n   * @listens Player#posterchange\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `Player#posterchange` event that triggered this function.\n   */\n\n\n  PosterImage.prototype.update = function update(event) {\n    var url = this.player().poster();\n\n    this.setSrc(url);\n\n    // If there's no poster source we should display:none on this component\n    // so it's not still clickable or right-clickable\n    if (url) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  /**\n   * Set the source of the `PosterImage` depending on the display method.\n   *\n   * @param {string} url\n   *        The URL to the source for the `PosterImage`.\n   */\n\n\n  PosterImage.prototype.setSrc = function setSrc(url) {\n    if (this.fallbackImg_) {\n      this.fallbackImg_.src = url;\n    } else {\n      var backgroundImage = '';\n\n      // Any falsey values should stay as an empty string, otherwise\n      // this will throw an extra error\n      if (url) {\n        backgroundImage = 'url(\"' + url + '\")';\n      }\n\n      this.el_.style.backgroundImage = backgroundImage;\n    }\n  };\n\n  /**\n   * An {@link EventTarget~EventListener} for clicks on the `PosterImage`. See\n   * {@link ClickableComponent#handleClick} for instances where this will be triggered.\n   *\n   * @listens tap\n   * @listens click\n   * @listens keydown\n   *\n   * @param {EventTarget~Event} event\n   +        The `click`, `tap` or `keydown` event that caused this function to be called.\n   */\n\n\n  PosterImage.prototype.handleClick = function handleClick(event) {\n    // We don't want a click to trigger playback when controls are disabled\n    if (!this.player_.controls()) {\n      return;\n    }\n\n    if (this.player_.paused()) {\n      silencePromise(this.player_.play());\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  return PosterImage;\n}(ClickableComponent);\n\nComponent.registerComponent('PosterImage', PosterImage);\n\n/**\n * @file text-track-display.js\n */\nvar darkGray = '#222';\nvar lightGray = '#ccc';\nvar fontMap = {\n  monospace: 'monospace',\n  sansSerif: 'sans-serif',\n  serif: 'serif',\n  monospaceSansSerif: '\"Andale Mono\", \"Lucida Console\", monospace',\n  monospaceSerif: '\"Courier New\", monospace',\n  proportionalSansSerif: 'sans-serif',\n  proportionalSerif: 'serif',\n  casual: '\"Comic Sans MS\", Impact, fantasy',\n  script: '\"Monotype Corsiva\", cursive',\n  smallcaps: '\"Andale Mono\", \"Lucida Console\", monospace, sans-serif'\n};\n\n/**\n * Construct an rgba color from a given hex color code.\n *\n * @param {number} color\n *        Hex number for color, like #f0e or #f604e2.\n *\n * @param {number} opacity\n *        Value for opacity, 0.0 - 1.0.\n *\n * @return {string}\n *         The rgba color that was created, like 'rgba(255, 0, 0, 0.3)'.\n */\nfunction constructColor(color, opacity) {\n  var hex = void 0;\n\n  if (color.length === 4) {\n    // color looks like \"#f0e\"\n    hex = color[1] + color[1] + color[2] + color[2] + color[3] + color[3];\n  } else if (color.length === 7) {\n    // color looks like \"#f604e2\"\n    hex = color.slice(1);\n  } else {\n    throw new Error('Invalid color code provided, ' + color + '; must be formatted as e.g. #f0e or #f604e2.');\n  }\n  return 'rgba(' + parseInt(hex.slice(0, 2), 16) + ',' + parseInt(hex.slice(2, 4), 16) + ',' + parseInt(hex.slice(4, 6), 16) + ',' + opacity + ')';\n}\n\n/**\n * Try to update the style of a DOM element. Some style changes will throw an error,\n * particularly in IE8. Those should be noops.\n *\n * @param {Element} el\n *        The DOM element to be styled.\n *\n * @param {string} style\n *        The CSS property on the element that should be styled.\n *\n * @param {string} rule\n *        The style rule that should be applied to the property.\n *\n * @private\n */\nfunction tryUpdateStyle(el, style, rule) {\n  try {\n    el.style[style] = rule;\n  } catch (e) {\n\n    // Satisfies linter.\n    return;\n  }\n}\n\n/**\n * The component for displaying text track cues.\n *\n * @extends Component\n */\n\nvar TextTrackDisplay = function (_Component) {\n  inherits(TextTrackDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when `TextTrackDisplay` is ready.\n   */\n  function TextTrackDisplay(player, options, ready) {\n    classCallCheck(this, TextTrackDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options, ready));\n\n    player.on('loadstart', bind(_this, _this.toggleDisplay));\n    player.on('texttrackchange', bind(_this, _this.updateDisplay));\n    player.on('loadstart', bind(_this, _this.preselectTrack));\n\n    // This used to be called during player init, but was causing an error\n    // if a track should show by default and the display hadn't loaded yet.\n    // Should probably be moved to an external track loader when we support\n    // tracks that don't need a display.\n    player.ready(bind(_this, function () {\n      if (player.tech_ && player.tech_.featuresNativeTextTracks) {\n        this.hide();\n        return;\n      }\n\n      player.on('fullscreenchange', bind(this, this.updateDisplay));\n\n      var tracks = this.options_.playerOptions.tracks || [];\n\n      for (var i = 0; i < tracks.length; i++) {\n        this.player_.addRemoteTextTrack(tracks[i], true);\n      }\n\n      this.preselectTrack();\n    }));\n    return _this;\n  }\n\n  /**\n  * Preselect a track following this precedence:\n  * - matches the previously selected {@link TextTrack}'s language and kind\n  * - matches the previously selected {@link TextTrack}'s language only\n  * - is the first default captions track\n  * - is the first default descriptions track\n  *\n  * @listens Player#loadstart\n  */\n\n\n  TextTrackDisplay.prototype.preselectTrack = function preselectTrack() {\n    var modes = { captions: 1, subtitles: 1 };\n    var trackList = this.player_.textTracks();\n    var userPref = this.player_.cache_.selectedLanguage;\n    var firstDesc = void 0;\n    var firstCaptions = void 0;\n    var preferredTrack = void 0;\n\n    for (var i = 0; i < trackList.length; i++) {\n      var track = trackList[i];\n\n      if (userPref && userPref.enabled && userPref.language === track.language) {\n        // Always choose the track that matches both language and kind\n        if (track.kind === userPref.kind) {\n          preferredTrack = track;\n          // or choose the first track that matches language\n        } else if (!preferredTrack) {\n          preferredTrack = track;\n        }\n\n        // clear everything if offTextTrackMenuItem was clicked\n      } else if (userPref && !userPref.enabled) {\n        preferredTrack = null;\n        firstDesc = null;\n        firstCaptions = null;\n      } else if (track['default']) {\n        if (track.kind === 'descriptions' && !firstDesc) {\n          firstDesc = track;\n        } else if (track.kind in modes && !firstCaptions) {\n          firstCaptions = track;\n        }\n      }\n    }\n\n    // The preferredTrack matches the user preference and takes\n    // precendence over all the other tracks.\n    // So, display the preferredTrack before the first default track\n    // and the subtitles/captions track before the descriptions track\n    if (preferredTrack) {\n      preferredTrack.mode = 'showing';\n    } else if (firstCaptions) {\n      firstCaptions.mode = 'showing';\n    } else if (firstDesc) {\n      firstDesc.mode = 'showing';\n    }\n  };\n\n  /**\n   * Turn display of {@link TextTrack}'s from the current state into the other state.\n   * There are only two states:\n   * - 'shown'\n   * - 'hidden'\n   *\n   * @listens Player#loadstart\n   */\n\n\n  TextTrackDisplay.prototype.toggleDisplay = function toggleDisplay() {\n    if (this.player_.tech_ && this.player_.tech_.featuresNativeTextTracks) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the {@link Component}'s DOM element.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TextTrackDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-text-track-display'\n    }, {\n      'aria-live': 'off',\n      'aria-atomic': 'true'\n    });\n  };\n\n  /**\n   * Clear all displayed {@link TextTrack}s.\n   */\n\n\n  TextTrackDisplay.prototype.clearDisplay = function clearDisplay() {\n    if (typeof window.WebVTT === 'function') {\n      window.WebVTT.processCues(window, [], this.el_);\n    }\n  };\n\n  /**\n   * Update the displayed TextTrack when a either a {@link Player#texttrackchange} or\n   * a {@link Player#fullscreenchange} is fired.\n   *\n   * @listens Player#texttrackchange\n   * @listens Player#fullscreenchange\n   */\n\n\n  TextTrackDisplay.prototype.updateDisplay = function updateDisplay() {\n    var tracks = this.player_.textTracks();\n\n    this.clearDisplay();\n\n    // Track display prioritization model: if multiple tracks are 'showing',\n    //  display the first 'subtitles' or 'captions' track which is 'showing',\n    //  otherwise display the first 'descriptions' track which is 'showing'\n\n    var descriptionsTrack = null;\n    var captionsSubtitlesTrack = null;\n    var i = tracks.length;\n\n    while (i--) {\n      var track = tracks[i];\n\n      if (track.mode === 'showing') {\n        if (track.kind === 'descriptions') {\n          descriptionsTrack = track;\n        } else {\n          captionsSubtitlesTrack = track;\n        }\n      }\n    }\n\n    if (captionsSubtitlesTrack) {\n      if (this.getAttribute('aria-live') !== 'off') {\n        this.setAttribute('aria-live', 'off');\n      }\n      this.updateForTrack(captionsSubtitlesTrack);\n    } else if (descriptionsTrack) {\n      if (this.getAttribute('aria-live') !== 'assertive') {\n        this.setAttribute('aria-live', 'assertive');\n      }\n      this.updateForTrack(descriptionsTrack);\n    }\n  };\n\n  /**\n   * Add an {@link Texttrack} to to the {@link Tech}s {@link TextTrackList}.\n   *\n   * @param {TextTrack} track\n   *        Text track object to be added to the list.\n   */\n\n\n  TextTrackDisplay.prototype.updateForTrack = function updateForTrack(track) {\n    if (typeof window.WebVTT !== 'function' || !track.activeCues) {\n      return;\n    }\n\n    var cues = [];\n\n    for (var _i = 0; _i < track.activeCues.length; _i++) {\n      cues.push(track.activeCues[_i]);\n    }\n\n    window.WebVTT.processCues(window, cues, this.el_);\n\n    if (!this.player_.textTrackSettings) {\n      return;\n    }\n\n    var overrides = this.player_.textTrackSettings.getValues();\n\n    var i = cues.length;\n\n    while (i--) {\n      var cue = cues[i];\n\n      if (!cue) {\n        continue;\n      }\n\n      var cueDiv = cue.displayState;\n\n      if (overrides.color) {\n        cueDiv.firstChild.style.color = overrides.color;\n      }\n      if (overrides.textOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'color', constructColor(overrides.color || '#fff', overrides.textOpacity));\n      }\n      if (overrides.backgroundColor) {\n        cueDiv.firstChild.style.backgroundColor = overrides.backgroundColor;\n      }\n      if (overrides.backgroundOpacity) {\n        tryUpdateStyle(cueDiv.firstChild, 'backgroundColor', constructColor(overrides.backgroundColor || '#000', overrides.backgroundOpacity));\n      }\n      if (overrides.windowColor) {\n        if (overrides.windowOpacity) {\n          tryUpdateStyle(cueDiv, 'backgroundColor', constructColor(overrides.windowColor, overrides.windowOpacity));\n        } else {\n          cueDiv.style.backgroundColor = overrides.windowColor;\n        }\n      }\n      if (overrides.edgeStyle) {\n        if (overrides.edgeStyle === 'dropshadow') {\n          cueDiv.firstChild.style.textShadow = '2px 2px 3px ' + darkGray + ', 2px 2px 4px ' + darkGray + ', 2px 2px 5px ' + darkGray;\n        } else if (overrides.edgeStyle === 'raised') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + darkGray + ', 2px 2px ' + darkGray + ', 3px 3px ' + darkGray;\n        } else if (overrides.edgeStyle === 'depressed') {\n          cueDiv.firstChild.style.textShadow = '1px 1px ' + lightGray + ', 0 1px ' + lightGray + ', -1px -1px ' + darkGray + ', 0 -1px ' + darkGray;\n        } else if (overrides.edgeStyle === 'uniform') {\n          cueDiv.firstChild.style.textShadow = '0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray + ', 0 0 4px ' + darkGray;\n        }\n      }\n      if (overrides.fontPercent && overrides.fontPercent !== 1) {\n        var fontSize = window.parseFloat(cueDiv.style.fontSize);\n\n        cueDiv.style.fontSize = fontSize * overrides.fontPercent + 'px';\n        cueDiv.style.height = 'auto';\n        cueDiv.style.top = 'auto';\n        cueDiv.style.bottom = '2px';\n      }\n      if (overrides.fontFamily && overrides.fontFamily !== 'default') {\n        if (overrides.fontFamily === 'small-caps') {\n          cueDiv.firstChild.style.fontVariant = 'small-caps';\n        } else {\n          cueDiv.firstChild.style.fontFamily = fontMap[overrides.fontFamily];\n        }\n      }\n    }\n  };\n\n  return TextTrackDisplay;\n}(Component);\n\nComponent.registerComponent('TextTrackDisplay', TextTrackDisplay);\n\n/**\n * @file loading-spinner.js\n */\n/**\n * A loading spinner for use during waiting/loading events.\n *\n * @extends Component\n */\n\nvar LoadingSpinner = function (_Component) {\n  inherits(LoadingSpinner, _Component);\n\n  function LoadingSpinner() {\n    classCallCheck(this, LoadingSpinner);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `LoadingSpinner`s DOM element.\n   *\n   * @return {Element}\n   *         The dom element that gets created.\n   */\n  LoadingSpinner.prototype.createEl = function createEl$$1() {\n    var isAudio = this.player_.isAudio();\n    var playerType = this.localize(isAudio ? 'Audio Player' : 'Video Player');\n    var controlText = createEl('span', {\n      className: 'vjs-control-text',\n      innerHTML: this.localize('{1} is loading.', [playerType])\n    });\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-loading-spinner',\n      dir: 'ltr'\n    });\n\n    el.appendChild(controlText);\n\n    return el;\n  };\n\n  return LoadingSpinner;\n}(Component);\n\nComponent.registerComponent('LoadingSpinner', LoadingSpinner);\n\n/**\n * @file button.js\n */\n/**\n * Base class for all buttons.\n *\n * @extends ClickableComponent\n */\n\nvar Button = function (_ClickableComponent) {\n  inherits(Button, _ClickableComponent);\n\n  function Button() {\n    classCallCheck(this, Button);\n    return possibleConstructorReturn(this, _ClickableComponent.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} [tag=\"button\"]\n   *        The element's node type. This argument is IGNORED: no matter what\n   *        is passed, it will always create a `button` element.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element.\n   *\n   * @param {Object} [attributes={}]\n   *        An object of attributes that should be set on the element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n  Button.prototype.createEl = function createEl(tag) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    tag = 'button';\n\n    props = assign({\n      innerHTML: '<span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>',\n      className: this.buildCSSClass()\n    }, props);\n\n    // Add attributes for button element\n    attributes = assign({\n\n      // Necessary since the default button type is \"submit\"\n      type: 'button'\n    }, attributes);\n\n    var el = Component.prototype.createEl.call(this, tag, props, attributes);\n\n    this.createControlTextEl(el);\n\n    return el;\n  };\n\n  /**\n   * Add a child `Component` inside of this `Button`.\n   *\n   * @param {string|Component} child\n   *        The name or instance of a child to add.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of options that will get passed to children of\n   *        the child.\n   *\n   * @return {Component}\n   *         The `Component` that gets added as a child. When using a string the\n   *         `Component` will get created by this process.\n   *\n   * @deprecated since version 5\n   */\n\n\n  Button.prototype.addChild = function addChild(child) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var className = this.constructor.name;\n\n    log$1.warn('Adding an actionable (user controllable) child to a Button (' + className + ') is not supported; use a ClickableComponent instead.');\n\n    // Avoid the error message generated by ClickableComponent's addChild method\n    return Component.prototype.addChild.call(this, child, options);\n  };\n\n  /**\n   * Enable the `Button` element so that it can be activated or clicked. Use this with\n   * {@link Button#disable}.\n   */\n\n\n  Button.prototype.enable = function enable() {\n    _ClickableComponent.prototype.enable.call(this);\n    this.el_.removeAttribute('disabled');\n  };\n\n  /**\n   * Disable the `Button` element so that it cannot be activated or clicked. Use this with\n   * {@link Button#enable}.\n   */\n\n\n  Button.prototype.disable = function disable() {\n    _ClickableComponent.prototype.disable.call(this);\n    this.el_.setAttribute('disabled', 'disabled');\n  };\n\n  /**\n   * This gets called when a `Button` has focus and `keydown` is triggered via a key\n   * press.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to get called.\n   *\n   * @listens keydown\n   */\n\n\n  Button.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Ignore Space (32) or Enter (13) key operation, which is handled by the browser for a button.\n    if (event.which === 32 || event.which === 13) {\n      return;\n    }\n\n    // Pass keypress handling up for unsupported keys\n    _ClickableComponent.prototype.handleKeyPress.call(this, event);\n  };\n\n  return Button;\n}(ClickableComponent);\n\nComponent.registerComponent('Button', Button);\n\n/**\n * @file big-play-button.js\n */\n/**\n * The initial play button that shows before the video has played. The hiding of the\n * `BigPlayButton` get done via CSS and `Player` states.\n *\n * @extends Button\n */\n\nvar BigPlayButton = function (_Button) {\n  inherits(BigPlayButton, _Button);\n\n  function BigPlayButton(player, options) {\n    classCallCheck(this, BigPlayButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.mouseused_ = false;\n\n    _this.on('mousedown', _this.handleMouseDown);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object. Always returns 'vjs-big-play-button'.\n   */\n\n\n  BigPlayButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-big-play-button';\n  };\n\n  /**\n   * This gets called when a `BigPlayButton` \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  BigPlayButton.prototype.handleClick = function handleClick(event) {\n    var playPromise = this.player_.play();\n\n    // exit early if clicked via the mouse\n    if (this.mouseused_ && event.clientX && event.clientY) {\n      silencePromise(playPromise);\n      return;\n    }\n\n    var cb = this.player_.getChild('controlBar');\n    var playToggle = cb && cb.getChild('playToggle');\n\n    if (!playToggle) {\n      this.player_.focus();\n      return;\n    }\n\n    var playFocus = function playFocus() {\n      return playToggle.focus();\n    };\n\n    if (isPromise(playPromise)) {\n      playPromise.then(playFocus, function () {});\n    } else {\n      this.setTimeout(playFocus, 1);\n    }\n  };\n\n  BigPlayButton.prototype.handleKeyPress = function handleKeyPress(event) {\n    this.mouseused_ = false;\n\n    _Button.prototype.handleKeyPress.call(this, event);\n  };\n\n  BigPlayButton.prototype.handleMouseDown = function handleMouseDown(event) {\n    this.mouseused_ = true;\n  };\n\n  return BigPlayButton;\n}(Button);\n\n/**\n * The text that should display over the `BigPlayButton`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n */\n\n\nBigPlayButton.prototype.controlText_ = 'Play Video';\n\nComponent.registerComponent('BigPlayButton', BigPlayButton);\n\n/**\n * @file close-button.js\n */\n/**\n * The `CloseButton` is a `{@link Button}` that fires a `close` event when\n * it gets clicked.\n *\n * @extends Button\n */\n\nvar CloseButton = function (_Button) {\n  inherits(CloseButton, _Button);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function CloseButton(player, options) {\n    classCallCheck(this, CloseButton);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.controlText(options && options.controlText || _this.localize('Close'));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CloseButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-close-button ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when a `CloseButton` gets clicked. See\n   * {@link ClickableComponent#handleClick} for more information on when this will be\n   * triggered\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   * @fires CloseButton#close\n   */\n\n\n  CloseButton.prototype.handleClick = function handleClick(event) {\n\n    /**\n     * Triggered when the a `CloseButton` is clicked.\n     *\n     * @event CloseButton#close\n     * @type {EventTarget~Event}\n     *\n     * @property {boolean} [bubbles=false]\n     *           set to false so that the close event does not\n     *           bubble up to parents if there is no listener\n     */\n    this.trigger({ type: 'close', bubbles: false });\n  };\n\n  return CloseButton;\n}(Button);\n\nComponent.registerComponent('CloseButton', CloseButton);\n\n/**\n * @file play-toggle.js\n */\n/**\n * Button to toggle between play and pause.\n *\n * @extends Button\n */\n\nvar PlayToggle = function (_Button) {\n  inherits(PlayToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlayToggle(player, options) {\n    classCallCheck(this, PlayToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'play', _this.handlePlay);\n    _this.on(player, 'pause', _this.handlePause);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlayToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-play-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `PlayToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlayToggle.prototype.handleClick = function handleClick(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * This gets called once after the video has ended and the user seeks so that\n   * we can change the replay button back to a play button.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#seeked\n   */\n\n\n  PlayToggle.prototype.handleSeeked = function handleSeeked(event) {\n    this.removeClass('vjs-ended');\n\n    if (this.player_.paused()) {\n      this.handlePause(event);\n    } else {\n      this.handlePlay(event);\n    }\n  };\n\n  /**\n   * Add the vjs-playing class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#play\n   */\n\n\n  PlayToggle.prototype.handlePlay = function handlePlay(event) {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n    // change the button text to \"Pause\"\n    this.controlText('Pause');\n  };\n\n  /**\n   * Add the vjs-paused class to the element so it can change appearance.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#pause\n   */\n\n\n  PlayToggle.prototype.handlePause = function handlePause(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    // change the button text to \"Play\"\n    this.controlText('Play');\n  };\n\n  /**\n   * Add the vjs-ended class to the element so it can change appearance\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  PlayToggle.prototype.handleEnded = function handleEnded(event) {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-ended');\n    // change the button text to \"Replay\"\n    this.controlText('Replay');\n\n    // on the next seek remove the replay button\n    this.one(this.player_, 'seeked', this.handleSeeked);\n  };\n\n  return PlayToggle;\n}(Button);\n\n/**\n * The text that should display over the `PlayToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlayToggle.prototype.controlText_ = 'Play';\n\nComponent.registerComponent('PlayToggle', PlayToggle);\n\n/**\n * @file format-time.js\n * @module format-time\n */\n\n/**\n* Format seconds as a time string, H:MM:SS or M:SS. Supplying a guide (in seconds)\n* will force a number of leading zeros to cover the length of the guide.\n*\n* @param {number} seconds\n*        Number of seconds to be turned into a string\n*\n* @param {number} guide\n*        Number (in seconds) to model the string after\n*\n* @return {string}\n*         Time formatted as H:MM:SS or M:SS\n*/\nvar defaultImplementation = function defaultImplementation(seconds, guide) {\n  seconds = seconds < 0 ? 0 : seconds;\n  var s = Math.floor(seconds % 60);\n  var m = Math.floor(seconds / 60 % 60);\n  var h = Math.floor(seconds / 3600);\n  var gm = Math.floor(guide / 60 % 60);\n  var gh = Math.floor(guide / 3600);\n\n  // handle invalid times\n  if (isNaN(seconds) || seconds === Infinity) {\n    // '-' is false for all relational operators (e.g. <, >=) so this setting\n    // will add the minimum number of fields specified by the guide\n    h = m = s = '-';\n  }\n\n  // Check if we need to show hours\n  h = h > 0 || gh > 0 ? h + ':' : '';\n\n  // If hours are showing, we may need to add a leading zero.\n  // Always show at least one digit of minutes.\n  m = ((h || gm >= 10) && m < 10 ? '0' + m : m) + ':';\n\n  // Check if leading zero is need for seconds\n  s = s < 10 ? '0' + s : s;\n\n  return h + m + s;\n};\n\nvar implementation = defaultImplementation;\n\n/**\n * Replaces the default formatTime implementation with a custom implementation.\n *\n * @param {Function} customImplementation\n *        A function which will be used in place of the default formatTime implementation.\n *        Will receive the current time in seconds and the guide (in seconds) as arguments.\n */\nfunction setFormatTime(customImplementation) {\n  implementation = customImplementation;\n}\n\n/**\n * Resets formatTime to the default implementation.\n */\nfunction resetFormatTime() {\n  implementation = defaultImplementation;\n}\n\nvar formatTime = function (seconds) {\n  var guide = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : seconds;\n\n  return implementation(seconds, guide);\n};\n\n/**\n * @file time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar TimeDisplay = function (_Component) {\n  inherits(TimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TimeDisplay(player, options) {\n    classCallCheck(this, TimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.throttledUpdateContent = throttle(bind(_this, _this.updateContent), 25);\n    _this.on(player, 'timeupdate', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  TimeDisplay.prototype.createEl = function createEl$$1(plainName) {\n    var className = this.buildCSSClass();\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: className + ' vjs-time-control vjs-control',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize(this.labelText_) + '\\xA0</span>'\n    });\n\n    this.contentEl_ = createEl('span', {\n      className: className + '-display'\n    }, {\n      // tell screen readers not to automatically read the time as it changes\n      'aria-live': 'off'\n    });\n\n    this.updateTextNode_();\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  TimeDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n    this.textNode_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Updates the \"remaining time\" text node with new content using the\n   * contents of the `formattedTime_` property.\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateTextNode_ = function updateTextNode_() {\n    if (!this.contentEl_) {\n      return;\n    }\n\n    while (this.contentEl_.firstChild) {\n      this.contentEl_.removeChild(this.contentEl_.firstChild);\n    }\n\n    this.textNode_ = document.createTextNode(this.formattedTime_ || this.formatTime_(0));\n    this.contentEl_.appendChild(this.textNode_);\n  };\n\n  /**\n   * Generates a formatted time for this component to use in display.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    return formatTime(time);\n  };\n\n  /**\n   * Updates the time display text node if it has what was passed in changed\n   * the formatted time.\n   *\n   * @param {number} time\n   *        The time to update to\n   *\n   * @private\n   */\n\n\n  TimeDisplay.prototype.updateFormattedTime_ = function updateFormattedTime_(time) {\n    var formattedTime = this.formatTime_(time);\n\n    if (formattedTime === this.formattedTime_) {\n      return;\n    }\n\n    this.formattedTime_ = formattedTime;\n    this.requestAnimationFrame(this.updateTextNode_);\n  };\n\n  /**\n   * To be filled out in the child class, should update the displayed time\n   * in accordance with the fact that the current time has changed.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate`  event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  TimeDisplay.prototype.updateContent = function updateContent(event) {};\n\n  return TimeDisplay;\n}(Component);\n\n/**\n * The text that is added to the `TimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nTimeDisplay.prototype.labelText_ = 'Time';\n\n/**\n * The text that should display over the `TimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nTimeDisplay.prototype.controlText_ = 'Time';\n\nComponent.registerComponent('TimeDisplay', TimeDisplay);\n\n/**\n * @file current-time-display.js\n */\n/**\n * Displays the current time\n *\n * @extends Component\n */\n\nvar CurrentTimeDisplay = function (_TimeDisplay) {\n  inherits(CurrentTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CurrentTimeDisplay(player, options) {\n    classCallCheck(this, CurrentTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CurrentTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-current-time';\n  };\n\n  /**\n   * Update current time display\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` event that caused this function to run.\n   *\n   * @listens Player#timeupdate\n   */\n\n\n  CurrentTimeDisplay.prototype.updateContent = function updateContent(event) {\n    // Allows for smooth scrubbing, when player can't keep up.\n    var time = this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n\n    this.updateFormattedTime_(time);\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  CurrentTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(this.player_.duration());\n  };\n\n  return CurrentTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `CurrentTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nCurrentTimeDisplay.prototype.labelText_ = 'Current Time';\n\n/**\n * The text that should display over the `CurrentTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nCurrentTimeDisplay.prototype.controlText_ = 'Current Time';\n\nComponent.registerComponent('CurrentTimeDisplay', CurrentTimeDisplay);\n\n/**\n * @file duration-display.js\n */\n/**\n * Displays the duration\n *\n * @extends Component\n */\n\nvar DurationDisplay = function (_TimeDisplay) {\n  inherits(DurationDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function DurationDisplay(player, options) {\n    classCallCheck(this, DurationDisplay);\n\n    // we do not want to/need to throttle duration changes,\n    // as they should always display the changed duration as\n    // it has changed\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.updateContent);\n\n    // Also listen for timeupdate (in the parent) and loadedmetadata because removing those\n    // listeners could have broken dependent applications/libraries. These\n    // can likely be removed for 7.0.\n    _this.on(player, 'loadedmetadata', _this.throttledUpdateContent);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DurationDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-duration';\n  };\n\n  /**\n   * Update duration time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `durationchange`, `timeupdate`, or `loadedmetadata` event that caused\n   *        this function to be called.\n   *\n   * @listens Player#durationchange\n   * @listens Player#timeupdate\n   * @listens Player#loadedmetadata\n   */\n\n\n  DurationDisplay.prototype.updateContent = function updateContent(event) {\n    var duration = this.player_.duration();\n\n    if (duration && this.duration_ !== duration) {\n      this.duration_ = duration;\n      this.updateFormattedTime_(duration);\n    }\n  };\n\n  return DurationDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `DurationDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nDurationDisplay.prototype.labelText_ = 'Duration';\n\n/**\n * The text that should display over the `DurationDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nDurationDisplay.prototype.controlText_ = 'Duration';\n\nComponent.registerComponent('DurationDisplay', DurationDisplay);\n\n/**\n * @file time-divider.js\n */\n/**\n * The separator between the current time and duration.\n * Can be hidden if it's not needed in the design.\n *\n * @extends Component\n */\n\nvar TimeDivider = function (_Component) {\n  inherits(TimeDivider, _Component);\n\n  function TimeDivider() {\n    classCallCheck(this, TimeDivider);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the component's DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeDivider.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-control vjs-time-divider',\n      innerHTML: '<div><span>/</span></div>'\n    });\n  };\n\n  return TimeDivider;\n}(Component);\n\nComponent.registerComponent('TimeDivider', TimeDivider);\n\n/**\n * @file remaining-time-display.js\n */\n/**\n * Displays the time left in the video\n *\n * @extends Component\n */\n\nvar RemainingTimeDisplay = function (_TimeDisplay) {\n  inherits(RemainingTimeDisplay, _TimeDisplay);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function RemainingTimeDisplay(player, options) {\n    classCallCheck(this, RemainingTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _TimeDisplay.call(this, player, options));\n\n    _this.on(player, 'durationchange', _this.throttledUpdateContent);\n    _this.on(player, 'ended', _this.handleEnded);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  RemainingTimeDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-remaining-time';\n  };\n\n  /**\n   * The remaining time display prefixes numbers with a \"minus\" character.\n   *\n   * @param  {number} time\n   *         A numeric time, in seconds.\n   *\n   * @return {string}\n   *         A formatted time\n   *\n   * @private\n   */\n\n\n  RemainingTimeDisplay.prototype.formatTime_ = function formatTime_(time) {\n    // TODO: The \"-\" should be decorative, and not announced by a screen reader\n    return '-' + _TimeDisplay.prototype.formatTime_.call(this, time);\n  };\n\n  /**\n   * Update remaining time display.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `durationchange` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   * @listens Player#durationchange\n   */\n\n\n  RemainingTimeDisplay.prototype.updateContent = function updateContent(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n\n    // @deprecated We should only use remainingTimeDisplay\n    // as of video.js 7\n    if (this.player_.remainingTimeDisplay) {\n      this.updateFormattedTime_(this.player_.remainingTimeDisplay());\n    } else {\n      this.updateFormattedTime_(this.player_.remainingTime());\n    }\n  };\n\n  /**\n   * When the player fires ended there should be no time left. Sadly\n   * this is not always the case, lets make it seem like that is the case\n   * for users.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  RemainingTimeDisplay.prototype.handleEnded = function handleEnded(event) {\n    if (!this.player_.duration()) {\n      return;\n    }\n    this.updateFormattedTime_(0);\n  };\n\n  return RemainingTimeDisplay;\n}(TimeDisplay);\n\n/**\n * The text that is added to the `RemainingTimeDisplay` for screen reader users.\n *\n * @type {string}\n * @private\n */\n\n\nRemainingTimeDisplay.prototype.labelText_ = 'Remaining Time';\n\n/**\n * The text that should display over the `RemainingTimeDisplay`s controls. Added to for localization.\n *\n * @type {string}\n * @private\n *\n * @deprecated in v7; controlText_ is not used in non-active display Components\n */\nRemainingTimeDisplay.prototype.controlText_ = 'Remaining Time';\n\nComponent.registerComponent('RemainingTimeDisplay', RemainingTimeDisplay);\n\n/**\n * @file live-display.js\n */\n// TODO - Future make it click to snap to live\n\n/**\n * Displays the live indicator when duration is Infinity.\n *\n * @extends Component\n */\n\nvar LiveDisplay = function (_Component) {\n  inherits(LiveDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LiveDisplay(player, options) {\n    classCallCheck(this, LiveDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.updateShowing();\n    _this.on(_this.player(), 'durationchange', _this.updateShowing);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LiveDisplay.prototype.createEl = function createEl$$1() {\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-live-control vjs-control'\n    });\n\n    this.contentEl_ = createEl('div', {\n      className: 'vjs-live-display',\n      innerHTML: '<span class=\"vjs-control-text\">' + this.localize('Stream Type') + '\\xA0</span>' + this.localize('LIVE')\n    }, {\n      'aria-live': 'off'\n    });\n\n    el.appendChild(this.contentEl_);\n    return el;\n  };\n\n  LiveDisplay.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Check the duration to see if the LiveDisplay should be showing or not. Then show/hide\n   * it accordingly\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#durationchange} event that caused this function to run.\n   *\n   * @listens Player#durationchange\n   */\n\n\n  LiveDisplay.prototype.updateShowing = function updateShowing(event) {\n    if (this.player().duration() === Infinity) {\n      this.show();\n    } else {\n      this.hide();\n    }\n  };\n\n  return LiveDisplay;\n}(Component);\n\nComponent.registerComponent('LiveDisplay', LiveDisplay);\n\n/**\n * @file slider.js\n */\n/**\n * The base functionality for a slider. Can be vertical or horizontal.\n * For instance the volume bar or the seek bar on a video is a slider.\n *\n * @extends Component\n */\n\nvar Slider = function (_Component) {\n  inherits(Slider, _Component);\n\n  /**\n   * Create an instance of this class\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function Slider(player, options) {\n    classCallCheck(this, Slider);\n\n    // Set property names to bar to match with the child Slider class is looking for\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.bar = _this.getChild(_this.options_.barName);\n\n    // Set a horizontal or vertical class on the slider depending on the slider type\n    _this.vertical(!!_this.options_.vertical);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Are controls are currently enabled for this slider or not.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  Slider.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Enable controls for this slider if they are disabled\n   */\n\n\n  Slider.prototype.enable = function enable() {\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on('mousedown', this.handleMouseDown);\n    this.on('touchstart', this.handleMouseDown);\n    this.on('focus', this.handleFocus);\n    this.on('blur', this.handleBlur);\n    this.on('click', this.handleClick);\n\n    this.on(this.player_, 'controlsvisible', this.update);\n\n    if (this.playerEvent) {\n      this.on(this.player_, this.playerEvent, this.update);\n    }\n\n    this.removeClass('disabled');\n    this.setAttribute('tabindex', 0);\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Disable controls for this slider if they are enabled\n   */\n\n\n  Slider.prototype.disable = function disable() {\n    if (!this.enabled()) {\n      return;\n    }\n    var doc = this.bar.el_.ownerDocument;\n\n    this.off('mousedown', this.handleMouseDown);\n    this.off('touchstart', this.handleMouseDown);\n    this.off('focus', this.handleFocus);\n    this.off('blur', this.handleBlur);\n    this.off('click', this.handleClick);\n    this.off(this.player_, 'controlsvisible', this.update);\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n    this.removeAttribute('tabindex');\n\n    this.addClass('disabled');\n\n    if (this.playerEvent) {\n      this.off(this.player_, this.playerEvent, this.update);\n    }\n    this.enabled_ = false;\n  };\n\n  /**\n   * Create the `Button`s DOM element.\n   *\n   * @param {string} type\n   *        Type of element to create.\n   *\n   * @param {Object} [props={}]\n   *        List of properties in Object form.\n   *\n   * @param {Object} [attributes={}]\n   *        list of attributes in Object form.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Slider.prototype.createEl = function createEl$$1(type) {\n    var props = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var attributes = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n    // Add the slider element class to all sub classes\n    props.className = props.className + ' vjs-slider';\n    props = assign({\n      tabIndex: 0\n    }, props);\n\n    attributes = assign({\n      'role': 'slider',\n      'aria-valuenow': 0,\n      'aria-valuemin': 0,\n      'aria-valuemax': 100,\n      'tabIndex': 0\n    }, attributes);\n\n    return _Component.prototype.createEl.call(this, type, props, attributes);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   * @fires Slider#slideractive\n   */\n\n\n  Slider.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.bar.el_.ownerDocument;\n\n    if (event.type === 'mousedown') {\n      event.preventDefault();\n    }\n    // Do not call preventDefault() on touchstart in Chrome\n    // to avoid console warnings. Use a 'touch-action: none' style\n    // instead to prevent unintented scrolling.\n    // https://developers.google.com/web/updates/2017/01/scrolling-intervention\n    if (event.type === 'touchstart' && !IS_CHROME) {\n      event.preventDefault();\n    }\n    blockTextSelection();\n\n    this.addClass('vjs-sliding');\n    /**\n     * Triggered when the slider is in an active state\n     *\n     * @event Slider#slideractive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('slideractive');\n\n    this.on(doc, 'mousemove', this.handleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchmove', this.handleMouseMove);\n    this.on(doc, 'touchend', this.handleMouseUp);\n\n    this.handleMouseMove(event);\n  };\n\n  /**\n   * Handle the `mousemove`, `touchmove`, and `mousedown` events on this `Slider`.\n   * The `mousemove` and `touchmove` events will only only trigger this function during\n   * `mousedown` and `touchstart`. This is due to {@link Slider#handleMouseDown} and\n   * {@link Slider#handleMouseUp}.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown`, `mousemove`, `touchstart`, or `touchmove` event that triggered\n   *        this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  Slider.prototype.handleMouseMove = function handleMouseMove(event) {};\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   * @fires Slider#sliderinactive\n   */\n\n\n  Slider.prototype.handleMouseUp = function handleMouseUp() {\n    var doc = this.bar.el_.ownerDocument;\n\n    unblockTextSelection();\n\n    this.removeClass('vjs-sliding');\n    /**\n     * Triggered when the slider is no longer in an active state.\n     *\n     * @event Slider#sliderinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('sliderinactive');\n\n    this.off(doc, 'mousemove', this.handleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchmove', this.handleMouseMove);\n    this.off(doc, 'touchend', this.handleMouseUp);\n\n    this.update();\n  };\n\n  /**\n   * Update the progress bar of the `Slider`.\n   *\n   * @returns {number}\n   *          The percentage of progress the progress bar represents as a\n   *          number from 0 to 1.\n   */\n\n\n  Slider.prototype.update = function update() {\n\n    // In VolumeBar init we have a setTimeout for update that pops and update\n    // to the end of the execution stack. The player is destroyed before then\n    // update will cause an error\n    if (!this.el_) {\n      return;\n    }\n\n    // If scrubbing, we could use a cached value to make the handle keep up\n    // with the user's mouse. On HTML5 browsers scrubbing is really smooth, but\n    // some flash players are slow, so we might want to utilize this later.\n    // var progress =  (this.player_.scrubbing()) ? this.player_.getCache().currentTime / this.player_.duration() : this.player_.currentTime() / this.player_.duration();\n    var progress = this.getPercent();\n    var bar = this.bar;\n\n    // If there's no bar...\n    if (!bar) {\n      return;\n    }\n\n    // Protect against no duration and other division issues\n    if (typeof progress !== 'number' || progress !== progress || progress < 0 || progress === Infinity) {\n      progress = 0;\n    }\n\n    // Convert to a percentage for setting\n    var percentage = (progress * 100).toFixed(2) + '%';\n    var style = bar.el().style;\n\n    // Set the new bar width or height\n    if (this.vertical()) {\n      style.height = percentage;\n    } else {\n      style.width = percentage;\n    }\n\n    return progress;\n  };\n\n  /**\n   * Calculate distance for slider\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @return {number}\n   *         The current position of the Slider.\n   *         - postition.x for vertical `Slider`s\n   *         - postition.y for horizontal `Slider`s\n   */\n\n\n  Slider.prototype.calculateDistance = function calculateDistance(event) {\n    var position = getPointerPosition(this.el_, event);\n\n    if (this.vertical()) {\n      return position.y;\n    }\n    return position.x;\n  };\n\n  /**\n   * Handle a `focus` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to run.\n   *\n   * @listens focus\n   */\n\n\n  Slider.prototype.handleFocus = function handleFocus() {\n    this.on(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Handle a `keydown` event on the `Slider`. Watches for left, rigth, up, and down\n   * arrow keys. This function will only be called when the slider has focus. See\n   * {@link Slider#handleFocus} and {@link Slider#handleBlur}.\n   *\n   * @param {EventTarget~Event} event\n   *        the `keydown` event that caused this function to run.\n   *\n   * @listens keydown\n   */\n\n\n  Slider.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepBack();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepForward();\n    }\n  };\n\n  /**\n   * Handle a `blur` event on this `Slider`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to run.\n   *\n   * @listens blur\n   */\n\n  Slider.prototype.handleBlur = function handleBlur() {\n    this.off(this.bar.el_.ownerDocument, 'keydown', this.handleKeyPress);\n  };\n\n  /**\n   * Listener for click events on slider, used to prevent clicks\n   *   from bubbling up to parent elements like button menus.\n   *\n   * @param {Object} event\n   *        Event that caused this object to run\n   */\n\n\n  Slider.prototype.handleClick = function handleClick(event) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  };\n\n  /**\n   * Get/set if slider is horizontal for vertical\n   *\n   * @param {boolean} [bool]\n   *        - true if slider is vertical,\n   *        - false is horizontal\n   *\n   * @return {boolean}\n   *         - true if slider is vertical, and getting\n   *         - false if the slider is horizontal, and getting\n   */\n\n\n  Slider.prototype.vertical = function vertical(bool) {\n    if (bool === undefined) {\n      return this.vertical_ || false;\n    }\n\n    this.vertical_ = !!bool;\n\n    if (this.vertical_) {\n      this.addClass('vjs-slider-vertical');\n    } else {\n      this.addClass('vjs-slider-horizontal');\n    }\n  };\n\n  return Slider;\n}(Component);\n\nComponent.registerComponent('Slider', Slider);\n\n/**\n * @file load-progress-bar.js\n */\n/**\n * Shows loading progress\n *\n * @extends Component\n */\n\nvar LoadProgressBar = function (_Component) {\n  inherits(LoadProgressBar, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function LoadProgressBar(player, options) {\n    classCallCheck(this, LoadProgressBar);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.partEls_ = [];\n    _this.on(player, 'progress', _this.update);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  LoadProgressBar.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-load-progress',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Loaded') + '</span>: 0%</span>'\n    });\n  };\n\n  LoadProgressBar.prototype.dispose = function dispose() {\n    this.partEls_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Update progress bar\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `progress` event that caused this function to run.\n   *\n   * @listens Player#progress\n   */\n\n\n  LoadProgressBar.prototype.update = function update(event) {\n    var buffered = this.player_.buffered();\n    var duration = this.player_.duration();\n    var bufferedEnd = this.player_.bufferedEnd();\n    var children = this.partEls_;\n\n    // get the percent width of a time compared to the total end\n    var percentify = function percentify(time, end) {\n      // no NaN\n      var percent = time / end || 0;\n\n      return (percent >= 1 ? 1 : percent) * 100 + '%';\n    };\n\n    // update the width of the progress bar\n    this.el_.style.width = percentify(bufferedEnd, duration);\n\n    // add child elements to represent the individual buffered time ranges\n    for (var i = 0; i < buffered.length; i++) {\n      var start = buffered.start(i);\n      var end = buffered.end(i);\n      var part = children[i];\n\n      if (!part) {\n        part = this.el_.appendChild(createEl());\n        children[i] = part;\n      }\n\n      // set the percent based on the width of the progress bar (bufferedEnd)\n      part.style.left = percentify(start, bufferedEnd);\n      part.style.width = percentify(end - start, bufferedEnd);\n    }\n\n    // remove unused buffered range elements\n    for (var _i = children.length; _i > buffered.length; _i--) {\n      this.el_.removeChild(children[_i - 1]);\n    }\n    children.length = buffered.length;\n  };\n\n  return LoadProgressBar;\n}(Component);\n\nComponent.registerComponent('LoadProgressBar', LoadProgressBar);\n\n/**\n * @file time-tooltip.js\n */\n/**\n * Time tooltips display a time above the progress bar.\n *\n * @extends Component\n */\n\nvar TimeTooltip = function (_Component) {\n  inherits(TimeTooltip, _Component);\n\n  function TimeTooltip() {\n    classCallCheck(this, TimeTooltip);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the time tooltip DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  TimeTooltip.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-time-tooltip'\n    });\n  };\n\n  /**\n   * Updates the position of the time tooltip relative to the `SeekBar`.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  TimeTooltip.prototype.update = function update(seekBarRect, seekBarPoint, content) {\n    var tooltipRect = getBoundingClientRect(this.el_);\n    var playerRect = getBoundingClientRect(this.player_.el());\n    var seekBarPointPx = seekBarRect.width * seekBarPoint;\n\n    // do nothing if either rect isn't available\n    // for example, if the player isn't in the DOM for testing\n    if (!playerRect || !tooltipRect) {\n      return;\n    }\n\n    // This is the space left of the `seekBarPoint` available within the bounds\n    // of the player. We calculate any gap between the left edge of the player\n    // and the left edge of the `SeekBar` and add the number of pixels in the\n    // `SeekBar` before hitting the `seekBarPoint`\n    var spaceLeftOfPoint = seekBarRect.left - playerRect.left + seekBarPointPx;\n\n    // This is the space right of the `seekBarPoint` available within the bounds\n    // of the player. We calculate the number of pixels from the `seekBarPoint`\n    // to the right edge of the `SeekBar` and add to that any gap between the\n    // right edge of the `SeekBar` and the player.\n    var spaceRightOfPoint = seekBarRect.width - seekBarPointPx + (playerRect.right - seekBarRect.right);\n\n    // This is the number of pixels by which the tooltip will need to be pulled\n    // further to the right to center it over the `seekBarPoint`.\n    var pullTooltipBy = tooltipRect.width / 2;\n\n    // Adjust the `pullTooltipBy` distance to the left or right depending on\n    // the results of the space calculations above.\n    if (spaceLeftOfPoint < pullTooltipBy) {\n      pullTooltipBy += pullTooltipBy - spaceLeftOfPoint;\n    } else if (spaceRightOfPoint < pullTooltipBy) {\n      pullTooltipBy = spaceRightOfPoint;\n    }\n\n    // Due to the imprecision of decimal/ratio based calculations and varying\n    // rounding behaviors, there are cases where the spacing adjustment is off\n    // by a pixel or two. This adds insurance to these calculations.\n    if (pullTooltipBy < 0) {\n      pullTooltipBy = 0;\n    } else if (pullTooltipBy > tooltipRect.width) {\n      pullTooltipBy = tooltipRect.width;\n    }\n\n    this.el_.style.right = '-' + pullTooltipBy + 'px';\n    textContent(this.el_, content);\n  };\n\n  return TimeTooltip;\n}(Component);\n\nComponent.registerComponent('TimeTooltip', TimeTooltip);\n\n/**\n * @file play-progress-bar.js\n */\n/**\n * Used by {@link SeekBar} to display media playback progress as part of the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar PlayProgressBar = function (_Component) {\n  inherits(PlayProgressBar, _Component);\n\n  function PlayProgressBar() {\n    classCallCheck(this, PlayProgressBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  PlayProgressBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-play-progress vjs-slider-bar',\n      innerHTML: '<span class=\"vjs-control-text\"><span>' + this.localize('Progress') + '</span>: 0%</span>'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  PlayProgressBar.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var time = _this2.player_.scrubbing() ? _this2.player_.getCache().currentTime : _this2.player_.currentTime();\n\n      var content = formatTime(time, _this2.player_.duration());\n      var timeTooltip = _this2.getChild('timeTooltip');\n\n      if (timeTooltip) {\n        timeTooltip.update(seekBarRect, seekBarPoint, content);\n      }\n    });\n  };\n\n  return PlayProgressBar;\n}(Component);\n\n/**\n * Default options for {@link PlayProgressBar}.\n *\n * @type {Object}\n * @private\n */\n\n\nPlayProgressBar.prototype.options_ = {\n  children: []\n};\n\n// Time tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  PlayProgressBar.prototype.options_.children.push('timeTooltip');\n}\n\nComponent.registerComponent('PlayProgressBar', PlayProgressBar);\n\n/**\n * @file mouse-time-display.js\n */\n/**\n * The {@link MouseTimeDisplay} component tracks mouse movement over the\n * {@link ProgressControl}. It displays an indicator and a {@link TimeTooltip}\n * indicating the time which is represented by a given point in the\n * {@link ProgressControl}.\n *\n * @extends Component\n */\n\nvar MouseTimeDisplay = function (_Component) {\n  inherits(MouseTimeDisplay, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The {@link Player} that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MouseTimeDisplay(player, options) {\n    classCallCheck(this, MouseTimeDisplay);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.update = throttle(bind(_this, _this.update), 25);\n    return _this;\n  }\n\n  /**\n   * Create the DOM element for this class.\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  MouseTimeDisplay.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-mouse-display'\n    });\n  };\n\n  /**\n   * Enqueues updates to its own DOM as well as the DOM of its\n   * {@link TimeTooltip} child.\n   *\n   * @param {Object} seekBarRect\n   *        The `ClientRect` for the {@link SeekBar} element.\n   *\n   * @param {number} seekBarPoint\n   *        A number from 0 to 1, representing a horizontal reference point\n   *        from the left edge of the {@link SeekBar}\n   */\n\n\n  MouseTimeDisplay.prototype.update = function update(seekBarRect, seekBarPoint) {\n    var _this2 = this;\n\n    // If there is an existing rAF ID, cancel it so we don't over-queue.\n    if (this.rafId_) {\n      this.cancelAnimationFrame(this.rafId_);\n    }\n\n    this.rafId_ = this.requestAnimationFrame(function () {\n      var duration = _this2.player_.duration();\n      var content = formatTime(seekBarPoint * duration, duration);\n\n      _this2.el_.style.left = seekBarRect.width * seekBarPoint + 'px';\n      _this2.getChild('timeTooltip').update(seekBarRect, seekBarPoint, content);\n    });\n  };\n\n  return MouseTimeDisplay;\n}(Component);\n\n/**\n * Default options for `MouseTimeDisplay`\n *\n * @type {Object}\n * @private\n */\n\n\nMouseTimeDisplay.prototype.options_ = {\n  children: ['timeTooltip']\n};\n\nComponent.registerComponent('MouseTimeDisplay', MouseTimeDisplay);\n\n/**\n * @file seek-bar.js\n */\n// The number of seconds the `step*` functions move the timeline.\nvar STEP_SECONDS = 5;\n\n// The interval at which the bar should update as it progresses.\nvar UPDATE_REFRESH_INTERVAL = 30;\n\n/**\n * Seek bar and container for the progress bars. Uses {@link PlayProgressBar}\n * as its `bar`.\n *\n * @extends Slider\n */\n\nvar SeekBar = function (_Slider) {\n  inherits(SeekBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function SeekBar(player, options) {\n    classCallCheck(this, SeekBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.setEventHandlers_();\n    return _this;\n  }\n\n  /**\n   * Sets the event handlers\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.setEventHandlers_ = function setEventHandlers_() {\n    var _this2 = this;\n\n    this.update = throttle(bind(this, this.update), UPDATE_REFRESH_INTERVAL);\n\n    this.on(this.player_, 'timeupdate', this.update);\n    this.on(this.player_, 'ended', this.handleEnded);\n\n    // when playing, let's ensure we smoothly update the play progress bar\n    // via an interval\n    this.updateInterval = null;\n\n    this.on(this.player_, ['playing'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n\n      _this2.updateInterval = _this2.setInterval(function () {\n        _this2.requestAnimationFrame(function () {\n          _this2.update();\n        });\n      }, UPDATE_REFRESH_INTERVAL);\n    });\n\n    this.on(this.player_, ['ended', 'pause', 'waiting'], function () {\n      _this2.clearInterval(_this2.updateInterval);\n    });\n\n    this.on(this.player_, ['timeupdate', 'ended'], this.update);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  SeekBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-holder'\n    }, {\n      'aria-label': this.localize('Progress Bar')\n    });\n  };\n\n  /**\n   * This function updates the play progress bar and accessiblity\n   * attributes to whatever is passed in.\n   *\n   * @param {number} currentTime\n   *        The currentTime value that should be used for accessiblity\n   *\n   * @param {number} percent\n   *        The percentage as a decimal that the bar should be filled from 0-1.\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.update_ = function update_(currentTime, percent) {\n    var duration = this.player_.duration();\n\n    // machine readable value of progress bar (percentage complete)\n    this.el_.setAttribute('aria-valuenow', (percent * 100).toFixed(2));\n\n    // human readable value of progress bar (time complete)\n    this.el_.setAttribute('aria-valuetext', this.localize('progress bar timing: currentTime={1} duration={2}', [formatTime(currentTime, duration), formatTime(duration, duration)], '{1} of {2}'));\n\n    // Update the `PlayProgressBar`.\n    this.bar.update(getBoundingClientRect(this.el_), percent);\n  };\n\n  /**\n   * Update the seek bar's UI.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#timeupdate\n   *\n   * @returns {number}\n   *          The current percent at a number from 0-1\n   */\n\n\n  SeekBar.prototype.update = function update(event) {\n    var percent = _Slider.prototype.update.call(this);\n\n    this.update_(this.getCurrentTime_(), percent);\n    return percent;\n  };\n\n  /**\n   * Get the value of current time but allows for smooth scrubbing,\n   * when player can't keep up.\n   *\n   * @return {number}\n   *         The current time value to display\n   *\n   * @private\n   */\n\n\n  SeekBar.prototype.getCurrentTime_ = function getCurrentTime_() {\n    return this.player_.scrubbing() ? this.player_.getCache().currentTime : this.player_.currentTime();\n  };\n\n  /**\n   * We want the seek bar to be full on ended\n   * no matter what the actual internal values are. so we force it.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `timeupdate` or `ended` event that caused this to run.\n   *\n   * @listens Player#ended\n   */\n\n\n  SeekBar.prototype.handleEnded = function handleEnded(event) {\n    this.update_(this.player_.duration(), 1);\n  };\n\n  /**\n   * Get the percentage of media played so far.\n   *\n   * @return {number}\n   *         The percentage of media played so far (0 to 1).\n   */\n\n\n  SeekBar.prototype.getPercent = function getPercent() {\n    var percent = this.getCurrentTime_() / this.player_.duration();\n\n    return percent >= 1 ? 1 : percent;\n  };\n\n  /**\n   * Handle mouse down on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  SeekBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    event.stopPropagation();\n    this.player_.scrubbing(true);\n\n    this.videoWasPlaying = !this.player_.paused();\n    this.player_.pause();\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle mouse move on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this to run.\n   *\n   * @listens mousemove\n   */\n\n\n  SeekBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    var newTime = this.calculateDistance(event) * this.player_.duration();\n\n    // Don't let video end while scrubbing.\n    if (newTime === this.player_.duration()) {\n      newTime = newTime - 0.1;\n    }\n\n    // Set new time (tell player to seek to new time)\n    this.player_.currentTime(newTime);\n  };\n\n  SeekBar.prototype.enable = function enable() {\n    _Slider.prototype.enable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.show();\n  };\n\n  SeekBar.prototype.disable = function disable() {\n    _Slider.prototype.disable.call(this);\n    var mouseTimeDisplay = this.getChild('mouseTimeDisplay');\n\n    if (!mouseTimeDisplay) {\n      return;\n    }\n\n    mouseTimeDisplay.hide();\n  };\n\n  /**\n   * Handle mouse up on seek bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mouseup` event that caused this to run.\n   *\n   * @listens mouseup\n   */\n\n\n  SeekBar.prototype.handleMouseUp = function handleMouseUp(event) {\n    _Slider.prototype.handleMouseUp.call(this, event);\n\n    // Stop event propagation to prevent double fire in progress-control.js\n    if (event) {\n      event.stopPropagation();\n    }\n    this.player_.scrubbing(false);\n\n    /**\n     * Trigger timeupdate because we're done seeking and the time has changed.\n     * This is particularly useful for if the player is paused to time the time displays.\n     *\n     * @event Tech#timeupdate\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger({ type: 'timeupdate', target: this, manuallyTriggered: true });\n    if (this.videoWasPlaying) {\n      silencePromise(this.player_.play());\n    }\n  };\n\n  /**\n   * Move more quickly fast forward for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepForward = function stepForward() {\n    this.player_.currentTime(this.player_.currentTime() + STEP_SECONDS);\n  };\n\n  /**\n   * Move more quickly rewind for keyboard-only users\n   */\n\n\n  SeekBar.prototype.stepBack = function stepBack() {\n    this.player_.currentTime(this.player_.currentTime() - STEP_SECONDS);\n  };\n\n  /**\n   * Toggles the playback state of the player\n   * This gets called when enter or space is used on the seekbar\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called\n   *\n   */\n\n\n  SeekBar.prototype.handleAction = function handleAction(event) {\n    if (this.player_.paused()) {\n      this.player_.play();\n    } else {\n      this.player_.pause();\n    }\n  };\n\n  /**\n   * Called when this SeekBar has focus and a key gets pressed down. By\n   * default it will call `this.handleAction` when the key is space or enter.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  SeekBar.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Support Space (32) or Enter (13) key operation to fire a click event\n    if (event.which === 32 || event.which === 13) {\n      event.preventDefault();\n      this.handleAction(event);\n    } else if (_Slider.prototype.handleKeyPress) {\n\n      // Pass keypress handling up for unsupported keys\n      _Slider.prototype.handleKeyPress.call(this, event);\n    }\n  };\n\n  return SeekBar;\n}(Slider);\n\n/**\n * Default options for the `SeekBar`\n *\n * @type {Object}\n * @private\n */\n\n\nSeekBar.prototype.options_ = {\n  children: ['loadProgressBar', 'playProgressBar'],\n  barName: 'playProgressBar'\n};\n\n// MouseTimeDisplay tooltips should not be added to a player on mobile devices or IE8\nif ((!IE_VERSION || IE_VERSION > 8) && !IS_IOS && !IS_ANDROID) {\n  SeekBar.prototype.options_.children.splice(1, 0, 'mouseTimeDisplay');\n}\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nSeekBar.prototype.playerEvent = 'timeupdate';\n\nComponent.registerComponent('SeekBar', SeekBar);\n\n/**\n * @file progress-control.js\n */\n/**\n * The Progress Control component contains the seek bar, load progress,\n * and play progress.\n *\n * @extends Component\n */\n\nvar ProgressControl = function (_Component) {\n  inherits(ProgressControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ProgressControl(player, options) {\n    classCallCheck(this, ProgressControl);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.handleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n    _this.throttledHandleMouseSeek = throttle(bind(_this, _this.handleMouseSeek), 25);\n\n    _this.enable();\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  ProgressControl.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-progress-control vjs-control'\n    });\n  };\n\n  /**\n   * When the mouse moves over the `ProgressControl`, the pointer position\n   * gets passed down to the `MouseTimeDisplay` component.\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   */\n\n\n  ProgressControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      var mouseTimeDisplay = seekBar.getChild('mouseTimeDisplay');\n      var seekBarEl = seekBar.el();\n      var seekBarRect = getBoundingClientRect(seekBarEl);\n      var seekBarPoint = getPointerPosition(seekBarEl, event).x;\n\n      // The default skin has a gap on either side of the `SeekBar`. This means\n      // that it's possible to trigger this behavior outside the boundaries of\n      // the `SeekBar`. This ensures we stay within it at all times.\n      if (seekBarPoint > 1) {\n        seekBarPoint = 1;\n      } else if (seekBarPoint < 0) {\n        seekBarPoint = 0;\n      }\n\n      if (mouseTimeDisplay) {\n        mouseTimeDisplay.update(seekBarRect, seekBarPoint);\n      }\n    }\n  };\n\n  /**\n   * A throttled version of the {@link ProgressControl#handleMouseSeek} listener.\n   *\n   * @method ProgressControl#throttledHandleMouseSeek\n   * @param {EventTarget~Event} event\n   *        The `mousemove` event that caused this function to run.\n   *\n   * @listen mousemove\n   * @listen touchmove\n   */\n\n  /**\n   * Handle `mousemove` or `touchmove` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousemove\n   * @listens touchmove\n   */\n\n\n  ProgressControl.prototype.handleMouseSeek = function handleMouseSeek(event) {\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseMove(event);\n    }\n  };\n\n  /**\n   * Are controls are currently enabled for this progress control.\n   *\n   * @return {boolean}\n   *         true if controls are enabled, false otherwise\n   */\n\n\n  ProgressControl.prototype.enabled = function enabled() {\n    return this.enabled_;\n  };\n\n  /**\n   * Disable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.disable = function disable() {\n    this.children().forEach(function (child) {\n      return child.disable && child.disable();\n    });\n\n    if (!this.enabled()) {\n      return;\n    }\n\n    this.off(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.off(this.el_, 'mousemove', this.handleMouseMove);\n    this.handleMouseUp();\n\n    this.addClass('disabled');\n\n    this.enabled_ = false;\n  };\n\n  /**\n   * Enable all controls on the progress control and its children\n   */\n\n\n  ProgressControl.prototype.enable = function enable() {\n    this.children().forEach(function (child) {\n      return child.enable && child.enable();\n    });\n\n    if (this.enabled()) {\n      return;\n    }\n\n    this.on(['mousedown', 'touchstart'], this.handleMouseDown);\n    this.on(this.el_, 'mousemove', this.handleMouseMove);\n    this.removeClass('disabled');\n\n    this.enabled_ = true;\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  ProgressControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseDown(event);\n    }\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.on(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `ProgressControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  ProgressControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n    var seekBar = this.getChild('seekBar');\n\n    if (seekBar) {\n      seekBar.handleMouseUp(event);\n    }\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseSeek);\n    this.off(doc, 'touchmove', this.throttledHandleMouseSeek);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  return ProgressControl;\n}(Component);\n\n/**\n * Default options for `ProgressControl`\n *\n * @type {Object}\n * @private\n */\n\n\nProgressControl.prototype.options_ = {\n  children: ['seekBar']\n};\n\nComponent.registerComponent('ProgressControl', ProgressControl);\n\n/**\n * @file fullscreen-toggle.js\n */\n/**\n * Toggle fullscreen video\n *\n * @extends Button\n */\n\nvar FullscreenToggle = function (_Button) {\n  inherits(FullscreenToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function FullscreenToggle(player, options) {\n    classCallCheck(this, FullscreenToggle);\n\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    _this.on(player, 'fullscreenchange', _this.handleFullscreenChange);\n\n    if (document[FullscreenApi.fullscreenEnabled] === false) {\n      _this.disable();\n    }\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  FullscreenToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-fullscreen-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Handles fullscreenchange on the player and change control text accordingly.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#fullscreenchange} event that caused this function to be\n   *        called.\n   *\n   * @listens Player#fullscreenchange\n   */\n\n\n  FullscreenToggle.prototype.handleFullscreenChange = function handleFullscreenChange(event) {\n    if (this.player_.isFullscreen()) {\n      this.controlText('Non-Fullscreen');\n    } else {\n      this.controlText('Fullscreen');\n    }\n  };\n\n  /**\n   * This gets called when an `FullscreenToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  FullscreenToggle.prototype.handleClick = function handleClick(event) {\n    if (!this.player_.isFullscreen()) {\n      this.player_.requestFullscreen();\n    } else {\n      this.player_.exitFullscreen();\n    }\n  };\n\n  return FullscreenToggle;\n}(Button);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nFullscreenToggle.prototype.controlText_ = 'Fullscreen';\n\nComponent.registerComponent('FullscreenToggle', FullscreenToggle);\n\n/**\n * Check if volume control is supported and if it isn't hide the\n * `Component` that was passed  using the `vjs-hidden` class.\n *\n * @param {Component} self\n *        The component that should be hidden if volume is unsupported\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkVolumeSupport = function checkVolumeSupport(self, player) {\n  // hide volume controls when they're not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresVolumeControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresVolumeControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file volume-level.js\n */\n/**\n * Shows volume level\n *\n * @extends Component\n */\n\nvar VolumeLevel = function (_Component) {\n  inherits(VolumeLevel, _Component);\n\n  function VolumeLevel() {\n    classCallCheck(this, VolumeLevel);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  VolumeLevel.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-level',\n      innerHTML: '<span class=\"vjs-control-text\"></span>'\n    });\n  };\n\n  return VolumeLevel;\n}(Component);\n\nComponent.registerComponent('VolumeLevel', VolumeLevel);\n\n/**\n * @file volume-bar.js\n */\n// Required children\n/**\n * The bar that contains the volume level and can be clicked on to adjust the level\n *\n * @extends Slider\n */\n\nvar VolumeBar = function (_Slider) {\n  inherits(VolumeBar, _Slider);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function VolumeBar(player, options) {\n    classCallCheck(this, VolumeBar);\n\n    var _this = possibleConstructorReturn(this, _Slider.call(this, player, options));\n\n    _this.on('slideractive', _this.updateLastVolume_);\n    _this.on(player, 'volumechange', _this.updateARIAAttributes);\n    player.ready(function () {\n      return _this.updateARIAAttributes();\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeBar.prototype.createEl = function createEl$$1() {\n    return _Slider.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-bar vjs-slider-bar'\n    }, {\n      'aria-label': this.localize('Volume Level'),\n      'aria-live': 'polite'\n    });\n  };\n\n  /**\n   * Handle mouse down on volume bar\n   *\n   * @param {EventTarget~Event} event\n   *        The `mousedown` event that caused this to run.\n   *\n   * @listens mousedown\n   */\n\n\n  VolumeBar.prototype.handleMouseDown = function handleMouseDown(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    _Slider.prototype.handleMouseDown.call(this, event);\n  };\n\n  /**\n   * Handle movement events on the {@link VolumeMenuButton}.\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run.\n   *\n   * @listens mousemove\n   */\n\n\n  VolumeBar.prototype.handleMouseMove = function handleMouseMove(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    this.checkMuted();\n    this.player_.volume(this.calculateDistance(event));\n  };\n\n  /**\n   * If the player is muted unmute it.\n   */\n\n\n  VolumeBar.prototype.checkMuted = function checkMuted() {\n    if (this.player_.muted()) {\n      this.player_.muted(false);\n    }\n  };\n\n  /**\n   * Get percent of volume level\n   *\n   * @return {number}\n   *         Volume level percent as a decimal number.\n   */\n\n\n  VolumeBar.prototype.getPercent = function getPercent() {\n    if (this.player_.muted()) {\n      return 0;\n    }\n    return this.player_.volume();\n  };\n\n  /**\n   * Increase volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepForward = function stepForward() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() + 0.1);\n  };\n\n  /**\n   * Decrease volume level for keyboard users\n   */\n\n\n  VolumeBar.prototype.stepBack = function stepBack() {\n    this.checkMuted();\n    this.player_.volume(this.player_.volume() - 0.1);\n  };\n\n  /**\n   * Update ARIA accessibility attributes\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `volumechange` event that caused this function to run.\n   *\n   * @listens Player#volumechange\n   */\n\n\n  VolumeBar.prototype.updateARIAAttributes = function updateARIAAttributes(event) {\n    var ariaValue = this.player_.muted() ? 0 : this.volumeAsPercentage_();\n\n    this.el_.setAttribute('aria-valuenow', ariaValue);\n    this.el_.setAttribute('aria-valuetext', ariaValue + '%');\n  };\n\n  /**\n   * Returns the current value of the player volume as a percentage\n   *\n   * @private\n   */\n\n\n  VolumeBar.prototype.volumeAsPercentage_ = function volumeAsPercentage_() {\n    return Math.round(this.player_.volume() * 100);\n  };\n\n  /**\n   * When user starts dragging the VolumeBar, store the volume and listen for\n   * the end of the drag. When the drag ends, if the volume was set to zero,\n   * set lastVolume to the stored volume.\n   *\n   * @listens slideractive\n   * @private\n   */\n\n\n  VolumeBar.prototype.updateLastVolume_ = function updateLastVolume_() {\n    var _this2 = this;\n\n    var volumeBeforeDrag = this.player_.volume();\n\n    this.one('sliderinactive', function () {\n      if (_this2.player_.volume() === 0) {\n        _this2.player_.lastVolume_(volumeBeforeDrag);\n      }\n    });\n  };\n\n  return VolumeBar;\n}(Slider);\n\n/**\n * Default options for the `VolumeBar`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeBar.prototype.options_ = {\n  children: ['volumeLevel'],\n  barName: 'volumeLevel'\n};\n\n/**\n * Call the update event for this Slider when this event happens on the player.\n *\n * @type {string}\n */\nVolumeBar.prototype.playerEvent = 'volumechange';\n\nComponent.registerComponent('VolumeBar', VolumeBar);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * The component for controlling the volume level\n *\n * @extends Component\n */\n\nvar VolumeControl = function (_Component) {\n  inherits(VolumeControl, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumeControl(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumeControl);\n\n    options.vertical = options.vertical || false;\n\n    // Pass the vertical option down to the VolumeBar if\n    // the VolumeBar is turned on.\n    if (typeof options.volumeBar === 'undefined' || isPlain(options.volumeBar)) {\n      options.volumeBar = options.volumeBar || {};\n      options.volumeBar.vertical = options.vertical;\n    }\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    checkVolumeSupport(_this, player);\n\n    _this.throttledHandleMouseMove = throttle(bind(_this, _this.handleMouseMove), 25);\n\n    _this.on('mousedown', _this.handleMouseDown);\n    _this.on('touchstart', _this.handleMouseDown);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) or in focus we do not want to hide the VolumeBar\n    _this.on(_this.volumeBar, ['focus', 'slideractive'], function () {\n      _this.volumeBar.addClass('vjs-slider-active');\n      _this.addClass('vjs-slider-active');\n      _this.trigger('slideractive');\n    });\n\n    _this.on(_this.volumeBar, ['blur', 'sliderinactive'], function () {\n      _this.volumeBar.removeClass('vjs-slider-active');\n      _this.removeClass('vjs-slider-active');\n      _this.trigger('sliderinactive');\n    });\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumeControl.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-horizontal';\n\n    if (this.options_.vertical) {\n      orientationClass = 'vjs-volume-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-control vjs-control ' + orientationClass\n    });\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseDown = function handleMouseDown(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.on(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.on(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.on(doc, 'mouseup', this.handleMouseUp);\n    this.on(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mouseup` or `touchend` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mouseup` or `touchend` event that triggered this function.\n   *\n   * @listens touchend\n   * @listens mouseup\n   */\n\n\n  VolumeControl.prototype.handleMouseUp = function handleMouseUp(event) {\n    var doc = this.el_.ownerDocument;\n\n    this.off(doc, 'mousemove', this.throttledHandleMouseMove);\n    this.off(doc, 'touchmove', this.throttledHandleMouseMove);\n    this.off(doc, 'mouseup', this.handleMouseUp);\n    this.off(doc, 'touchend', this.handleMouseUp);\n  };\n\n  /**\n   * Handle `mousedown` or `touchstart` events on the `VolumeControl`.\n   *\n   * @param {EventTarget~Event} event\n   *        `mousedown` or `touchstart` event that triggered this function\n   *\n   * @listens mousedown\n   * @listens touchstart\n   */\n\n\n  VolumeControl.prototype.handleMouseMove = function handleMouseMove(event) {\n    this.volumeBar.handleMouseMove(event);\n  };\n\n  return VolumeControl;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumeControl.prototype.options_ = {\n  children: ['volumeBar']\n};\n\nComponent.registerComponent('VolumeControl', VolumeControl);\n\n/**\n * Check if muting volume is supported and if it isn't hide the mute toggle\n * button.\n *\n * @param {Component} self\n *        A reference to the mute toggle button\n *\n * @param {Player} player\n *        A reference to the player\n *\n * @private\n */\nvar checkMuteSupport = function checkMuteSupport(self, player) {\n  // hide mute toggle button if it's not supported by the current tech\n  if (player.tech_ && !player.tech_.featuresMuteControl) {\n    self.addClass('vjs-hidden');\n  }\n\n  self.on(player, 'loadstart', function () {\n    if (!player.tech_.featuresMuteControl) {\n      self.addClass('vjs-hidden');\n    } else {\n      self.removeClass('vjs-hidden');\n    }\n  });\n};\n\n/**\n * @file mute-toggle.js\n */\n/**\n * A button component for muting the audio.\n *\n * @extends Button\n */\n\nvar MuteToggle = function (_Button) {\n  inherits(MuteToggle, _Button);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function MuteToggle(player, options) {\n    classCallCheck(this, MuteToggle);\n\n    // hide this control if volume support is missing\n    var _this = possibleConstructorReturn(this, _Button.call(this, player, options));\n\n    checkMuteSupport(_this, player);\n\n    _this.on(player, ['loadstart', 'volumechange'], _this.update);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MuteToggle.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-mute-control ' + _Button.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * This gets called when an `MuteToggle` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MuteToggle.prototype.handleClick = function handleClick(event) {\n    var vol = this.player_.volume();\n    var lastVolume = this.player_.lastVolume_();\n\n    if (vol === 0) {\n      var volumeToSet = lastVolume < 0.1 ? 0.1 : lastVolume;\n\n      this.player_.volume(volumeToSet);\n      this.player_.muted(false);\n    } else {\n      this.player_.muted(this.player_.muted() ? false : true);\n    }\n  };\n\n  /**\n   * Update the `MuteToggle` button based on the state of `volume` and `muted`\n   * on the player.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link Player#loadstart} event if this function was called\n   *        through an event.\n   *\n   * @listens Player#loadstart\n   * @listens Player#volumechange\n   */\n\n\n  MuteToggle.prototype.update = function update(event) {\n    this.updateIcon_();\n    this.updateControlText_();\n  };\n\n  /**\n   * Update the appearance of the `MuteToggle` icon.\n   *\n   * Possible states (given `level` variable below):\n   * - 0: crossed out\n   * - 1: zero bars of volume\n   * - 2: one bar of volume\n   * - 3: two bars of volume\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateIcon_ = function updateIcon_() {\n    var vol = this.player_.volume();\n    var level = 3;\n\n    // in iOS when a player is loaded with muted attribute\n    // and volume is changed with a native mute button\n    // we want to make sure muted state is updated\n    if (IS_IOS) {\n      this.player_.muted(this.player_.tech_.el_.muted);\n    }\n\n    if (vol === 0 || this.player_.muted()) {\n      level = 0;\n    } else if (vol < 0.33) {\n      level = 1;\n    } else if (vol < 0.67) {\n      level = 2;\n    }\n\n    // TODO improve muted icon classes\n    for (var i = 0; i < 4; i++) {\n      removeClass(this.el_, 'vjs-vol-' + i);\n    }\n    addClass(this.el_, 'vjs-vol-' + level);\n  };\n\n  /**\n   * If `muted` has changed on the player, update the control text\n   * (`title` attribute on `vjs-mute-control` element and content of\n   * `vjs-control-text` element).\n   *\n   * @private\n   */\n\n\n  MuteToggle.prototype.updateControlText_ = function updateControlText_() {\n    var soundOff = this.player_.muted() || this.player_.volume() === 0;\n    var text = soundOff ? 'Unmute' : 'Mute';\n\n    if (this.controlText() !== text) {\n      this.controlText(text);\n    }\n  };\n\n  return MuteToggle;\n}(Button);\n\n/**\n * The text that should display over the `MuteToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nMuteToggle.prototype.controlText_ = 'Mute';\n\nComponent.registerComponent('MuteToggle', MuteToggle);\n\n/**\n * @file volume-control.js\n */\n// Required children\n/**\n * A Component to contain the MuteToggle and VolumeControl so that\n * they can work together.\n *\n * @extends Component\n */\n\nvar VolumePanel = function (_Component) {\n  inherits(VolumePanel, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function VolumePanel(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, VolumePanel);\n\n    if (typeof options.inline !== 'undefined') {\n      options.inline = options.inline;\n    } else {\n      options.inline = true;\n    }\n\n    // pass the inline option down to the VolumeControl as vertical if\n    // the VolumeControl is on.\n    if (typeof options.volumeControl === 'undefined' || isPlain(options.volumeControl)) {\n      options.volumeControl = options.volumeControl || {};\n      options.volumeControl.vertical = !options.inline;\n    }\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.on(player, ['loadstart'], _this.volumePanelState_);\n\n    // while the slider is active (the mouse has been pressed down and\n    // is dragging) we do not want to hide the VolumeBar\n    _this.on(_this.volumeControl, ['slideractive'], _this.sliderActive_);\n\n    _this.on(_this.volumeControl, ['sliderinactive'], _this.sliderInactive_);\n    return _this;\n  }\n\n  /**\n   * Add vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#slideractive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderActive_ = function sliderActive_() {\n    this.addClass('vjs-slider-active');\n  };\n\n  /**\n   * Removes vjs-slider-active class to the VolumePanel\n   *\n   * @listens VolumeControl#sliderinactive\n   * @private\n   */\n\n\n  VolumePanel.prototype.sliderInactive_ = function sliderInactive_() {\n    this.removeClass('vjs-slider-active');\n  };\n\n  /**\n   * Adds vjs-hidden or vjs-mute-toggle-only to the VolumePanel\n   * depending on MuteToggle and VolumeControl state\n   *\n   * @listens Player#loadstart\n   * @private\n   */\n\n\n  VolumePanel.prototype.volumePanelState_ = function volumePanelState_() {\n    // hide volume panel if neither volume control or mute toggle\n    // are displayed\n    if (this.volumeControl.hasClass('vjs-hidden') && this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-hidden');\n    }\n\n    // if only mute toggle is visible we don't want\n    // volume panel expanding when hovered or active\n    if (this.volumeControl.hasClass('vjs-hidden') && !this.muteToggle.hasClass('vjs-hidden')) {\n      this.addClass('vjs-mute-toggle-only');\n    }\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  VolumePanel.prototype.createEl = function createEl() {\n    var orientationClass = 'vjs-volume-panel-horizontal';\n\n    if (!this.options_.inline) {\n      orientationClass = 'vjs-volume-panel-vertical';\n    }\n\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-volume-panel vjs-control ' + orientationClass\n    });\n  };\n\n  return VolumePanel;\n}(Component);\n\n/**\n * Default options for the `VolumeControl`\n *\n * @type {Object}\n * @private\n */\n\n\nVolumePanel.prototype.options_ = {\n  children: ['muteToggle', 'volumeControl']\n};\n\nComponent.registerComponent('VolumePanel', VolumePanel);\n\n/**\n * @file menu.js\n */\n/**\n * The Menu component is used to build popup menus, including subtitle and\n * captions selection menus.\n *\n * @extends Component\n */\n\nvar Menu = function (_Component) {\n  inherits(Menu, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Player} player\n   *        the player that this component should attach to\n   *\n   * @param {Object} [options]\n   *        Object of option names and values\n   *\n   */\n  function Menu(player, options) {\n    classCallCheck(this, Menu);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    if (options) {\n      _this.menuButton_ = options.menuButton;\n    }\n\n    _this.focusedChild_ = -1;\n\n    _this.on('keydown', _this.handleKeyPress);\n    return _this;\n  }\n\n  /**\n   * Add a {@link MenuItem} to the menu.\n   *\n   * @param {Object|string} component\n   *        The name or instance of the `MenuItem` to add.\n   *\n   */\n\n\n  Menu.prototype.addItem = function addItem(component) {\n    this.addChild(component);\n    component.on('click', bind(this, function (event) {\n      // Unpress the associated MenuButton, and move focus back to it\n      if (this.menuButton_) {\n        this.menuButton_.unpressButton();\n\n        // don't focus menu button if item is a caption settings item\n        // because focus will move elsewhere and it logs an error on IE8\n        if (component.name() !== 'CaptionSettingsMenuItem') {\n          this.menuButton_.focus();\n        }\n      }\n    }));\n  };\n\n  /**\n   * Create the `Menu`s DOM element.\n   *\n   * @return {Element}\n   *         the element that was created\n   */\n\n\n  Menu.prototype.createEl = function createEl$$1() {\n    var contentElType = this.options_.contentElType || 'ul';\n\n    this.contentEl_ = createEl(contentElType, {\n      className: 'vjs-menu-content'\n    });\n\n    this.contentEl_.setAttribute('role', 'menu');\n\n    var el = _Component.prototype.createEl.call(this, 'div', {\n      append: this.contentEl_,\n      className: 'vjs-menu'\n    });\n\n    el.appendChild(this.contentEl_);\n\n    // Prevent clicks from bubbling up. Needed for Menu Buttons,\n    // where a click on the parent is significant\n    on(el, 'click', function (event) {\n      event.preventDefault();\n      event.stopImmediatePropagation();\n    });\n\n    return el;\n  };\n\n  Menu.prototype.dispose = function dispose() {\n    this.contentEl_ = null;\n\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Handle a `keydown` event on this menu. This listener is added in the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        A `keydown` event that happened on the menu.\n   *\n   * @listens keydown\n   */\n\n\n  Menu.prototype.handleKeyPress = function handleKeyPress(event) {\n    // Left and Down Arrows\n    if (event.which === 37 || event.which === 40) {\n      event.preventDefault();\n      this.stepForward();\n\n      // Up and Right Arrows\n    } else if (event.which === 38 || event.which === 39) {\n      event.preventDefault();\n      this.stepBack();\n    }\n  };\n\n  /**\n   * Move to next (lower) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepForward = function stepForward() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ + 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Move to previous (higher) menu item for keyboard users.\n   */\n\n\n  Menu.prototype.stepBack = function stepBack() {\n    var stepChild = 0;\n\n    if (this.focusedChild_ !== undefined) {\n      stepChild = this.focusedChild_ - 1;\n    }\n    this.focus(stepChild);\n  };\n\n  /**\n   * Set focus on a {@link MenuItem} in the `Menu`.\n   *\n   * @param {Object|string} [item=0]\n   *        Index of child item set focus on.\n   */\n\n\n  Menu.prototype.focus = function focus() {\n    var item = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n    var children = this.children().slice();\n    var haveTitle = children.length && children[0].className && /vjs-menu-title/.test(children[0].className);\n\n    if (haveTitle) {\n      children.shift();\n    }\n\n    if (children.length > 0) {\n      if (item < 0) {\n        item = 0;\n      } else if (item >= children.length) {\n        item = children.length - 1;\n      }\n\n      this.focusedChild_ = item;\n\n      children[item].el_.focus();\n    }\n  };\n\n  return Menu;\n}(Component);\n\nComponent.registerComponent('Menu', Menu);\n\n/**\n * @file menu-button.js\n */\n/**\n * A `MenuButton` class for any popup {@link Menu}.\n *\n * @extends Component\n */\n\nvar MenuButton = function (_Component) {\n  inherits(MenuButton, _Component);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function MenuButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, MenuButton);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options));\n\n    _this.menuButton_ = new Button(player, options);\n\n    _this.menuButton_.controlText(_this.controlText_);\n    _this.menuButton_.el_.setAttribute('aria-haspopup', 'true');\n\n    // Add buildCSSClass values to the button, not the wrapper\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    _this.menuButton_.el_.className = _this.buildCSSClass() + ' ' + buttonClass;\n    _this.menuButton_.removeClass('vjs-control');\n\n    _this.addChild(_this.menuButton_);\n\n    _this.update();\n\n    _this.enabled_ = true;\n\n    _this.on(_this.menuButton_, 'tap', _this.handleClick);\n    _this.on(_this.menuButton_, 'click', _this.handleClick);\n    _this.on(_this.menuButton_, 'focus', _this.handleFocus);\n    _this.on(_this.menuButton_, 'blur', _this.handleBlur);\n\n    _this.on('keydown', _this.handleSubmenuKeyPress);\n    return _this;\n  }\n\n  /**\n   * Update the menu based on the current state of its items.\n   */\n\n\n  MenuButton.prototype.update = function update() {\n    var menu = this.createMenu();\n\n    if (this.menu) {\n      this.menu.dispose();\n      this.removeChild(this.menu);\n    }\n\n    this.menu = menu;\n    this.addChild(menu);\n\n    /**\n     * Track the state of the menu button\n     *\n     * @type {Boolean}\n     * @private\n     */\n    this.buttonPressed_ = false;\n    this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n\n    if (this.items && this.items.length <= this.hideThreshold_) {\n      this.hide();\n    } else {\n      this.show();\n    }\n  };\n\n  /**\n   * Create the menu and add all items to it.\n   *\n   * @return {Menu}\n   *         The constructed menu\n   */\n\n\n  MenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player_, { menuButton: this });\n\n    /**\n     * Hide the menu if the number of items is less than or equal to this threshold. This defaults\n     * to 0 and whenever we add items which can be hidden to the menu we'll increment it. We list\n     * it here because every time we run `createMenu` we need to reset the value.\n     *\n     * @protected\n     * @type {Number}\n     */\n    this.hideThreshold_ = 0;\n\n    // Add a title list item to the top\n    if (this.options_.title) {\n      var title = createEl('li', {\n        className: 'vjs-menu-title',\n        innerHTML: toTitleCase(this.options_.title),\n        tabIndex: -1\n      });\n\n      this.hideThreshold_ += 1;\n\n      menu.children_.unshift(title);\n      prependTo(title, menu.contentEl());\n    }\n\n    this.items = this.createItems();\n\n    if (this.items) {\n      // Add menu items to the menu\n      for (var i = 0; i < this.items.length; i++) {\n        menu.addItem(this.items[i]);\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Create the list of menu items. Specific to each subclass.\n   *\n   * @abstract\n   */\n\n\n  MenuButton.prototype.createItems = function createItems() {};\n\n  /**\n   * Create the `MenuButtons`s DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuButton.prototype.createEl = function createEl$$1() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildWrapperCSSClass()\n    }, {});\n  };\n\n  /**\n   * Allow sub components to stack CSS class names for the wrapper element\n   *\n   * @return {string}\n   *         The constructed wrapper DOM `className`\n   */\n\n\n  MenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    // TODO: Fix the CSS so that this isn't necessary\n    var buttonClass = Button.prototype.buildCSSClass();\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + buttonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  MenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    var menuButtonClass = 'vjs-menu-button';\n\n    // If the inline option is passed, we want to use different styles altogether.\n    if (this.options_.inline === true) {\n      menuButtonClass += '-inline';\n    } else {\n      menuButtonClass += '-popup';\n    }\n\n    return 'vjs-menu-button ' + menuButtonClass + ' ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Get or set the localized control text that will be used for accessibility.\n   *\n   * > NOTE: This will come from the internal `menuButton_` element.\n   *\n   * @param {string} [text]\n   *        Control text for element.\n   *\n   * @param {Element} [el=this.menuButton_.el()]\n   *        Element to set the title on.\n   *\n   * @return {string}\n   *         - The control text when getting\n   */\n\n\n  MenuButton.prototype.controlText = function controlText(text) {\n    var el = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : this.menuButton_.el();\n\n    return this.menuButton_.controlText(text, el);\n  };\n\n  /**\n   * Handle a click on a `MenuButton`.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuButton.prototype.handleClick = function handleClick(event) {\n    // When you click the button it adds focus, which will show the menu.\n    // So we'll remove focus when the mouse leaves the button. Focus is needed\n    // for tab navigation.\n\n    this.one(this.menu.contentEl(), 'mouseleave', bind(this, function (e) {\n      this.unpressButton();\n      this.el_.blur();\n    }));\n    if (this.buttonPressed_) {\n      this.unpressButton();\n    } else {\n      this.pressButton();\n    }\n  };\n\n  /**\n   * Set the focus to the actual button, not to this element\n   */\n\n\n  MenuButton.prototype.focus = function focus() {\n    this.menuButton_.focus();\n  };\n\n  /**\n   * Remove the focus from the actual button, not this element\n   */\n\n\n  MenuButton.prototype.blur = function blur() {\n    this.menuButton_.blur();\n  };\n\n  /**\n   * This gets called when a `MenuButton` gains focus via a `focus` event.\n   * Turns on listening for `keydown` events. When they happen it\n   * calls `this.handleKeyPress`.\n   *\n   * @param {EventTarget~Event} event\n   *        The `focus` event that caused this function to be called.\n   *\n   * @listens focus\n   */\n\n\n  MenuButton.prototype.handleFocus = function handleFocus() {\n    on(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Called when a `MenuButton` loses focus. Turns off the listener for\n   * `keydown` events. Which Stops `this.handleKeyPress` from getting called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `blur` event that caused this function to be called.\n   *\n   * @listens blur\n   */\n\n\n  MenuButton.prototype.handleBlur = function handleBlur() {\n    off(document, 'keydown', bind(this, this.handleKeyPress));\n  };\n\n  /**\n   * Handle tab, escape, down arrow, and up arrow keys for `MenuButton`. See\n   * {@link ClickableComponent#handleKeyPress} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown` event that caused this function to be called.\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleKeyPress = function handleKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n      // Up (38) key or Down (40) key press the 'button'\n    } else if (event.which === 38 || event.which === 40) {\n      if (!this.buttonPressed_) {\n        this.pressButton();\n        event.preventDefault();\n      }\n    }\n  };\n\n  /**\n   * Handle a `keydown` event on a sub-menu. The listener for this is added in\n   * the constructor.\n   *\n   * @param {EventTarget~Event} event\n   *        Key press event\n   *\n   * @listens keydown\n   */\n\n\n  MenuButton.prototype.handleSubmenuKeyPress = function handleSubmenuKeyPress(event) {\n\n    // Escape (27) key or Tab (9) key unpress the 'button'\n    if (event.which === 27 || event.which === 9) {\n      if (this.buttonPressed_) {\n        this.unpressButton();\n      }\n      // Don't preventDefault for Tab key - we still want to lose focus\n      if (event.which !== 9) {\n        event.preventDefault();\n        // Set focus back to the menu button's button\n        this.menuButton_.el_.focus();\n      }\n    }\n  };\n\n  /**\n   * Put the current `MenuButton` into a pressed state.\n   */\n\n\n  MenuButton.prototype.pressButton = function pressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = true;\n      this.menu.lockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'true');\n\n      // set the focus into the submenu, except on iOS where it is resulting in\n      // undesired scrolling behavior when the player is in an iframe\n      if (IS_IOS && isInFrame()) {\n        // Return early so that the menu isn't focused\n        return;\n      }\n\n      this.menu.focus();\n    }\n  };\n\n  /**\n   * Take the current `MenuButton` out of a pressed state.\n   */\n\n\n  MenuButton.prototype.unpressButton = function unpressButton() {\n    if (this.enabled_) {\n      this.buttonPressed_ = false;\n      this.menu.unlockShowing();\n      this.menuButton_.el_.setAttribute('aria-expanded', 'false');\n    }\n  };\n\n  /**\n   * Disable the `MenuButton`. Don't allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.disable = function disable() {\n    this.unpressButton();\n\n    this.enabled_ = false;\n    this.addClass('vjs-disabled');\n\n    this.menuButton_.disable();\n  };\n\n  /**\n   * Enable the `MenuButton`. Allow it to be clicked.\n   */\n\n\n  MenuButton.prototype.enable = function enable() {\n    this.enabled_ = true;\n    this.removeClass('vjs-disabled');\n\n    this.menuButton_.enable();\n  };\n\n  return MenuButton;\n}(Component);\n\nComponent.registerComponent('MenuButton', MenuButton);\n\n/**\n * @file track-button.js\n */\n/**\n * The base class for buttons that toggle specific  track types (e.g. subtitles).\n *\n * @extends MenuButton\n */\n\nvar TrackButton = function (_MenuButton) {\n  inherits(TrackButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TrackButton(player, options) {\n    classCallCheck(this, TrackButton);\n\n    var tracks = options.tracks;\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    if (_this.items.length <= 1) {\n      _this.hide();\n    }\n\n    if (!tracks) {\n      return possibleConstructorReturn(_this);\n    }\n\n    var updateHandler = bind(_this, _this.update);\n\n    tracks.addEventListener('removetrack', updateHandler);\n    tracks.addEventListener('addtrack', updateHandler);\n    _this.player_.on('ready', updateHandler);\n\n    _this.player_.on('dispose', function () {\n      tracks.removeEventListener('removetrack', updateHandler);\n      tracks.removeEventListener('addtrack', updateHandler);\n    });\n    return _this;\n  }\n\n  return TrackButton;\n}(MenuButton);\n\nComponent.registerComponent('TrackButton', TrackButton);\n\n/**\n * @file menu-item.js\n */\n/**\n * The component for a menu item. `<li>`\n *\n * @extends ClickableComponent\n */\n\nvar MenuItem = function (_ClickableComponent) {\n  inherits(MenuItem, _ClickableComponent);\n\n  /**\n   * Creates an instance of the this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   *\n   */\n  function MenuItem(player, options) {\n    classCallCheck(this, MenuItem);\n\n    var _this = possibleConstructorReturn(this, _ClickableComponent.call(this, player, options));\n\n    _this.selectable = options.selectable;\n    _this.isSelected_ = options.selected || false;\n    _this.multiSelectable = options.multiSelectable;\n\n    _this.selected(_this.isSelected_);\n\n    if (_this.selectable) {\n      if (_this.multiSelectable) {\n        _this.el_.setAttribute('role', 'menuitemcheckbox');\n      } else {\n        _this.el_.setAttribute('role', 'menuitemradio');\n      }\n    } else {\n      _this.el_.setAttribute('role', 'menuitem');\n    }\n    return _this;\n  }\n\n  /**\n   * Create the `MenuItem's DOM element\n   *\n   * @param {string} [type=li]\n   *        Element's node type, not actually used, always set to `li`.\n   *\n   * @param {Object} [props={}]\n   *        An object of properties that should be set on the element\n   *\n   * @param {Object} [attrs={}]\n   *        An object of attributes that should be set on the element\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  MenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    // The control is textual, not just an icon\n    this.nonIconControl = true;\n\n    return _ClickableComponent.prototype.createEl.call(this, 'li', assign({\n      className: 'vjs-menu-item',\n      innerHTML: '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label) + '</span>',\n      tabIndex: -1\n    }, props), attrs);\n  };\n\n  /**\n   * Any click on a `MenuItem` puts it into the selected state.\n   * See {@link ClickableComponent#handleClick} for instances where this is called.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  MenuItem.prototype.handleClick = function handleClick(event) {\n    this.selected(true);\n  };\n\n  /**\n   * Set the state for this menu item as selected or not.\n   *\n   * @param {boolean} selected\n   *        if the menu item is selected or not\n   */\n\n\n  MenuItem.prototype.selected = function selected(_selected) {\n    if (this.selectable) {\n      if (_selected) {\n        this.addClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'true');\n        // aria-checked isn't fully supported by browsers/screen readers,\n        // so indicate selected state to screen reader in the control text.\n        this.controlText(', selected');\n        this.isSelected_ = true;\n      } else {\n        this.removeClass('vjs-selected');\n        this.el_.setAttribute('aria-checked', 'false');\n        // Indicate un-selected state to screen reader\n        this.controlText('');\n        this.isSelected_ = false;\n      }\n    }\n  };\n\n  return MenuItem;\n}(ClickableComponent);\n\nComponent.registerComponent('MenuItem', MenuItem);\n\n/**\n * @file text-track-menu-item.js\n */\n/**\n * The specific menu item type for selecting a language within a text track kind\n *\n * @extends MenuItem\n */\n\nvar TextTrackMenuItem = function (_MenuItem) {\n  inherits(TextTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function TextTrackMenuItem(player, options) {\n    classCallCheck(this, TextTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.textTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.mode === 'showing';\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n    var selectedLanguageChangeHandler = function selectedLanguageChangeHandler() {\n      for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      _this.handleSelectedLanguageChange.apply(_this, args);\n    };\n\n    player.on(['loadstart', 'texttrackchange'], changeHandler);\n    tracks.addEventListener('change', changeHandler);\n    tracks.addEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    _this.on('dispose', function () {\n      player.off(['loadstart', 'texttrackchange'], changeHandler);\n      tracks.removeEventListener('change', changeHandler);\n      tracks.removeEventListener('selectedlanguagechange', selectedLanguageChangeHandler);\n    });\n\n    // iOS7 doesn't dispatch change events to TextTrackLists when an\n    // associated track's mode changes. Without something like\n    // Object.observe() (also not present on iOS7), it's not\n    // possible to detect changes to the mode attribute and polyfill\n    // the change event. As a poor substitute, we manually dispatch\n    // change events whenever the controls modify the mode.\n    if (tracks.onchange === undefined) {\n      var event = void 0;\n\n      _this.on(['tap', 'click'], function () {\n        if (_typeof(window.Event) !== 'object') {\n          // Android 2.3 throws an Illegal Constructor error for window.Event\n          try {\n            event = new window.Event('change');\n          } catch (err) {\n            // continue regardless of error\n          }\n        }\n\n        if (!event) {\n          event = document.createEvent('Event');\n          event.initEvent('change', true, true);\n        }\n\n        tracks.dispatchEvent(event);\n      });\n    }\n\n    // set the default state based on current tracks\n    _this.handleTracksChange();\n    return _this;\n  }\n\n  /**\n   * This gets called when an `TextTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} event\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  TextTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var kind = this.track.kind;\n    var kinds = this.track.kinds;\n    var tracks = this.player_.textTracks();\n\n    if (!kinds) {\n      kinds = [kind];\n    }\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    if (!tracks) {\n      return;\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      if (track === this.track && kinds.indexOf(track.kind) > -1) {\n        if (track.mode !== 'showing') {\n          track.mode = 'showing';\n        }\n      } else if (track.mode !== 'disabled') {\n        track.mode = 'disabled';\n      }\n    }\n  };\n\n  /**\n   * Handle text track list change\n   *\n   * @param {EventTarget~Event} event\n   *        The `change` event that caused this function to be called.\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  TextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var shouldBeSelected = this.track.mode === 'showing';\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  TextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    if (this.track.mode === 'showing') {\n      var selectedLanguage = this.player_.cache_.selectedLanguage;\n\n      // Don't replace the kind of track across the same language\n      if (selectedLanguage && selectedLanguage.enabled && selectedLanguage.language === this.track.language && selectedLanguage.kind !== this.track.kind) {\n        return;\n      }\n\n      this.player_.cache_.selectedLanguage = {\n        enabled: true,\n        language: this.track.language,\n        kind: this.track.kind\n      };\n    }\n  };\n\n  TextTrackMenuItem.prototype.dispose = function dispose() {\n    // remove reference to track object on dispose\n    this.track = null;\n\n    _MenuItem.prototype.dispose.call(this);\n  };\n\n  return TextTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('TextTrackMenuItem', TextTrackMenuItem);\n\n/**\n * @file off-text-track-menu-item.js\n */\n/**\n * A special menu item for turning of a specific type of text track\n *\n * @extends TextTrackMenuItem\n */\n\nvar OffTextTrackMenuItem = function (_TextTrackMenuItem) {\n  inherits(OffTextTrackMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function OffTextTrackMenuItem(player, options) {\n    classCallCheck(this, OffTextTrackMenuItem);\n\n    // Create pseudo track info\n    // Requires options['kind']\n    options.track = {\n      player: player,\n      kind: options.kind,\n      kinds: options.kinds,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    if (!options.kinds) {\n      options.kinds = [options.kind];\n    }\n\n    if (options.label) {\n      options.track.label = options.label;\n    } else {\n      options.track.label = options.kinds.join(' and ') + ' off';\n    }\n\n    // MenuItem is selectable\n    options.selectable = true;\n    // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n    options.multiSelectable = false;\n\n    return possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   */\n\n\n  OffTextTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var shouldBeSelected = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (this.options_.kinds.indexOf(track.kind) > -1 && track.mode === 'showing') {\n        shouldBeSelected = false;\n        break;\n      }\n    }\n\n    // Prevent redundant selected() calls because they may cause\n    // screen readers to read the appended control text unnecessarily\n    if (shouldBeSelected !== this.isSelected_) {\n      this.selected(shouldBeSelected);\n    }\n  };\n\n  OffTextTrackMenuItem.prototype.handleSelectedLanguageChange = function handleSelectedLanguageChange(event) {\n    var tracks = this.player().textTracks();\n    var allHidden = true;\n\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (['captions', 'descriptions', 'subtitles'].indexOf(track.kind) > -1 && track.mode === 'showing') {\n        allHidden = false;\n        break;\n      }\n    }\n\n    if (allHidden) {\n      this.player_.cache_.selectedLanguage = {\n        enabled: false\n      };\n    }\n  };\n\n  return OffTextTrackMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('OffTextTrackMenuItem', OffTextTrackMenuItem);\n\n/**\n * @file text-track-button.js\n */\n/**\n * The base class for buttons that toggle specific text track types (e.g. subtitles)\n *\n * @extends MenuButton\n */\n\nvar TextTrackButton = function (_TrackButton) {\n  inherits(TextTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function TextTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, TextTrackButton);\n\n    options.tracks = player.textTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @param {TextTrackMenuItem[]} [items=[]]\n   *        Existing array of items to use during creation\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items that were created\n   */\n\n\n  TextTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var TrackMenuItem = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : TextTrackMenuItem;\n\n\n    // Label is an overide for the [track] off label\n    // USed to localise captions/subtitles\n    var label = void 0;\n\n    if (this.label_) {\n      label = this.label_ + ' off';\n    }\n    // Add an OFF menu item to turn all tracks off\n    items.push(new OffTextTrackMenuItem(this.player_, {\n      kinds: this.kinds_,\n      kind: this.kind_,\n      label: label\n    }));\n\n    this.hideThreshold_ += 1;\n\n    var tracks = this.player_.textTracks();\n\n    if (!Array.isArray(this.kinds_)) {\n      this.kinds_ = [this.kind_];\n    }\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // only add tracks that are of an appropriate kind and have a label\n      if (this.kinds_.indexOf(track.kind) > -1) {\n\n        var item = new TrackMenuItem(this.player_, {\n          track: track,\n          // MenuItem is selectable\n          selectable: true,\n          // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n          multiSelectable: false\n        });\n\n        item.addClass('vjs-' + track.kind + '-menu-item');\n        items.push(item);\n      }\n    }\n\n    return items;\n  };\n\n  return TextTrackButton;\n}(TrackButton);\n\nComponent.registerComponent('TextTrackButton', TextTrackButton);\n\n/**\n * @file chapters-track-menu-item.js\n */\n/**\n * The chapter track menu item\n *\n * @extends MenuItem\n */\n\nvar ChaptersTrackMenuItem = function (_MenuItem) {\n  inherits(ChaptersTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function ChaptersTrackMenuItem(player, options) {\n    classCallCheck(this, ChaptersTrackMenuItem);\n\n    var track = options.track;\n    var cue = options.cue;\n    var currentTime = player.currentTime();\n\n    // Modify options for parent MenuItem class's init.\n    options.selectable = true;\n    options.multiSelectable = false;\n    options.label = cue.text;\n    options.selected = cue.startTime <= currentTime && currentTime < cue.endTime;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n    _this.cue = cue;\n    track.addEventListener('cuechange', bind(_this, _this.update));\n    return _this;\n  }\n\n  /**\n   * This gets called when an `ChaptersTrackMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  ChaptersTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player_.currentTime(this.cue.startTime);\n    this.update(this.cue.startTime);\n  };\n\n  /**\n   * Update chapter menu item\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `cuechange` event that caused this function to run.\n   *\n   * @listens TextTrack#cuechange\n   */\n\n\n  ChaptersTrackMenuItem.prototype.update = function update(event) {\n    var cue = this.cue;\n    var currentTime = this.player_.currentTime();\n\n    // vjs.log(currentTime, cue.startTime);\n    this.selected(cue.startTime <= currentTime && currentTime < cue.endTime);\n  };\n\n  return ChaptersTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('ChaptersTrackMenuItem', ChaptersTrackMenuItem);\n\n/**\n * @file chapters-button.js\n */\n/**\n * The button component for toggling and selecting chapters\n * Chapters act much differently than other text tracks\n * Cues are navigation vs. other tracks of alternative languages\n *\n * @extends TextTrackButton\n */\n\nvar ChaptersButton = function (_TextTrackButton) {\n  inherits(ChaptersButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this function is ready.\n   */\n  function ChaptersButton(player, options, ready) {\n    classCallCheck(this, ChaptersButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  ChaptersButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  ChaptersButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-chapters-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Update the menu based on the current state of its items.\n   *\n   * @param {EventTarget~Event} [event]\n   *        An event that triggered this function to run.\n   *\n   * @listens TextTrackList#addtrack\n   * @listens TextTrackList#removetrack\n   * @listens TextTrackList#change\n   */\n\n\n  ChaptersButton.prototype.update = function update(event) {\n    if (!this.track_ || event && (event.type === 'addtrack' || event.type === 'removetrack')) {\n      this.setTrack(this.findChaptersTrack());\n    }\n    _TextTrackButton.prototype.update.call(this);\n  };\n\n  /**\n   * Set the currently selected track for the chapters button.\n   *\n   * @param {TextTrack} track\n   *        The new track to select. Nothing will change if this is the currently selected\n   *        track.\n   */\n\n\n  ChaptersButton.prototype.setTrack = function setTrack(track) {\n    if (this.track_ === track) {\n      return;\n    }\n\n    if (!this.updateHandler_) {\n      this.updateHandler_ = this.update.bind(this);\n    }\n\n    // here this.track_ refers to the old track instance\n    if (this.track_) {\n      var remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (remoteTextTrackEl) {\n        remoteTextTrackEl.removeEventListener('load', this.updateHandler_);\n      }\n\n      this.track_ = null;\n    }\n\n    this.track_ = track;\n\n    // here this.track_ refers to the new track instance\n    if (this.track_) {\n      this.track_.mode = 'hidden';\n\n      var _remoteTextTrackEl = this.player_.remoteTextTrackEls().getTrackElementByTrack_(this.track_);\n\n      if (_remoteTextTrackEl) {\n        _remoteTextTrackEl.addEventListener('load', this.updateHandler_);\n      }\n    }\n  };\n\n  /**\n   * Find the track object that is currently in use by this ChaptersButton\n   *\n   * @return {TextTrack|undefined}\n   *         The current track or undefined if none was found.\n   */\n\n\n  ChaptersButton.prototype.findChaptersTrack = function findChaptersTrack() {\n    var tracks = this.player_.textTracks() || [];\n\n    for (var i = tracks.length - 1; i >= 0; i--) {\n      // We will always choose the last track as our chaptersTrack\n      var track = tracks[i];\n\n      if (track.kind === this.kind_) {\n        return track;\n      }\n    }\n  };\n\n  /**\n   * Get the caption for the ChaptersButton based on the track label. This will also\n   * use the current tracks localized kind as a fallback if a label does not exist.\n   *\n   * @return {string}\n   *         The tracks current label or the localized track kind.\n   */\n\n\n  ChaptersButton.prototype.getMenuCaption = function getMenuCaption() {\n    if (this.track_ && this.track_.label) {\n      return this.track_.label;\n    }\n    return this.localize(toTitleCase(this.kind_));\n  };\n\n  /**\n   * Create menu from chapter track\n   *\n   * @return {Menu}\n   *         New menu for the chapter buttons\n   */\n\n\n  ChaptersButton.prototype.createMenu = function createMenu() {\n    this.options_.title = this.getMenuCaption();\n    return _TextTrackButton.prototype.createMenu.call(this);\n  };\n\n  /**\n   * Create a menu item for each text track\n   *\n   * @return {TextTrackMenuItem[]}\n   *         Array of menu items\n   */\n\n\n  ChaptersButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!this.track_) {\n      return items;\n    }\n\n    var cues = this.track_.cues;\n\n    if (!cues) {\n      return items;\n    }\n\n    for (var i = 0, l = cues.length; i < l; i++) {\n      var cue = cues[i];\n      var mi = new ChaptersTrackMenuItem(this.player_, { track: this.track_, cue: cue });\n\n      items.push(mi);\n    }\n\n    return items;\n  };\n\n  return ChaptersButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nChaptersButton.prototype.kind_ = 'chapters';\n\n/**\n * The text that should display over the `ChaptersButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nChaptersButton.prototype.controlText_ = 'Chapters';\n\nComponent.registerComponent('ChaptersButton', ChaptersButton);\n\n/**\n * @file descriptions-button.js\n */\n/**\n * The button component for toggling and selecting descriptions\n *\n * @extends TextTrackButton\n */\n\nvar DescriptionsButton = function (_TextTrackButton) {\n  inherits(DescriptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function DescriptionsButton(player, options, ready) {\n    classCallCheck(this, DescriptionsButton);\n\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n\n    var tracks = player.textTracks();\n    var changeHandler = bind(_this, _this.handleTracksChange);\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  /**\n   * Handle text track change\n   *\n   * @param {EventTarget~Event} event\n   *        The event that caused this function to run\n   *\n   * @listens TextTrackList#change\n   */\n\n\n  DescriptionsButton.prototype.handleTracksChange = function handleTracksChange(event) {\n    var tracks = this.player().textTracks();\n    var disabled = false;\n\n    // Check whether a track of a different kind is showing\n    for (var i = 0, l = tracks.length; i < l; i++) {\n      var track = tracks[i];\n\n      if (track.kind !== this.kind_ && track.mode === 'showing') {\n        disabled = true;\n        break;\n      }\n    }\n\n    // If another track is showing, disable this menu button\n    if (disabled) {\n      this.disable();\n    } else {\n      this.enable();\n    }\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  DescriptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  DescriptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-descriptions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return DescriptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nDescriptionsButton.prototype.kind_ = 'descriptions';\n\n/**\n * The text that should display over the `DescriptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nDescriptionsButton.prototype.controlText_ = 'Descriptions';\n\nComponent.registerComponent('DescriptionsButton', DescriptionsButton);\n\n/**\n * @file subtitles-button.js\n */\n/**\n * The button component for toggling and selecting subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubtitlesButton = function (_TextTrackButton) {\n  inherits(SubtitlesButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function SubtitlesButton(player, options, ready) {\n    classCallCheck(this, SubtitlesButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubtitlesButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubtitlesButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subtitles-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  return SubtitlesButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nSubtitlesButton.prototype.kind_ = 'subtitles';\n\n/**\n * The text that should display over the `SubtitlesButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nSubtitlesButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubtitlesButton', SubtitlesButton);\n\n/**\n * @file caption-settings-menu-item.js\n */\n/**\n * The menu item for caption track settings menu\n *\n * @extends TextTrackMenuItem\n */\n\nvar CaptionSettingsMenuItem = function (_TextTrackMenuItem) {\n  inherits(CaptionSettingsMenuItem, _TextTrackMenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function CaptionSettingsMenuItem(player, options) {\n    classCallCheck(this, CaptionSettingsMenuItem);\n\n    options.track = {\n      player: player,\n      kind: options.kind,\n      label: options.kind + ' settings',\n      selectable: false,\n      'default': false,\n      mode: 'disabled'\n    };\n\n    // CaptionSettingsMenuItem has no concept of 'selected'\n    options.selectable = false;\n\n    options.name = 'CaptionSettingsMenuItem';\n\n    var _this = possibleConstructorReturn(this, _TextTrackMenuItem.call(this, player, options));\n\n    _this.addClass('vjs-texttrack-settings');\n    _this.controlText(', opens ' + options.kind + ' settings dialog');\n    return _this;\n  }\n\n  /**\n   * This gets called when an `CaptionSettingsMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  CaptionSettingsMenuItem.prototype.handleClick = function handleClick(event) {\n    this.player().getChild('textTrackSettings').open();\n  };\n\n  return CaptionSettingsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('CaptionSettingsMenuItem', CaptionSettingsMenuItem);\n\n/**\n * @file captions-button.js\n */\n/**\n * The button component for toggling and selecting captions\n *\n * @extends TextTrackButton\n */\n\nvar CaptionsButton = function (_TextTrackButton) {\n  inherits(CaptionsButton, _TextTrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        The function to call when this component is ready.\n   */\n  function CaptionsButton(player, options, ready) {\n    classCallCheck(this, CaptionsButton);\n    return possibleConstructorReturn(this, _TextTrackButton.call(this, player, options, ready));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  CaptionsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  CaptionsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-captions-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  CaptionsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.kind_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    return _TextTrackButton.prototype.createItems.call(this, items);\n  };\n\n  return CaptionsButton;\n}(TextTrackButton);\n\n/**\n * `kind` of TextTrack to look for to associate it with this menu.\n *\n * @type {string}\n * @private\n */\n\n\nCaptionsButton.prototype.kind_ = 'captions';\n\n/**\n * The text that should display over the `CaptionsButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\nCaptionsButton.prototype.controlText_ = 'Captions';\n\nComponent.registerComponent('CaptionsButton', CaptionsButton);\n\n/**\n * @file subs-caps-menu-item.js\n */\n/**\n * SubsCapsMenuItem has an [cc] icon to distinguish captions from subtitles\n * in the SubsCapsMenu.\n *\n * @extends TextTrackMenuItem\n */\n\nvar SubsCapsMenuItem = function (_TextTrackMenuItem) {\n  inherits(SubsCapsMenuItem, _TextTrackMenuItem);\n\n  function SubsCapsMenuItem() {\n    classCallCheck(this, SubsCapsMenuItem);\n    return possibleConstructorReturn(this, _TextTrackMenuItem.apply(this, arguments));\n  }\n\n  SubsCapsMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'captions') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Captions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _TextTrackMenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  return SubsCapsMenuItem;\n}(TextTrackMenuItem);\n\nComponent.registerComponent('SubsCapsMenuItem', SubsCapsMenuItem);\n\n/**\n * @file sub-caps-button.js\n */\n/**\n * The button component for toggling and selecting captions and/or subtitles\n *\n * @extends TextTrackButton\n */\n\nvar SubsCapsButton = function (_TextTrackButton) {\n  inherits(SubsCapsButton, _TextTrackButton);\n\n  function SubsCapsButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, SubsCapsButton);\n\n    // Although North America uses \"captions\" in most cases for\n    // \"captions and subtitles\" other locales use \"subtitles\"\n    var _this = possibleConstructorReturn(this, _TextTrackButton.call(this, player, options));\n\n    _this.label_ = 'subtitles';\n    if (['en', 'en-us', 'en-ca', 'fr-ca'].indexOf(_this.player_.language_) > -1) {\n      _this.label_ = 'captions';\n    }\n    _this.menuButton_.controlText(toTitleCase(_this.label_));\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  SubsCapsButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  SubsCapsButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-subs-caps-button ' + _TextTrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create caption/subtitles menu items\n   *\n   * @return {CaptionSettingsMenuItem[]}\n   *         The array of current menu items.\n   */\n\n\n  SubsCapsButton.prototype.createItems = function createItems() {\n    var items = [];\n\n    if (!(this.player().tech_ && this.player().tech_.featuresNativeTextTracks) && this.player().getChild('textTrackSettings')) {\n      items.push(new CaptionSettingsMenuItem(this.player_, { kind: this.label_ }));\n\n      this.hideThreshold_ += 1;\n    }\n\n    items = _TextTrackButton.prototype.createItems.call(this, items, SubsCapsMenuItem);\n    return items;\n  };\n\n  return SubsCapsButton;\n}(TextTrackButton);\n\n/**\n * `kind`s of TextTrack to look for to associate it with this menu.\n *\n * @type {array}\n * @private\n */\n\n\nSubsCapsButton.prototype.kinds_ = ['captions', 'subtitles'];\n\n/**\n * The text that should display over the `SubsCapsButton`s controls.\n *\n *\n * @type {string}\n * @private\n */\nSubsCapsButton.prototype.controlText_ = 'Subtitles';\n\nComponent.registerComponent('SubsCapsButton', SubsCapsButton);\n\n/**\n * @file audio-track-menu-item.js\n */\n/**\n * An {@link AudioTrack} {@link MenuItem}\n *\n * @extends MenuItem\n */\n\nvar AudioTrackMenuItem = function (_MenuItem) {\n  inherits(AudioTrackMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function AudioTrackMenuItem(player, options) {\n    classCallCheck(this, AudioTrackMenuItem);\n\n    var track = options.track;\n    var tracks = player.audioTracks();\n\n    // Modify options for parent MenuItem class's init.\n    options.label = track.label || track.language || 'Unknown';\n    options.selected = track.enabled;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.track = track;\n\n    _this.addClass('vjs-' + track.kind + '-menu-item');\n\n    var changeHandler = function changeHandler() {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      _this.handleTracksChange.apply(_this, args);\n    };\n\n    tracks.addEventListener('change', changeHandler);\n    _this.on('dispose', function () {\n      tracks.removeEventListener('change', changeHandler);\n    });\n    return _this;\n  }\n\n  AudioTrackMenuItem.prototype.createEl = function createEl(type, props, attrs) {\n    var innerHTML = '<span class=\"vjs-menu-item-text\">' + this.localize(this.options_.label);\n\n    if (this.options_.track.kind === 'main-desc') {\n      innerHTML += '\\n        <span aria-hidden=\"true\" class=\"vjs-icon-placeholder\"></span>\\n        <span class=\"vjs-control-text\"> ' + this.localize('Descriptions') + '</span>\\n      ';\n    }\n\n    innerHTML += '</span>';\n\n    var el = _MenuItem.prototype.createEl.call(this, type, assign({\n      innerHTML: innerHTML\n    }, props), attrs);\n\n    return el;\n  };\n\n  /**\n   * This gets called when an `AudioTrackMenuItem is \"clicked\". See {@link ClickableComponent}\n   * for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  AudioTrackMenuItem.prototype.handleClick = function handleClick(event) {\n    var tracks = this.player_.audioTracks();\n\n    _MenuItem.prototype.handleClick.call(this, event);\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      track.enabled = track === this.track;\n    }\n  };\n\n  /**\n   * Handle any {@link AudioTrack} change.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The {@link AudioTrackList#change} event that caused this to run.\n   *\n   * @listens AudioTrackList#change\n   */\n\n\n  AudioTrackMenuItem.prototype.handleTracksChange = function handleTracksChange(event) {\n    this.selected(this.track.enabled);\n  };\n\n  return AudioTrackMenuItem;\n}(MenuItem);\n\nComponent.registerComponent('AudioTrackMenuItem', AudioTrackMenuItem);\n\n/**\n * @file audio-track-button.js\n */\n/**\n * The base class for buttons that toggle specific {@link AudioTrack} types.\n *\n * @extends TrackButton\n */\n\nvar AudioTrackButton = function (_TrackButton) {\n  inherits(AudioTrackButton, _TrackButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options={}]\n   *        The key/value store of player options.\n   */\n  function AudioTrackButton(player) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, AudioTrackButton);\n\n    options.tracks = player.audioTracks();\n\n    return possibleConstructorReturn(this, _TrackButton.call(this, player, options));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  AudioTrackButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildCSSClass.call(this);\n  };\n\n  AudioTrackButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-audio-button ' + _TrackButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create a menu item for each audio track\n   *\n   * @param {AudioTrackMenuItem[]} [items=[]]\n   *        An array of existing menu items to use.\n   *\n   * @return {AudioTrackMenuItem[]}\n   *         An array of menu items\n   */\n\n\n  AudioTrackButton.prototype.createItems = function createItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    // if there's only one audio track, there no point in showing it\n    this.hideThreshold_ = 1;\n\n    var tracks = this.player_.audioTracks();\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      items.push(new AudioTrackMenuItem(this.player_, {\n        track: track,\n        // MenuItem is selectable\n        selectable: true,\n        // MenuItem is NOT multiSelectable (i.e. only one can be marked \"selected\" at a time)\n        multiSelectable: false\n      }));\n    }\n\n    return items;\n  };\n\n  return AudioTrackButton;\n}(TrackButton);\n\n/**\n * The text that should display over the `AudioTrackButton`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nAudioTrackButton.prototype.controlText_ = 'Audio Track';\nComponent.registerComponent('AudioTrackButton', AudioTrackButton);\n\n/**\n * @file playback-rate-menu-item.js\n */\n/**\n * The specific menu item type for selecting a playback rate.\n *\n * @extends MenuItem\n */\n\nvar PlaybackRateMenuItem = function (_MenuItem) {\n  inherits(PlaybackRateMenuItem, _MenuItem);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuItem(player, options) {\n    classCallCheck(this, PlaybackRateMenuItem);\n\n    var label = options.rate;\n    var rate = parseFloat(label, 10);\n\n    // Modify options for parent MenuItem class's init.\n    options.label = label;\n    options.selected = rate === 1;\n    options.selectable = true;\n    options.multiSelectable = false;\n\n    var _this = possibleConstructorReturn(this, _MenuItem.call(this, player, options));\n\n    _this.label = label;\n    _this.rate = rate;\n\n    _this.on(player, 'ratechange', _this.update);\n    return _this;\n  }\n\n  /**\n   * This gets called when an `PlaybackRateMenuItem` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuItem.prototype.handleClick = function handleClick(event) {\n    _MenuItem.prototype.handleClick.call(this);\n    this.player().playbackRate(this.rate);\n  };\n\n  /**\n   * Update the PlaybackRateMenuItem when the playbackrate changes.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `ratechange` event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuItem.prototype.update = function update(event) {\n    this.selected(this.player().playbackRate() === this.rate);\n  };\n\n  return PlaybackRateMenuItem;\n}(MenuItem);\n\n/**\n * The text that should display over the `PlaybackRateMenuItem`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuItem.prototype.contentElType = 'button';\n\nComponent.registerComponent('PlaybackRateMenuItem', PlaybackRateMenuItem);\n\n/**\n * @file playback-rate-menu-button.js\n */\n/**\n * The component for controlling the playback rate.\n *\n * @extends MenuButton\n */\n\nvar PlaybackRateMenuButton = function (_MenuButton) {\n  inherits(PlaybackRateMenuButton, _MenuButton);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   */\n  function PlaybackRateMenuButton(player, options) {\n    classCallCheck(this, PlaybackRateMenuButton);\n\n    var _this = possibleConstructorReturn(this, _MenuButton.call(this, player, options));\n\n    _this.updateVisibility();\n    _this.updateLabel();\n\n    _this.on(player, 'loadstart', _this.updateVisibility);\n    _this.on(player, 'ratechange', _this.updateLabel);\n    return _this;\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  PlaybackRateMenuButton.prototype.createEl = function createEl$$1() {\n    var el = _MenuButton.prototype.createEl.call(this);\n\n    this.labelEl_ = createEl('div', {\n      className: 'vjs-playback-rate-value',\n      innerHTML: '1x'\n    });\n\n    el.appendChild(this.labelEl_);\n\n    return el;\n  };\n\n  PlaybackRateMenuButton.prototype.dispose = function dispose() {\n    this.labelEl_ = null;\n\n    _MenuButton.prototype.dispose.call(this);\n  };\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n\n\n  PlaybackRateMenuButton.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildCSSClass.call(this);\n  };\n\n  PlaybackRateMenuButton.prototype.buildWrapperCSSClass = function buildWrapperCSSClass() {\n    return 'vjs-playback-rate ' + _MenuButton.prototype.buildWrapperCSSClass.call(this);\n  };\n\n  /**\n   * Create the playback rate menu\n   *\n   * @return {Menu}\n   *         Menu object populated with {@link PlaybackRateMenuItem}s\n   */\n\n\n  PlaybackRateMenuButton.prototype.createMenu = function createMenu() {\n    var menu = new Menu(this.player());\n    var rates = this.playbackRates();\n\n    if (rates) {\n      for (var i = rates.length - 1; i >= 0; i--) {\n        menu.addChild(new PlaybackRateMenuItem(this.player(), { rate: rates[i] + 'x' }));\n      }\n    }\n\n    return menu;\n  };\n\n  /**\n   * Updates ARIA accessibility attributes\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateARIAAttributes = function updateARIAAttributes() {\n    // Current playback rate\n    this.el().setAttribute('aria-valuenow', this.player().playbackRate());\n  };\n\n  /**\n   * This gets called when an `PlaybackRateMenuButton` is \"clicked\". See\n   * {@link ClickableComponent} for more detailed information on what a click can be.\n   *\n   * @param {EventTarget~Event} [event]\n   *        The `keydown`, `tap`, or `click` event that caused this function to be\n   *        called.\n   *\n   * @listens tap\n   * @listens click\n   */\n\n\n  PlaybackRateMenuButton.prototype.handleClick = function handleClick(event) {\n    // select next rate option\n    var currentRate = this.player().playbackRate();\n    var rates = this.playbackRates();\n\n    // this will select first one if the last one currently selected\n    var newRate = rates[0];\n\n    for (var i = 0; i < rates.length; i++) {\n      if (rates[i] > currentRate) {\n        newRate = rates[i];\n        break;\n      }\n    }\n    this.player().playbackRate(newRate);\n  };\n\n  /**\n   * Get possible playback rates\n   *\n   * @return {Array}\n   *         All possible playback rates\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRates = function playbackRates() {\n    return this.options_.playbackRates || this.options_.playerOptions && this.options_.playerOptions.playbackRates;\n  };\n\n  /**\n   * Get whether playback rates is supported by the tech\n   * and an array of playback rates exists\n   *\n   * @return {boolean}\n   *         Whether changing playback rate is supported\n   */\n\n\n  PlaybackRateMenuButton.prototype.playbackRateSupported = function playbackRateSupported() {\n    return this.player().tech_ && this.player().tech_.featuresPlaybackRate && this.playbackRates() && this.playbackRates().length > 0;\n  };\n\n  /**\n   * Hide playback rate controls when they're no playback rate options to select\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#loadstart\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateVisibility = function updateVisibility(event) {\n    if (this.playbackRateSupported()) {\n      this.removeClass('vjs-hidden');\n    } else {\n      this.addClass('vjs-hidden');\n    }\n  };\n\n  /**\n   * Update button label when rate changed\n   *\n   * @param {EventTarget~Event} [event]\n   *        The event that caused this function to run.\n   *\n   * @listens Player#ratechange\n   */\n\n\n  PlaybackRateMenuButton.prototype.updateLabel = function updateLabel(event) {\n    if (this.playbackRateSupported()) {\n      this.labelEl_.innerHTML = this.player().playbackRate() + 'x';\n    }\n  };\n\n  return PlaybackRateMenuButton;\n}(MenuButton);\n\n/**\n * The text that should display over the `FullscreenToggle`s controls. Added for localization.\n *\n * @type {string}\n * @private\n */\n\n\nPlaybackRateMenuButton.prototype.controlText_ = 'Playback Rate';\n\nComponent.registerComponent('PlaybackRateMenuButton', PlaybackRateMenuButton);\n\n/**\n * @file spacer.js\n */\n/**\n * Just an empty spacer element that can be used as an append point for plugins, etc.\n * Also can be used to create space between elements when necessary.\n *\n * @extends Component\n */\n\nvar Spacer = function (_Component) {\n  inherits(Spacer, _Component);\n\n  function Spacer() {\n    classCallCheck(this, Spacer);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  Spacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-spacer ' + _Component.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  Spacer.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: this.buildCSSClass()\n    });\n  };\n\n  return Spacer;\n}(Component);\n\nComponent.registerComponent('Spacer', Spacer);\n\n/**\n * @file custom-control-spacer.js\n */\n/**\n * Spacer specifically meant to be used as an insertion point for new plugins, etc.\n *\n * @extends Spacer\n */\n\nvar CustomControlSpacer = function (_Spacer) {\n  inherits(CustomControlSpacer, _Spacer);\n\n  function CustomControlSpacer() {\n    classCallCheck(this, CustomControlSpacer);\n    return possibleConstructorReturn(this, _Spacer.apply(this, arguments));\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   */\n  CustomControlSpacer.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-custom-control-spacer ' + _Spacer.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n\n\n  CustomControlSpacer.prototype.createEl = function createEl() {\n    var el = _Spacer.prototype.createEl.call(this, {\n      className: this.buildCSSClass()\n    });\n\n    // No-flex/table-cell mode requires there be some content\n    // in the cell to fill the remaining space of the table.\n    el.innerHTML = '\\xA0';\n    return el;\n  };\n\n  return CustomControlSpacer;\n}(Spacer);\n\nComponent.registerComponent('CustomControlSpacer', CustomControlSpacer);\n\n/**\n * @file control-bar.js\n */\n// Required children\n/**\n * Container of main controls.\n *\n * @extends Component\n */\n\nvar ControlBar = function (_Component) {\n  inherits(ControlBar, _Component);\n\n  function ControlBar() {\n    classCallCheck(this, ControlBar);\n    return possibleConstructorReturn(this, _Component.apply(this, arguments));\n  }\n\n  /**\n   * Create the `Component`'s DOM element\n   *\n   * @return {Element}\n   *         The element that was created.\n   */\n  ControlBar.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'div', {\n      className: 'vjs-control-bar',\n      dir: 'ltr'\n    });\n  };\n\n  return ControlBar;\n}(Component);\n\n/**\n * Default options for `ControlBar`\n *\n * @type {Object}\n * @private\n */\n\n\nControlBar.prototype.options_ = {\n  children: ['playToggle', 'volumePanel', 'currentTimeDisplay', 'timeDivider', 'durationDisplay', 'progressControl', 'liveDisplay', 'remainingTimeDisplay', 'customControlSpacer', 'playbackRateMenuButton', 'chaptersButton', 'descriptionsButton', 'subsCapsButton', 'audioTrackButton', 'fullscreenToggle']\n};\n\nComponent.registerComponent('ControlBar', ControlBar);\n\n/**\n * @file error-display.js\n */\n/**\n * A display that indicates an error has occurred. This means that the video\n * is unplayable.\n *\n * @extends ModalDialog\n */\n\nvar ErrorDisplay = function (_ModalDialog) {\n  inherits(ErrorDisplay, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param  {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param  {Object} [options]\n   *         The key/value store of player options.\n   */\n  function ErrorDisplay(player, options) {\n    classCallCheck(this, ErrorDisplay);\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.on(player, 'error', _this.open);\n    return _this;\n  }\n\n  /**\n   * Builds the default DOM `className`.\n   *\n   * @return {string}\n   *         The DOM `className` for this object.\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  ErrorDisplay.prototype.buildCSSClass = function buildCSSClass() {\n    return 'vjs-error-display ' + _ModalDialog.prototype.buildCSSClass.call(this);\n  };\n\n  /**\n   * Gets the localized error message based on the `Player`s error.\n   *\n   * @return {string}\n   *         The `Player`s error message localized or an empty string.\n   */\n\n\n  ErrorDisplay.prototype.content = function content() {\n    var error = this.player().error();\n\n    return error ? this.localize(error.message) : '';\n  };\n\n  return ErrorDisplay;\n}(ModalDialog);\n\n/**\n * The default options for an `ErrorDisplay`.\n *\n * @private\n */\n\n\nErrorDisplay.prototype.options_ = mergeOptions(ModalDialog.prototype.options_, {\n  pauseOnOpen: false,\n  fillAlways: true,\n  temporary: false,\n  uncloseable: true\n});\n\nComponent.registerComponent('ErrorDisplay', ErrorDisplay);\n\n/**\n * @file text-track-settings.js\n */\nvar LOCAL_STORAGE_KEY = 'vjs-text-track-settings';\n\nvar COLOR_BLACK = ['#000', 'Black'];\nvar COLOR_BLUE = ['#00F', 'Blue'];\nvar COLOR_CYAN = ['#0FF', 'Cyan'];\nvar COLOR_GREEN = ['#0F0', 'Green'];\nvar COLOR_MAGENTA = ['#F0F', 'Magenta'];\nvar COLOR_RED = ['#F00', 'Red'];\nvar COLOR_WHITE = ['#FFF', 'White'];\nvar COLOR_YELLOW = ['#FF0', 'Yellow'];\n\nvar OPACITY_OPAQUE = ['1', 'Opaque'];\nvar OPACITY_SEMI = ['0.5', 'Semi-Transparent'];\nvar OPACITY_TRANS = ['0', 'Transparent'];\n\n// Configuration for the various <select> elements in the DOM of this component.\n//\n// Possible keys include:\n//\n// `default`:\n//   The default option index. Only needs to be provided if not zero.\n// `parser`:\n//   A function which is used to parse the value from the selected option in\n//   a customized way.\n// `selector`:\n//   The selector used to find the associated <select> element.\nvar selectConfigs = {\n  backgroundColor: {\n    selector: '.vjs-bg-color > select',\n    id: 'captions-background-color-%s',\n    label: 'Color',\n    options: [COLOR_BLACK, COLOR_WHITE, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  backgroundOpacity: {\n    selector: '.vjs-bg-opacity > select',\n    id: 'captions-background-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI, OPACITY_TRANS]\n  },\n\n  color: {\n    selector: '.vjs-fg-color > select',\n    id: 'captions-foreground-color-%s',\n    label: 'Color',\n    options: [COLOR_WHITE, COLOR_BLACK, COLOR_RED, COLOR_GREEN, COLOR_BLUE, COLOR_YELLOW, COLOR_MAGENTA, COLOR_CYAN]\n  },\n\n  edgeStyle: {\n    selector: '.vjs-edge-style > select',\n    id: '%s',\n    label: 'Text Edge Style',\n    options: [['none', 'None'], ['raised', 'Raised'], ['depressed', 'Depressed'], ['uniform', 'Uniform'], ['dropshadow', 'Dropshadow']]\n  },\n\n  fontFamily: {\n    selector: '.vjs-font-family > select',\n    id: 'captions-font-family-%s',\n    label: 'Font Family',\n    options: [['proportionalSansSerif', 'Proportional Sans-Serif'], ['monospaceSansSerif', 'Monospace Sans-Serif'], ['proportionalSerif', 'Proportional Serif'], ['monospaceSerif', 'Monospace Serif'], ['casual', 'Casual'], ['script', 'Script'], ['small-caps', 'Small Caps']]\n  },\n\n  fontPercent: {\n    selector: '.vjs-font-percent > select',\n    id: 'captions-font-size-%s',\n    label: 'Font Size',\n    options: [['0.50', '50%'], ['0.75', '75%'], ['1.00', '100%'], ['1.25', '125%'], ['1.50', '150%'], ['1.75', '175%'], ['2.00', '200%'], ['3.00', '300%'], ['4.00', '400%']],\n    'default': 2,\n    parser: function parser(v) {\n      return v === '1.00' ? null : Number(v);\n    }\n  },\n\n  textOpacity: {\n    selector: '.vjs-text-opacity > select',\n    id: 'captions-foreground-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_OPAQUE, OPACITY_SEMI]\n  },\n\n  // Options for this object are defined below.\n  windowColor: {\n    selector: '.vjs-window-color > select',\n    id: 'captions-window-color-%s',\n    label: 'Color'\n  },\n\n  // Options for this object are defined below.\n  windowOpacity: {\n    selector: '.vjs-window-opacity > select',\n    id: 'captions-window-opacity-%s',\n    label: 'Transparency',\n    options: [OPACITY_TRANS, OPACITY_SEMI, OPACITY_OPAQUE]\n  }\n};\n\nselectConfigs.windowColor.options = selectConfigs.backgroundColor.options;\n\n/**\n * Get the actual value of an option.\n *\n * @param  {string} value\n *         The value to get\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction parseOptionValue(value, parser) {\n  if (parser) {\n    value = parser(value);\n  }\n\n  if (value && value !== 'none') {\n    return value;\n  }\n}\n\n/**\n * Gets the value of the selected <option> element within a <select> element.\n *\n * @param  {Element} el\n *         the element to look in\n *\n * @param  {Function} [parser]\n *         Optional function to adjust the value.\n *\n * @return {Mixed}\n *         - Will be `undefined` if no value exists\n *         - Will be `undefined` if the given value is \"none\".\n *         - Will be the actual value otherwise.\n *\n * @private\n */\nfunction getSelectedOptionValue(el, parser) {\n  var value = el.options[el.options.selectedIndex].value;\n\n  return parseOptionValue(value, parser);\n}\n\n/**\n * Sets the selected <option> element within a <select> element based on a\n * given value.\n *\n * @param {Element} el\n *        The element to look in.\n *\n * @param {string} value\n *        the property to look on.\n *\n * @param {Function} [parser]\n *        Optional function to adjust the value before comparing.\n *\n * @private\n */\nfunction setSelectedOption(el, value, parser) {\n  if (!value) {\n    return;\n  }\n\n  for (var i = 0; i < el.options.length; i++) {\n    if (parseOptionValue(el.options[i].value, parser) === value) {\n      el.selectedIndex = i;\n      break;\n    }\n  }\n}\n\n/**\n * Manipulate Text Tracks settings.\n *\n * @extends ModalDialog\n */\n\nvar TextTrackSettings = function (_ModalDialog) {\n  inherits(TextTrackSettings, _ModalDialog);\n\n  /**\n   * Creates an instance of this class.\n   *\n   * @param {Player} player\n   *         The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *         The key/value store of player options.\n   */\n  function TextTrackSettings(player, options) {\n    classCallCheck(this, TextTrackSettings);\n\n    options.temporary = false;\n\n    var _this = possibleConstructorReturn(this, _ModalDialog.call(this, player, options));\n\n    _this.updateDisplay = bind(_this, _this.updateDisplay);\n\n    // fill the modal and pretend we have opened it\n    _this.fill();\n    _this.hasBeenOpened_ = _this.hasBeenFilled_ = true;\n\n    _this.endDialog = createEl('p', {\n      className: 'vjs-control-text',\n      textContent: _this.localize('End of dialog window.')\n    });\n    _this.el().appendChild(_this.endDialog);\n\n    _this.setDefaults();\n\n    // Grab `persistTextTrackSettings` from the player options if not passed in child options\n    if (options.persistTextTrackSettings === undefined) {\n      _this.options_.persistTextTrackSettings = _this.options_.playerOptions.persistTextTrackSettings;\n    }\n\n    _this.on(_this.$('.vjs-done-button'), 'click', function () {\n      _this.saveSettings();\n      _this.close();\n    });\n\n    _this.on(_this.$('.vjs-default-button'), 'click', function () {\n      _this.setDefaults();\n      _this.updateDisplay();\n    });\n\n    each(selectConfigs, function (config) {\n      _this.on(_this.$(config.selector), 'change', _this.updateDisplay);\n    });\n\n    if (_this.options_.persistTextTrackSettings) {\n      _this.restoreSettings();\n    }\n    return _this;\n  }\n\n  TextTrackSettings.prototype.dispose = function dispose() {\n    this.endDialog = null;\n\n    _ModalDialog.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create a <select> element with configured options.\n   *\n   * @param {string} key\n   *        Configuration key to use during creation.\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElSelect_ = function createElSelect_(key) {\n    var _this2 = this;\n\n    var legendId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var type = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'label';\n\n    var config = selectConfigs[key];\n    var id = config.id.replace('%s', this.id_);\n    var selectLabelledbyIds = [legendId, id].join(' ').trim();\n\n    return ['<' + type + ' id=\"' + id + '\" class=\"' + (type === 'label' ? 'vjs-label' : '') + '\">', this.localize(config.label), '</' + type + '>', '<select aria-labelledby=\"' + selectLabelledbyIds + '\">'].concat(config.options.map(function (o) {\n      var optionId = id + '-' + o[1].replace(/\\W+/g, '');\n\n      return ['<option id=\"' + optionId + '\" value=\"' + o[0] + '\" ', 'aria-labelledby=\"' + selectLabelledbyIds + ' ' + optionId + '\">', _this2.localize(o[1]), '</option>'].join('');\n    })).concat('</select>').join('');\n  };\n\n  /**\n   * Create foreground color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFgColor_ = function createElFgColor_() {\n    var legendId = 'captions-text-legend-' + this.id_;\n\n    return ['<fieldset class=\"vjs-fg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Text'), '</legend>', this.createElSelect_('color', legendId), '<span class=\"vjs-text-opacity vjs-opacity\">', this.createElSelect_('textOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create background color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElBgColor_ = function createElBgColor_() {\n    var legendId = 'captions-background-' + this.id_;\n\n    return ['<fieldset class=\"vjs-bg-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Background'), '</legend>', this.createElSelect_('backgroundColor', legendId), '<span class=\"vjs-bg-opacity vjs-opacity\">', this.createElSelect_('backgroundOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create window color element for the component\n   *\n   * @return {string}\n   *         An HTML string.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElWinColor_ = function createElWinColor_() {\n    var legendId = 'captions-window-' + this.id_;\n\n    return ['<fieldset class=\"vjs-window-color vjs-track-setting\">', '<legend id=\"' + legendId + '\">', this.localize('Window'), '</legend>', this.createElSelect_('windowColor', legendId), '<span class=\"vjs-window-opacity vjs-opacity\">', this.createElSelect_('windowOpacity', legendId), '</span>', '</fieldset>'].join('');\n  };\n\n  /**\n   * Create color elements for the component\n   *\n   * @return {Element}\n   *         The element that was created\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElColors_ = function createElColors_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-colors',\n      innerHTML: [this.createElFgColor_(), this.createElBgColor_(), this.createElWinColor_()].join('')\n    });\n  };\n\n  /**\n   * Create font elements for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElFont_ = function createElFont_() {\n    return createEl('div', {\n      className: 'vjs-track-settings-font',\n      innerHTML: ['<fieldset class=\"vjs-font-percent vjs-track-setting\">', this.createElSelect_('fontPercent', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-edge-style vjs-track-setting\">', this.createElSelect_('edgeStyle', '', 'legend'), '</fieldset>', '<fieldset class=\"vjs-font-family vjs-track-setting\">', this.createElSelect_('fontFamily', '', 'legend'), '</fieldset>'].join('')\n    });\n  };\n\n  /**\n   * Create controls for the component\n   *\n   * @return {Element}\n   *         The element that was created.\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.createElControls_ = function createElControls_() {\n    var defaultsDescription = this.localize('restore all settings to the default values');\n\n    return createEl('div', {\n      className: 'vjs-track-settings-controls',\n      innerHTML: ['<button class=\"vjs-default-button\" title=\"' + defaultsDescription + '\">', this.localize('Reset'), '<span class=\"vjs-control-text\"> ' + defaultsDescription + '</span>', '</button>', '<button class=\"vjs-done-button\">' + this.localize('Done') + '</button>'].join('')\n    });\n  };\n\n  TextTrackSettings.prototype.content = function content() {\n    return [this.createElColors_(), this.createElFont_(), this.createElControls_()];\n  };\n\n  TextTrackSettings.prototype.label = function label() {\n    return this.localize('Caption Settings Dialog');\n  };\n\n  TextTrackSettings.prototype.description = function description() {\n    return this.localize('Beginning of dialog window. Escape will cancel and close the window.');\n  };\n\n  TextTrackSettings.prototype.buildCSSClass = function buildCSSClass() {\n    return _ModalDialog.prototype.buildCSSClass.call(this) + ' vjs-text-track-settings';\n  };\n\n  /**\n   * Gets an object of text track settings (or null).\n   *\n   * @return {Object}\n   *         An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.getValues = function getValues() {\n    var _this3 = this;\n\n    return reduce(selectConfigs, function (accum, config, key) {\n      var value = getSelectedOptionValue(_this3.$(config.selector), config.parser);\n\n      if (value !== undefined) {\n        accum[key] = value;\n      }\n\n      return accum;\n    }, {});\n  };\n\n  /**\n   * Sets text track settings from an object of values.\n   *\n   * @param {Object} values\n   *        An object with config values parsed from the DOM or localStorage.\n   */\n\n\n  TextTrackSettings.prototype.setValues = function setValues(values) {\n    var _this4 = this;\n\n    each(selectConfigs, function (config, key) {\n      setSelectedOption(_this4.$(config.selector), values[key], config.parser);\n    });\n  };\n\n  /**\n   * Sets all `<select>` elements to their default values.\n   */\n\n\n  TextTrackSettings.prototype.setDefaults = function setDefaults() {\n    var _this5 = this;\n\n    each(selectConfigs, function (config) {\n      var index = config.hasOwnProperty('default') ? config['default'] : 0;\n\n      _this5.$(config.selector).selectedIndex = index;\n    });\n  };\n\n  /**\n   * Restore texttrack settings from localStorage\n   */\n\n\n  TextTrackSettings.prototype.restoreSettings = function restoreSettings() {\n    var values = void 0;\n\n    try {\n      values = JSON.parse(window.localStorage.getItem(LOCAL_STORAGE_KEY));\n    } catch (err) {\n      log$1.warn(err);\n    }\n\n    if (values) {\n      this.setValues(values);\n    }\n  };\n\n  /**\n   * Save text track settings to localStorage\n   */\n\n\n  TextTrackSettings.prototype.saveSettings = function saveSettings() {\n    if (!this.options_.persistTextTrackSettings) {\n      return;\n    }\n\n    var values = this.getValues();\n\n    try {\n      if (Object.keys(values).length) {\n        window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(values));\n      } else {\n        window.localStorage.removeItem(LOCAL_STORAGE_KEY);\n      }\n    } catch (err) {\n      log$1.warn(err);\n    }\n  };\n\n  /**\n   * Update display of text track settings\n   */\n\n\n  TextTrackSettings.prototype.updateDisplay = function updateDisplay() {\n    var ttDisplay = this.player_.getChild('textTrackDisplay');\n\n    if (ttDisplay) {\n      ttDisplay.updateDisplay();\n    }\n  };\n\n  /**\n   * conditionally blur the element and refocus the captions button\n   *\n   * @private\n   */\n\n\n  TextTrackSettings.prototype.conditionalBlur_ = function conditionalBlur_() {\n    this.previouslyActiveEl_ = null;\n    this.off(document, 'keydown', this.handleKeyDown);\n\n    var cb = this.player_.controlBar;\n    var subsCapsBtn = cb && cb.subsCapsButton;\n    var ccBtn = cb && cb.captionsButton;\n\n    if (subsCapsBtn) {\n      subsCapsBtn.focus();\n    } else if (ccBtn) {\n      ccBtn.focus();\n    }\n  };\n\n  return TextTrackSettings;\n}(ModalDialog);\n\nComponent.registerComponent('TextTrackSettings', TextTrackSettings);\n\n/**\n * @file resize-manager.js\n */\n/**\n * A Resize Manager. It is in charge of triggering `playerresize` on the player in the right conditions.\n *\n * It'll either create an iframe and use a debounced resize handler on it or use the new {@link https://wicg.github.io/ResizeObserver/|ResizeObserver}.\n *\n * If the ResizeObserver is available natively, it will be used. A polyfill can be passed in as an option.\n * If a `playerresize` event is not needed, the ResizeManager component can be removed from the player, see the example below.\n * @example <caption>How to disable the resize manager</caption>\n * const player = videojs('#vid', {\n *   resizeManager: false\n * });\n *\n * @see {@link https://wicg.github.io/ResizeObserver/|ResizeObserver specification}\n *\n * @extends Component\n */\n\nvar ResizeManager = function (_Component) {\n  inherits(ResizeManager, _Component);\n\n  /**\n   * Create the ResizeManager.\n   *\n   * @param {Object} player\n   *        The `Player` that this class should be attached to.\n   *\n   * @param {Object} [options]\n   *        The key/value store of ResizeManager options.\n   *\n   * @param {Object} [options.ResizeObserver]\n   *        A polyfill for ResizeObserver can be passed in here.\n   *        If this is set to null it will ignore the native ResizeObserver and fall back to the iframe fallback.\n   */\n  function ResizeManager(player, options) {\n    classCallCheck(this, ResizeManager);\n\n    var RESIZE_OBSERVER_AVAILABLE = options.ResizeObserver || window.ResizeObserver;\n\n    // if `null` was passed, we want to disable the ResizeObserver\n    if (options.ResizeObserver === null) {\n      RESIZE_OBSERVER_AVAILABLE = false;\n    }\n\n    // Only create an element when ResizeObserver isn't available\n    var options_ = mergeOptions({ createEl: !RESIZE_OBSERVER_AVAILABLE }, options);\n\n    var _this = possibleConstructorReturn(this, _Component.call(this, player, options_));\n\n    _this.ResizeObserver = options.ResizeObserver || window.ResizeObserver;\n    _this.loadListener_ = null;\n    _this.resizeObserver_ = null;\n    _this.debouncedHandler_ = debounce(function () {\n      _this.resizeHandler();\n    }, 100, false, player);\n\n    if (RESIZE_OBSERVER_AVAILABLE) {\n      _this.resizeObserver_ = new _this.ResizeObserver(_this.debouncedHandler_);\n      _this.resizeObserver_.observe(player.el());\n    } else {\n      _this.loadListener_ = function () {\n        if (_this.el_.contentWindow) {\n          on(_this.el_.contentWindow, 'resize', _this.debouncedHandler_);\n        }\n        _this.off('load', _this.loadListener_);\n      };\n\n      _this.on('load', _this.loadListener_);\n    }\n    return _this;\n  }\n\n  ResizeManager.prototype.createEl = function createEl() {\n    return _Component.prototype.createEl.call(this, 'iframe', {\n      className: 'vjs-resize-manager'\n    });\n  };\n\n  /**\n   * Called when a resize is triggered on the iframe or a resize is observed via the ResizeObserver\n   *\n   * @fires Player#playerresize\n   */\n\n\n  ResizeManager.prototype.resizeHandler = function resizeHandler() {\n    /**\n     * Called when the player size has changed\n     *\n     * @event Player#playerresize\n     * @type {EventTarget~Event}\n     */\n    this.player_.trigger('playerresize');\n  };\n\n  ResizeManager.prototype.dispose = function dispose() {\n    if (this.resizeObserver_) {\n      if (this.player_.el()) {\n        this.resizeObserver_.unobserve(this.player_.el());\n      }\n      this.resizeObserver_.disconnect();\n    }\n\n    if (this.el_ && this.el_.contentWindow) {\n      off(this.el_.contentWindow, 'resize', this.debouncedHandler_);\n    }\n\n    if (this.loadListener_) {\n      this.off('load', this.loadListener_);\n    }\n\n    this.ResizeObserver = null;\n    this.resizeObserver = null;\n    this.debouncedHandler_ = null;\n    this.loadListener_ = null;\n  };\n\n  return ResizeManager;\n}(Component);\n\nComponent.registerComponent('ResizeManager', ResizeManager);\n\n/**\n * This function is used to fire a sourceset when there is something\n * similar to `mediaEl.load()` being called. It will try to find the source via\n * the `src` attribute and then the `<source>` elements. It will then fire `sourceset`\n * with the source that was found or empty string if we cannot know. If it cannot\n * find a source then `sourceset` will not be fired.\n *\n * @param {Html5} tech\n *        The tech object that sourceset was setup on\n *\n * @return {boolean}\n *         returns false if the sourceset was not fired and true otherwise.\n */\nvar sourcesetLoad = function sourcesetLoad(tech) {\n  var el = tech.el();\n\n  // if `el.src` is set, that source will be loaded.\n  if (el.hasAttribute('src')) {\n    tech.triggerSourceset(el.src);\n    return true;\n  }\n\n  /**\n   * Since there isn't a src property on the media element, source elements will be used for\n   * implementing the source selection algorithm. This happens asynchronously and\n   * for most cases were there is more than one source we cannot tell what source will\n   * be loaded, without re-implementing the source selection algorithm. At this time we are not\n   * going to do that. There are three special cases that we do handle here though:\n   *\n   * 1. If there are no sources, do not fire `sourceset`.\n   * 2. If there is only one `<source>` with a `src` property/attribute that is our `src`\n   * 3. If there is more than one `<source>` but all of them have the same `src` url.\n   *    That will be our src.\n   */\n  var sources = tech.$$('source');\n  var srcUrls = [];\n  var src = '';\n\n  // if there are no sources, do not fire sourceset\n  if (!sources.length) {\n    return false;\n  }\n\n  // only count valid/non-duplicate source elements\n  for (var i = 0; i < sources.length; i++) {\n    var url = sources[i].src;\n\n    if (url && srcUrls.indexOf(url) === -1) {\n      srcUrls.push(url);\n    }\n  }\n\n  // there were no valid sources\n  if (!srcUrls.length) {\n    return false;\n  }\n\n  // there is only one valid source element url\n  // use that\n  if (srcUrls.length === 1) {\n    src = srcUrls[0];\n  }\n\n  tech.triggerSourceset(src);\n  return true;\n};\n\n/**\n * our implementation of an `innerHTML` descriptor for browsers\n * that do not have one.\n */\nvar innerHTMLDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  innerHTMLDescriptorPolyfill = Object.defineProperty({}, 'innerHTML', {\n    get: function get() {\n      return this.cloneNode(true).innerHTML;\n    },\n    set: function set(v) {\n      // make a dummy node to use innerHTML on\n      var dummy = document.createElement(this.nodeName.toLowerCase());\n\n      // set innerHTML to the value provided\n      dummy.innerHTML = v;\n\n      // make a document fragment to hold the nodes from dummy\n      var docFrag = document.createDocumentFragment();\n\n      // copy all of the nodes created by the innerHTML on dummy\n      // to the document fragment\n      while (dummy.childNodes.length) {\n        docFrag.appendChild(dummy.childNodes[0]);\n      }\n\n      // remove content\n      this.innerText = '';\n\n      // now we add all of that html in one by appending the\n      // document fragment. This is how innerHTML does it.\n      window.Element.prototype.appendChild.call(this, docFrag);\n\n      // then return the result that innerHTML's setter would\n      return this.innerHTML;\n    }\n  });\n}\n/**\n * Get a property descriptor given a list of priorities and the\n * property to get.\n */\nvar getDescriptor = function getDescriptor(priority, prop) {\n  var descriptor = {};\n\n  for (var i = 0; i < priority.length; i++) {\n    descriptor = Object.getOwnPropertyDescriptor(priority[i], prop);\n\n    if (descriptor && descriptor.set && descriptor.get) {\n      break;\n    }\n  }\n\n  descriptor.enumerable = true;\n  descriptor.configurable = true;\n\n  return descriptor;\n};\n\nvar getInnerHTMLDescriptor = function getInnerHTMLDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, window.Element.prototype, innerHTMLDescriptorPolyfill], 'innerHTML');\n};\n\n/**\n * Patches browser internal functions so that we can tell syncronously\n * if a `<source>` was appended to the media element. For some reason this\n * causes a `sourceset` if the the media element is ready and has no source.\n * This happens when:\n * - The page has just loaded and the media element does not have a source.\n * - The media element was emptied of all sources, then `load()` was called.\n *\n * It does this by patching the following functions/properties when they are supported:\n *\n * - `append()` - can be used to add a `<source>` element to the media element\n * - `appendChild()` - can be used to add a `<source>` element to the media element\n * - `insertAdjacentHTML()` -  can be used to add a `<source>` element to the media element\n * - `innerHTML` -  can be used to add a `<source>` element to the media element\n *\n * @param {Html5} tech\n *        The tech object that sourceset is being setup on.\n */\nvar firstSourceWatch = function firstSourceWatch(tech) {\n  var el = tech.el();\n\n  // make sure firstSourceWatch isn't setup twice.\n  if (el.resetSourceWatch_) {\n    return;\n  }\n\n  var old = {};\n  var innerDescriptor = getInnerHTMLDescriptor(tech);\n  var appendWrapper = function appendWrapper(appendFn) {\n    return function () {\n      for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      var retval = appendFn.apply(el, args);\n\n      sourcesetLoad(tech);\n\n      return retval;\n    };\n  };\n\n  ['append', 'appendChild', 'insertAdjacentHTML'].forEach(function (k) {\n    if (!el[k]) {\n      return;\n    }\n\n    // store the old function\n    old[k] = el[k];\n\n    // call the old function with a sourceset if a source\n    // was loaded\n    el[k] = appendWrapper(old[k]);\n  });\n\n  Object.defineProperty(el, 'innerHTML', mergeOptions(innerDescriptor, {\n    set: appendWrapper(innerDescriptor.set)\n  }));\n\n  el.resetSourceWatch_ = function () {\n    el.resetSourceWatch_ = null;\n    Object.keys(old).forEach(function (k) {\n      el[k] = old[k];\n    });\n\n    Object.defineProperty(el, 'innerHTML', innerDescriptor);\n  };\n\n  // on the first sourceset, we need to revert our changes\n  tech.one('sourceset', el.resetSourceWatch_);\n};\n\n/**\n * our implementation of a `src` descriptor for browsers\n * that do not have one.\n */\n\nvar srcDescriptorPolyfill = {};\n\nif (!IS_IE8) {\n  srcDescriptorPolyfill = Object.defineProperty({}, 'src', {\n    get: function get() {\n      if (this.hasAttribute('src')) {\n        return getAbsoluteURL(window.Element.prototype.getAttribute.call(this, 'src'));\n      }\n\n      return '';\n    },\n    set: function set(v) {\n      window.Element.prototype.setAttribute.call(this, 'src', v);\n\n      return v;\n    }\n  });\n}\n\nvar getSrcDescriptor = function getSrcDescriptor(tech) {\n  return getDescriptor([tech.el(), window.HTMLMediaElement.prototype, srcDescriptorPolyfill], 'src');\n};\n\n/**\n * setup `sourceset` handling on the `Html5` tech. This function\n * patches the following element properties/functions:\n *\n * - `src` - to determine when `src` is set\n * - `setAttribute()` - to determine when `src` is set\n * - `load()` - this re-triggers the source selection algorithm, and can\n *              cause a sourceset.\n *\n * If there is no source when we are adding `sourceset` support or during a `load()`\n * we also patch the functions listed in `firstSourceWatch`.\n *\n * @param {Html5} tech\n *        The tech to patch\n */\nvar setupSourceset = function setupSourceset(tech) {\n  if (!tech.featuresSourceset) {\n    return;\n  }\n\n  var el = tech.el();\n\n  // make sure sourceset isn't setup twice.\n  if (el.resetSourceset_) {\n    return;\n  }\n\n  var srcDescriptor = getSrcDescriptor(tech);\n  var oldSetAttribute = el.setAttribute;\n  var oldLoad = el.load;\n\n  Object.defineProperty(el, 'src', mergeOptions(srcDescriptor, {\n    set: function set(v) {\n      var retval = srcDescriptor.set.call(el, v);\n\n      // we use the getter here to get the actual value set on src\n      tech.triggerSourceset(el.src);\n\n      return retval;\n    }\n  }));\n\n  el.setAttribute = function (n, v) {\n    var retval = oldSetAttribute.call(el, n, v);\n\n    if (/src/i.test(n)) {\n      tech.triggerSourceset(el.src);\n    }\n\n    return retval;\n  };\n\n  el.load = function () {\n    var retval = oldLoad.call(el);\n\n    // if load was called, but there was no source to fire\n    // sourceset on. We have to watch for a source append\n    // as that can trigger a `sourceset` when the media element\n    // has no source\n    if (!sourcesetLoad(tech)) {\n      tech.triggerSourceset('');\n      firstSourceWatch(tech);\n    }\n\n    return retval;\n  };\n\n  if (el.currentSrc) {\n    tech.triggerSourceset(el.currentSrc);\n  } else if (!sourcesetLoad(tech)) {\n    firstSourceWatch(tech);\n  }\n\n  el.resetSourceset_ = function () {\n    el.resetSourceset_ = null;\n    el.load = oldLoad;\n    el.setAttribute = oldSetAttribute;\n    Object.defineProperty(el, 'src', srcDescriptor);\n    if (el.resetSourceWatch_) {\n      el.resetSourceWatch_();\n    }\n  };\n};\n\nvar _templateObject$2 = taggedTemplateLiteralLoose(['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.'], ['Text Tracks are being loaded from another origin but the crossorigin attribute isn\\'t used.\\n            This may prevent text tracks from loading.']);\n\n/**\n * @file html5.js\n */\n/**\n * HTML5 Media Controller - Wrapper for HTML5 Media API\n *\n * @mixes Tech~SouceHandlerAdditions\n * @extends Tech\n */\n\nvar Html5 = function (_Tech) {\n  inherits(Html5, _Tech);\n\n  /**\n   * Create an instance of this Tech.\n   *\n   * @param {Object} [options]\n   *        The key/value store of player options.\n   *\n   * @param {Component~ReadyCallback} ready\n   *        Callback function to call when the `HTML5` Tech is ready.\n   */\n  function Html5(options, ready) {\n    classCallCheck(this, Html5);\n\n    var _this = possibleConstructorReturn(this, _Tech.call(this, options, ready));\n\n    var source = options.source;\n    var crossoriginTracks = false;\n\n    // Set the source if one is provided\n    // 1) Check if the source is new (if not, we want to keep the original so playback isn't interrupted)\n    // 2) Check to see if the network state of the tag was failed at init, and if so, reset the source\n    // anyway so the error gets fired.\n    if (source && (_this.el_.currentSrc !== source.src || options.tag && options.tag.initNetworkState_ === 3)) {\n      _this.setSource(source);\n    } else {\n      _this.handleLateInit_(_this.el_);\n    }\n\n    // setup sourceset after late sourceset/init\n    if (options.enableSourceset) {\n      _this.setupSourcesetHandling_();\n    }\n\n    if (_this.el_.hasChildNodes()) {\n\n      var nodes = _this.el_.childNodes;\n      var nodesLength = nodes.length;\n      var removeNodes = [];\n\n      while (nodesLength--) {\n        var node = nodes[nodesLength];\n        var nodeName = node.nodeName.toLowerCase();\n\n        if (nodeName === 'track') {\n          if (!_this.featuresNativeTextTracks) {\n            // Empty video tag tracks so the built-in player doesn't use them also.\n            // This may not be fast enough to stop HTML5 browsers from reading the tags\n            // so we'll need to turn off any default tracks if we're manually doing\n            // captions and subtitles. videoElement.textTracks\n            removeNodes.push(node);\n          } else {\n            // store HTMLTrackElement and TextTrack to remote list\n            _this.remoteTextTrackEls().addTrackElement_(node);\n            _this.remoteTextTracks().addTrack(node.track);\n            _this.textTracks().addTrack(node.track);\n            if (!crossoriginTracks && !_this.el_.hasAttribute('crossorigin') && isCrossOrigin(node.src)) {\n              crossoriginTracks = true;\n            }\n          }\n        }\n      }\n\n      for (var i = 0; i < removeNodes.length; i++) {\n        _this.el_.removeChild(removeNodes[i]);\n      }\n    }\n\n    _this.proxyNativeTracks_();\n    if (_this.featuresNativeTextTracks && crossoriginTracks) {\n      log$1.warn(tsml(_templateObject$2));\n    }\n\n    // prevent iOS Safari from disabling metadata text tracks during native playback\n    _this.restoreMetadataTracksInIOSNativePlayer_();\n\n    // Determine if native controls should be used\n    // Our goal should be to get the custom controls on mobile solid everywhere\n    // so we can remove this all together. Right now this will block custom\n    // controls on touch enabled laptops like the Chrome Pixel\n    if ((TOUCH_ENABLED || IS_IPHONE || IS_NATIVE_ANDROID) && options.nativeControlsForTouch === true) {\n      _this.setControls(true);\n    }\n\n    // on iOS, we want to proxy `webkitbeginfullscreen` and `webkitendfullscreen`\n    // into a `fullscreenchange` event\n    _this.proxyWebkitFullscreen_();\n\n    _this.triggerReady();\n    return _this;\n  }\n\n  /**\n   * Dispose of `HTML5` media element and remove all tracks.\n   */\n\n\n  Html5.prototype.dispose = function dispose() {\n    if (this.el_ && this.el_.resetSourceset_) {\n      this.el_.resetSourceset_();\n    }\n    Html5.disposeMediaElement(this.el_);\n    this.options_ = null;\n\n    // tech will handle clearing of the emulated track list\n    _Tech.prototype.dispose.call(this);\n  };\n\n  /**\n   * Modify the media element so that we can detect when\n   * the source is changed. Fires `sourceset` just after the source has changed\n   */\n\n\n  Html5.prototype.setupSourcesetHandling_ = function setupSourcesetHandling_() {\n    setupSourceset(this);\n  };\n\n  /**\n   * When a captions track is enabled in the iOS Safari native player, all other\n   * tracks are disabled (including metadata tracks), which nulls all of their\n   * associated cue points. This will restore metadata tracks to their pre-fullscreen\n   * state in those cases so that cue points are not needlessly lost.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.restoreMetadataTracksInIOSNativePlayer_ = function restoreMetadataTracksInIOSNativePlayer_() {\n    var textTracks = this.textTracks();\n    var metadataTracksPreFullscreenState = void 0;\n\n    // captures a snapshot of every metadata track's current state\n    var takeMetadataTrackSnapshot = function takeMetadataTrackSnapshot() {\n      metadataTracksPreFullscreenState = [];\n\n      for (var i = 0; i < textTracks.length; i++) {\n        var track = textTracks[i];\n\n        if (track.kind === 'metadata') {\n          metadataTracksPreFullscreenState.push({\n            track: track,\n            storedMode: track.mode\n          });\n        }\n      }\n    };\n\n    // snapshot each metadata track's initial state, and update the snapshot\n    // each time there is a track 'change' event\n    takeMetadataTrackSnapshot();\n    textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n    this.on('dispose', function () {\n      return textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n    });\n\n    var restoreTrackMode = function restoreTrackMode() {\n      for (var i = 0; i < metadataTracksPreFullscreenState.length; i++) {\n        var storedTrack = metadataTracksPreFullscreenState[i];\n\n        if (storedTrack.track.mode === 'disabled' && storedTrack.track.mode !== storedTrack.storedMode) {\n          storedTrack.track.mode = storedTrack.storedMode;\n        }\n      }\n      // we only want this handler to be executed on the first 'change' event\n      textTracks.removeEventListener('change', restoreTrackMode);\n    };\n\n    // when we enter fullscreen playback, stop updating the snapshot and\n    // restore all track modes to their pre-fullscreen state\n    this.on('webkitbeginfullscreen', function () {\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', restoreTrackMode);\n      textTracks.addEventListener('change', restoreTrackMode);\n    });\n\n    // start updating the snapshot again after leaving fullscreen\n    this.on('webkitendfullscreen', function () {\n      // remove the listener before adding it just in case it wasn't previously removed\n      textTracks.removeEventListener('change', takeMetadataTrackSnapshot);\n      textTracks.addEventListener('change', takeMetadataTrackSnapshot);\n\n      // remove the restoreTrackMode handler in case it wasn't triggered during fullscreen playback\n      textTracks.removeEventListener('change', restoreTrackMode);\n    });\n  };\n\n  /**\n   * Proxy all native track list events to our track lists if the browser we are playing\n   * in supports that type of track list.\n   *\n   * @private\n   */\n\n\n  Html5.prototype.proxyNativeTracks_ = function proxyNativeTracks_() {\n    var _this2 = this;\n\n    NORMAL.names.forEach(function (name) {\n      var props = NORMAL[name];\n      var elTracks = _this2.el()[props.getterName];\n      var techTracks = _this2[props.getterName]();\n\n      if (!_this2['featuresNative' + props.capitalName + 'Tracks'] || !elTracks || !elTracks.addEventListener) {\n        return;\n      }\n      var listeners = {\n        change: function change(e) {\n          techTracks.trigger({\n            type: 'change',\n            target: techTracks,\n            currentTarget: techTracks,\n            srcElement: techTracks\n          });\n        },\n        addtrack: function addtrack(e) {\n          techTracks.addTrack(e.track);\n        },\n        removetrack: function removetrack(e) {\n          techTracks.removeTrack(e.track);\n        }\n      };\n      var removeOldTracks = function removeOldTracks() {\n        var removeTracks = [];\n\n        for (var i = 0; i < techTracks.length; i++) {\n          var found = false;\n\n          for (var j = 0; j < elTracks.length; j++) {\n            if (elTracks[j] === techTracks[i]) {\n              found = true;\n              break;\n            }\n          }\n\n          if (!found) {\n            removeTracks.push(techTracks[i]);\n          }\n        }\n\n        while (removeTracks.length) {\n          techTracks.removeTrack(removeTracks.shift());\n        }\n      };\n\n      Object.keys(listeners).forEach(function (eventName) {\n        var listener = listeners[eventName];\n\n        elTracks.addEventListener(eventName, listener);\n        _this2.on('dispose', function (e) {\n          return elTracks.removeEventListener(eventName, listener);\n        });\n      });\n\n      // Remove (native) tracks that are not used anymore\n      _this2.on('loadstart', removeOldTracks);\n      _this2.on('dispose', function (e) {\n        return _this2.off('loadstart', removeOldTracks);\n      });\n    });\n  };\n\n  /**\n   * Create the `Html5` Tech's DOM element.\n   *\n   * @return {Element}\n   *         The element that gets created.\n   */\n\n\n  Html5.prototype.createEl = function createEl$$1() {\n    var el = this.options_.tag;\n\n    // Check if this browser supports moving the element into the box.\n    // On the iPhone video will break if you move the element,\n    // So we have to create a brand new element.\n    // If we ingested the player div, we do not need to move the media element.\n    if (!el || !(this.options_.playerElIngest || this.movingMediaElementInDOM)) {\n\n      // If the original tag is still there, clone and remove it.\n      if (el) {\n        var clone = el.cloneNode(true);\n\n        if (el.parentNode) {\n          el.parentNode.insertBefore(clone, el);\n        }\n        Html5.disposeMediaElement(el);\n        el = clone;\n      } else {\n        el = document.createElement('video');\n\n        // determine if native controls should be used\n        var tagAttributes = this.options_.tag && getAttributes(this.options_.tag);\n        var attributes = mergeOptions({}, tagAttributes);\n\n        if (!TOUCH_ENABLED || this.options_.nativeControlsForTouch !== true) {\n          delete attributes.controls;\n        }\n\n        setAttributes(el, assign(attributes, {\n          id: this.options_.techId,\n          'class': 'vjs-tech'\n        }));\n      }\n\n      el.playerId = this.options_.playerId;\n    }\n\n    if (typeof this.options_.preload !== 'undefined') {\n      setAttribute(el, 'preload', this.options_.preload);\n    }\n\n    // Update specific tag settings, in case they were overridden\n    // `autoplay` has to be *last* so that `muted` and `playsinline` are present\n    // when iOS/Safari or other browsers attempt to autoplay.\n    var settingsAttrs = ['loop', 'muted', 'playsinline', 'autoplay'];\n\n    for (var i = 0; i < settingsAttrs.length; i++) {\n      var attr = settingsAttrs[i];\n      var value = this.options_[attr];\n\n      if (typeof value !== 'undefined') {\n        if (value) {\n          setAttribute(el, attr, attr);\n        } else {\n          removeAttribute(el, attr);\n        }\n        el[attr] = value;\n      }\n    }\n\n    return el;\n  };\n\n  /**\n   * This will be triggered if the loadstart event has already fired, before videojs was\n   * ready. Two known examples of when this can happen are:\n   * 1. If we're loading the playback object after it has started loading\n   * 2. The media is already playing the (often with autoplay on) then\n   *\n   * This function will fire another loadstart so that videojs can catchup.\n   *\n   * @fires Tech#loadstart\n   *\n   * @return {undefined}\n   *         returns nothing.\n   */\n\n\n  Html5.prototype.handleLateInit_ = function handleLateInit_(el) {\n    if (el.networkState === 0 || el.networkState === 3) {\n      // The video element hasn't started loading the source yet\n      // or didn't find a source\n      return;\n    }\n\n    if (el.readyState === 0) {\n      // NetworkState is set synchronously BUT loadstart is fired at the\n      // end of the current stack, usually before setInterval(fn, 0).\n      // So at this point we know loadstart may have already fired or is\n      // about to fire, and either way the player hasn't seen it yet.\n      // We don't want to fire loadstart prematurely here and cause a\n      // double loadstart so we'll wait and see if it happens between now\n      // and the next loop, and fire it if not.\n      // HOWEVER, we also want to make sure it fires before loadedmetadata\n      // which could also happen between now and the next loop, so we'll\n      // watch for that also.\n      var loadstartFired = false;\n      var setLoadstartFired = function setLoadstartFired() {\n        loadstartFired = true;\n      };\n\n      this.on('loadstart', setLoadstartFired);\n\n      var triggerLoadstart = function triggerLoadstart() {\n        // We did miss the original loadstart. Make sure the player\n        // sees loadstart before loadedmetadata\n        if (!loadstartFired) {\n          this.trigger('loadstart');\n        }\n      };\n\n      this.on('loadedmetadata', triggerLoadstart);\n\n      this.ready(function () {\n        this.off('loadstart', setLoadstartFired);\n        this.off('loadedmetadata', triggerLoadstart);\n\n        if (!loadstartFired) {\n          // We did miss the original native loadstart. Fire it now.\n          this.trigger('loadstart');\n        }\n      });\n\n      return;\n    }\n\n    // From here on we know that loadstart already fired and we missed it.\n    // The other readyState events aren't as much of a problem if we double\n    // them, so not going to go to as much trouble as loadstart to prevent\n    // that unless we find reason to.\n    var eventsToTrigger = ['loadstart'];\n\n    // loadedmetadata: newly equal to HAVE_METADATA (1) or greater\n    eventsToTrigger.push('loadedmetadata');\n\n    // loadeddata: newly increased to HAVE_CURRENT_DATA (2) or greater\n    if (el.readyState >= 2) {\n      eventsToTrigger.push('loadeddata');\n    }\n\n    // canplay: newly increased to HAVE_FUTURE_DATA (3) or greater\n    if (el.readyState >= 3) {\n      eventsToTrigger.push('canplay');\n    }\n\n    // canplaythrough: newly equal to HAVE_ENOUGH_DATA (4)\n    if (el.readyState >= 4) {\n      eventsToTrigger.push('canplaythrough');\n    }\n\n    // We still need to give the player time to add event listeners\n    this.ready(function () {\n      eventsToTrigger.forEach(function (type) {\n        this.trigger(type);\n      }, this);\n    });\n  };\n\n  /**\n   * Set current time for the `HTML5` tech.\n   *\n   * @param {number} seconds\n   *        Set the current time of the media to this.\n   */\n\n\n  Html5.prototype.setCurrentTime = function setCurrentTime(seconds) {\n    try {\n      this.el_.currentTime = seconds;\n    } catch (e) {\n      log$1(e, 'Video is not ready. (Video.js)');\n      // this.warning(VideoJS.warnings.videoNotReady);\n    }\n  };\n\n  /**\n   * Get the current duration of the HTML5 media element.\n   *\n   * @return {number}\n   *         The duration of the media or 0 if there is no duration.\n   */\n\n\n  Html5.prototype.duration = function duration() {\n    var _this3 = this;\n\n    // Android Chrome will report duration as Infinity for VOD HLS until after\n    // playback has started, which triggers the live display erroneously.\n    // Return NaN if playback has not started and trigger a durationupdate once\n    // the duration can be reliably known.\n    if (this.el_.duration === Infinity && IS_ANDROID && IS_CHROME && this.el_.currentTime === 0) {\n      // Wait for the first `timeupdate` with currentTime > 0 - there may be\n      // several with 0\n      var checkProgress = function checkProgress() {\n        if (_this3.el_.currentTime > 0) {\n          // Trigger durationchange for genuinely live video\n          if (_this3.el_.duration === Infinity) {\n            _this3.trigger('durationchange');\n          }\n          _this3.off('timeupdate', checkProgress);\n        }\n      };\n\n      this.on('timeupdate', checkProgress);\n      return NaN;\n    }\n    return this.el_.duration || NaN;\n  };\n\n  /**\n   * Get the current width of the HTML5 media element.\n   *\n   * @return {number}\n   *         The width of the HTML5 media element.\n   */\n\n\n  Html5.prototype.width = function width() {\n    return this.el_.offsetWidth;\n  };\n\n  /**\n   * Get the current height of the HTML5 media element.\n   *\n   * @return {number}\n   *         The heigth of the HTML5 media element.\n   */\n\n\n  Html5.prototype.height = function height() {\n    return this.el_.offsetHeight;\n  };\n\n  /**\n   * Proxy iOS `webkitbeginfullscreen` and `webkitendfullscreen` into\n   * `fullscreenchange` event.\n   *\n   * @private\n   * @fires fullscreenchange\n   * @listens webkitendfullscreen\n   * @listens webkitbeginfullscreen\n   * @listens webkitbeginfullscreen\n   */\n\n\n  Html5.prototype.proxyWebkitFullscreen_ = function proxyWebkitFullscreen_() {\n    var _this4 = this;\n\n    if (!('webkitDisplayingFullscreen' in this.el_)) {\n      return;\n    }\n\n    var endFn = function endFn() {\n      this.trigger('fullscreenchange', { isFullscreen: false });\n    };\n\n    var beginFn = function beginFn() {\n      if ('webkitPresentationMode' in this.el_ && this.el_.webkitPresentationMode !== 'picture-in-picture') {\n        this.one('webkitendfullscreen', endFn);\n\n        this.trigger('fullscreenchange', { isFullscreen: true });\n      }\n    };\n\n    this.on('webkitbeginfullscreen', beginFn);\n    this.on('dispose', function () {\n      _this4.off('webkitbeginfullscreen', beginFn);\n      _this4.off('webkitendfullscreen', endFn);\n    });\n  };\n\n  /**\n   * Check if fullscreen is supported on the current playback device.\n   *\n   * @return {boolean}\n   *         - True if fullscreen is supported.\n   *         - False if fullscreen is not supported.\n   */\n\n\n  Html5.prototype.supportsFullScreen = function supportsFullScreen() {\n    if (typeof this.el_.webkitEnterFullScreen === 'function') {\n      var userAgent = window.navigator && window.navigator.userAgent || '';\n\n      // Seems to be broken in Chromium/Chrome && Safari in Leopard\n      if (/Android/.test(userAgent) || !/Chrome|Mac OS X 10.5/.test(userAgent)) {\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Request that the `HTML5` Tech enter fullscreen.\n   */\n\n\n  Html5.prototype.enterFullScreen = function enterFullScreen() {\n    var video = this.el_;\n\n    if (video.paused && video.networkState <= video.HAVE_METADATA) {\n      // attempt to prime the video element for programmatic access\n      // this isn't necessary on the desktop but shouldn't hurt\n      this.el_.play();\n\n      // playing and pausing synchronously during the transition to fullscreen\n      // can get iOS ~6.1 devices into a play/pause loop\n      this.setTimeout(function () {\n        video.pause();\n        video.webkitEnterFullScreen();\n      }, 0);\n    } else {\n      video.webkitEnterFullScreen();\n    }\n  };\n\n  /**\n   * Request that the `HTML5` Tech exit fullscreen.\n   */\n\n\n  Html5.prototype.exitFullScreen = function exitFullScreen() {\n    this.el_.webkitExitFullScreen();\n  };\n\n  /**\n   * A getter/setter for the `Html5` Tech's source object.\n   * > Note: Please use {@link Html5#setSource}\n   *\n   * @param {Tech~SourceObject} [src]\n   *        The source object you want to set on the `HTML5` techs element.\n   *\n   * @return {Tech~SourceObject|undefined}\n   *         - The current source object when a source is not passed in.\n   *         - undefined when setting\n   *\n   * @deprecated Since version 5.\n   */\n\n\n  Html5.prototype.src = function src(_src) {\n    if (_src === undefined) {\n      return this.el_.src;\n    }\n\n    // Setting src through `src` instead of `setSrc` will be deprecated\n    this.setSrc(_src);\n  };\n\n  /**\n   * Reset the tech by removing all sources and then calling\n   * {@link Html5.resetMediaElement}.\n   */\n\n\n  Html5.prototype.reset = function reset() {\n    Html5.resetMediaElement(this.el_);\n  };\n\n  /**\n   * Get the current source on the `HTML5` Tech. Falls back to returning the source from\n   * the HTML5 media element.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object from the HTML5 tech. With a fallback to the\n   *         elements source.\n   */\n\n\n  Html5.prototype.currentSrc = function currentSrc() {\n    if (this.currentSource_) {\n      return this.currentSource_.src;\n    }\n    return this.el_.currentSrc;\n  };\n\n  /**\n   * Set controls attribute for the HTML5 media Element.\n   *\n   * @param {string} val\n   *        Value to set the controls attribute to\n   */\n\n\n  Html5.prototype.setControls = function setControls(val) {\n    this.el_.controls = !!val;\n  };\n\n  /**\n   * Create and returns a remote {@link TextTrack} object.\n   *\n   * @param {string} kind\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata)\n   *\n   * @param {string} [label]\n   *        Label to identify the text track\n   *\n   * @param {string} [language]\n   *        Two letter language abbreviation\n   *\n   * @return {TextTrack}\n   *         The TextTrack that gets created.\n   */\n\n\n  Html5.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.addTextTrack.call(this, kind, label, language);\n    }\n\n    return this.el_.addTextTrack(kind, label, language);\n  };\n\n  /**\n   * Creates either native TextTrack or an emulated TextTrack depending\n   * on the value of `featuresNativeTextTracks`\n   *\n   * @param {Object} options\n   *        The object should contain the options to intialize the TextTrack with.\n   *\n   * @param {string} [options.kind]\n   *        `TextTrack` kind (subtitles, captions, descriptions, chapters, or metadata).\n   *\n   * @param {string} [options.label].\n   *        Label to identify the text track\n   *\n   * @param {string} [options.language]\n   *        Two letter language abbreviation.\n   *\n   * @param {boolean} [options.default]\n   *        Default this track to on.\n   *\n   * @param {string} [options.id]\n   *        The internal id to assign this track.\n   *\n   * @param {string} [options.src]\n   *        A source url for the track.\n   *\n   * @return {HTMLTrackElement}\n   *         The track element that gets created.\n   */\n\n\n  Html5.prototype.createRemoteTextTrack = function createRemoteTextTrack(options) {\n    if (!this.featuresNativeTextTracks) {\n      return _Tech.prototype.createRemoteTextTrack.call(this, options);\n    }\n    var htmlTrackElement = document.createElement('track');\n\n    if (options.kind) {\n      htmlTrackElement.kind = options.kind;\n    }\n    if (options.label) {\n      htmlTrackElement.label = options.label;\n    }\n    if (options.language || options.srclang) {\n      htmlTrackElement.srclang = options.language || options.srclang;\n    }\n    if (options['default']) {\n      htmlTrackElement['default'] = options['default'];\n    }\n    if (options.id) {\n      htmlTrackElement.id = options.id;\n    }\n    if (options.src) {\n      htmlTrackElement.src = options.src;\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Creates a remote text track object and returns an html track element.\n   *\n   * @param {Object} options The object should contain values for\n   * kind, language, label, and src (location of the WebVTT file)\n   * @param {Boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   * automatically removed from the video element whenever the source changes\n   * @return {HTMLTrackElement} An Html Track Element.\n   * This can be an emulated {@link HTMLTrackElement} or a native one.\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   * to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Html5.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    var htmlTrackElement = _Tech.prototype.addRemoteTextTrack.call(this, options, manualCleanup);\n\n    if (this.featuresNativeTextTracks) {\n      this.el().appendChild(htmlTrackElement);\n    }\n\n    return htmlTrackElement;\n  };\n\n  /**\n   * Remove remote `TextTrack` from `TextTrackList` object\n   *\n   * @param {TextTrack} track\n   *        `TextTrack` object to remove\n   */\n\n\n  Html5.prototype.removeRemoteTextTrack = function removeRemoteTextTrack(track) {\n    _Tech.prototype.removeRemoteTextTrack.call(this, track);\n\n    if (this.featuresNativeTextTracks) {\n      var tracks = this.$$('track');\n\n      var i = tracks.length;\n\n      while (i--) {\n        if (track === tracks[i] || track === tracks[i].track) {\n          this.el().removeChild(tracks[i]);\n        }\n      }\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object}\n   *         An object with supported media playback quality metrics\n   */\n\n\n  Html5.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    if (typeof this.el().getVideoPlaybackQuality === 'function') {\n      return this.el().getVideoPlaybackQuality();\n    }\n\n    var videoPlaybackQuality = {};\n\n    if (typeof this.el().webkitDroppedFrameCount !== 'undefined' && typeof this.el().webkitDecodedFrameCount !== 'undefined') {\n      videoPlaybackQuality.droppedVideoFrames = this.el().webkitDroppedFrameCount;\n      videoPlaybackQuality.totalVideoFrames = this.el().webkitDecodedFrameCount;\n    }\n\n    if (window.performance && typeof window.performance.now === 'function') {\n      videoPlaybackQuality.creationTime = window.performance.now();\n    } else if (window.performance && window.performance.timing && typeof window.performance.timing.navigationStart === 'number') {\n      videoPlaybackQuality.creationTime = window.Date.now() - window.performance.timing.navigationStart;\n    }\n\n    return videoPlaybackQuality;\n  };\n\n  return Html5;\n}(Tech);\n\n/* HTML5 Support Testing ---------------------------------------------------- */\n\nif (isReal()) {\n\n  /**\n   * Element for testing browser HTML5 media capabilities\n   *\n   * @type {Element}\n   * @constant\n   * @private\n   */\n  Html5.TEST_VID = document.createElement('video');\n  var track = document.createElement('track');\n\n  track.kind = 'captions';\n  track.srclang = 'en';\n  track.label = 'English';\n  Html5.TEST_VID.appendChild(track);\n}\n\n/**\n * Check if HTML5 media is supported by this browser/device.\n *\n * @return {boolean}\n *         - True if HTML5 media is supported.\n *         - False if HTML5 media is not supported.\n */\nHtml5.isSupported = function () {\n  // IE9 with no Media Player is a LIAR! (#984)\n  try {\n    Html5.TEST_VID.volume = 0.5;\n  } catch (e) {\n    return false;\n  }\n\n  return !!(Html5.TEST_VID && Html5.TEST_VID.canPlayType);\n};\n\n/**\n * Check if the tech can support the given type\n *\n * @param {string} type\n *        The mimetype to check\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlayType = function (type) {\n  return Html5.TEST_VID.canPlayType(type);\n};\n\n/**\n * Check if the tech can support the given source\n * @param {Object} srcObj\n *        The source object\n * @param {Object} options\n *        The options passed to the tech\n * @return {string} 'probably', 'maybe', or '' (empty string)\n */\nHtml5.canPlaySource = function (srcObj, options) {\n  return Html5.canPlayType(srcObj.type);\n};\n\n/**\n * Check if the volume can be changed in this browser/device.\n * Volume cannot be changed in a lot of mobile devices.\n * Specifically, it can't be changed from 1 on iOS.\n *\n * @return {boolean}\n *         - True if volume can be controlled\n *         - False otherwise\n */\nHtml5.canControlVolume = function () {\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var volume = Html5.TEST_VID.volume;\n\n    Html5.TEST_VID.volume = volume / 2 + 0.1;\n    return volume !== Html5.TEST_VID.volume;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the volume can be muted in this browser/device.\n * Some devices, e.g. iOS, don't allow changing volume\n * but permits muting/unmuting.\n *\n * @return {bolean}\n *      - True if volume can be muted\n *      - False otherwise\n */\nHtml5.canMuteVolume = function () {\n  try {\n    var muted = Html5.TEST_VID.muted;\n\n    // in some versions of iOS muted property doesn't always\n    // work, so we want to set both property and attribute\n    Html5.TEST_VID.muted = !muted;\n    if (Html5.TEST_VID.muted) {\n      setAttribute(Html5.TEST_VID, 'muted', 'muted');\n    } else {\n      removeAttribute(Html5.TEST_VID, 'muted', 'muted');\n    }\n    return muted !== Html5.TEST_VID.muted;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if the playback rate can be changed in this browser/device.\n *\n * @return {boolean}\n *         - True if playback rate can be controlled\n *         - False otherwise\n */\nHtml5.canControlPlaybackRate = function () {\n  // Playback rate API is implemented in Android Chrome, but doesn't do anything\n  // https://github.com/videojs/video.js/issues/3180\n  if (IS_ANDROID && IS_CHROME && CHROME_VERSION < 58) {\n    return false;\n  }\n  // IE will error if Windows Media Player not installed #3315\n  try {\n    var playbackRate = Html5.TEST_VID.playbackRate;\n\n    Html5.TEST_VID.playbackRate = playbackRate / 2 + 0.1;\n    return playbackRate !== Html5.TEST_VID.playbackRate;\n  } catch (e) {\n    return false;\n  }\n};\n\n/**\n * Check if we can override a video/audio elements attributes, with\n * Object.defineProperty.\n *\n * @return {boolean}\n *         - True if builtin attributes can be overriden\n *         - False otherwise\n */\nHtml5.canOverrideAttributes = function () {\n  if (IS_IE8) {\n    return false;\n  }\n  // if we cannot overwrite the src/innerHTML property, there is no support\n  // iOS 7 safari for instance cannot do this.\n  try {\n    var noop = function noop() {};\n\n    Object.defineProperty(document.createElement('video'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'src', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('video'), 'innerHTML', { get: noop, set: noop });\n    Object.defineProperty(document.createElement('audio'), 'innerHTML', { get: noop, set: noop });\n  } catch (e) {\n    return false;\n  }\n\n  return true;\n};\n\n/**\n * Check to see if native `TextTrack`s are supported by this browser/device.\n *\n * @return {boolean}\n *         - True if native `TextTrack`s are supported.\n *         - False otherwise\n */\nHtml5.supportsNativeTextTracks = function () {\n  return IS_ANY_SAFARI || IS_IOS && IS_CHROME;\n};\n\n/**\n * Check to see if native `VideoTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `VideoTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeVideoTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.videoTracks);\n};\n\n/**\n * Check to see if native `AudioTrack`s are supported by this browser/device\n *\n * @return {boolean}\n *        - True if native `AudioTrack`s are supported.\n *        - False otherwise\n */\nHtml5.supportsNativeAudioTracks = function () {\n  return !!(Html5.TEST_VID && Html5.TEST_VID.audioTracks);\n};\n\n/**\n * An array of events available on the Html5 tech.\n *\n * @private\n * @type {Array}\n */\nHtml5.Events = ['loadstart', 'suspend', 'abort', 'error', 'emptied', 'stalled', 'loadedmetadata', 'loadeddata', 'canplay', 'canplaythrough', 'playing', 'waiting', 'seeking', 'seeked', 'ended', 'durationchange', 'timeupdate', 'progress', 'play', 'pause', 'ratechange', 'resize', 'volumechange'];\n\n/**\n * Boolean indicating whether the `Tech` supports volume control.\n *\n * @type {boolean}\n * @default {@link Html5.canControlVolume}\n */\nHtml5.prototype.featuresVolumeControl = Html5.canControlVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports muting volume.\n *\n * @type {bolean}\n * @default {@link Html5.canMuteVolume}\n */\nHtml5.prototype.featuresMuteControl = Html5.canMuteVolume();\n\n/**\n * Boolean indicating whether the `Tech` supports changing the speed at which the media\n * plays. Examples:\n *   - Set player to play 2x (twice) as fast\n *   - Set player to play 0.5x (half) as fast\n *\n * @type {boolean}\n * @default {@link Html5.canControlPlaybackRate}\n */\nHtml5.prototype.featuresPlaybackRate = Html5.canControlPlaybackRate();\n\n/**\n * Boolean indicating wether the `Tech` supports the `sourceset` event.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresSourceset = Html5.canOverrideAttributes();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the media element\n * moving in the DOM. iOS breaks if you move the media element, so this is set this to\n * false there. Everywhere else this should be true.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.movingMediaElementInDOM = !IS_IOS;\n\n// TODO: Previous comment: No longer appears to be used. Can probably be removed.\n//       Is this true?\n/**\n * Boolean indicating whether the `HTML5` tech currently supports automatic media resize\n * when going into fullscreen.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresFullscreenResize = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the progress event.\n * If this is false, manual `progress` events will be triggred instead.\n *\n * @type {boolean}\n * @default\n */\nHtml5.prototype.featuresProgressEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports the timeupdate event.\n * If this is false, manual `timeupdate` events will be triggred instead.\n *\n * @default\n */\nHtml5.prototype.featuresTimeupdateEvents = true;\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `TextTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeTextTracks}\n */\nHtml5.prototype.featuresNativeTextTracks = Html5.supportsNativeTextTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `VideoTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeVideoTracks}\n */\nHtml5.prototype.featuresNativeVideoTracks = Html5.supportsNativeVideoTracks();\n\n/**\n * Boolean indicating whether the `HTML5` tech currently supports native `AudioTrack`s.\n *\n * @type {boolean}\n * @default {@link Html5.supportsNativeAudioTracks}\n */\nHtml5.prototype.featuresNativeAudioTracks = Html5.supportsNativeAudioTracks();\n\n// HTML5 Feature detection and Device Fixes --------------------------------- //\nvar canPlayType = Html5.TEST_VID && Html5.TEST_VID.constructor.prototype.canPlayType;\nvar mpegurlRE = /^application\\/(?:x-|vnd\\.apple\\.)mpegurl/i;\nvar mp4RE = /^video\\/mp4/i;\n\nHtml5.patchCanPlayType = function () {\n\n  // Android 4.0 and above can play HLS to some extent but it reports being unable to do so\n  // Firefox and Chrome report correctly\n  if (ANDROID_VERSION >= 4.0 && !IS_FIREFOX && !IS_CHROME) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mpegurlRE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n\n    // Override Android 2.2 and less canPlayType method which is broken\n  } else if (IS_OLD_ANDROID) {\n    Html5.TEST_VID.constructor.prototype.canPlayType = function (type) {\n      if (type && mp4RE.test(type)) {\n        return 'maybe';\n      }\n      return canPlayType.call(this, type);\n    };\n  }\n};\n\nHtml5.unpatchCanPlayType = function () {\n  var r = Html5.TEST_VID.constructor.prototype.canPlayType;\n\n  Html5.TEST_VID.constructor.prototype.canPlayType = canPlayType;\n  return r;\n};\n\n// by default, patch the media element\nHtml5.patchCanPlayType();\n\nHtml5.disposeMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  if (el.parentNode) {\n    el.parentNode.removeChild(el);\n  }\n\n  // remove any child track or source nodes to prevent their loading\n  while (el.hasChildNodes()) {\n    el.removeChild(el.firstChild);\n  }\n\n  // remove any src reference. not setting `src=''` because that causes a warning\n  // in firefox\n  el.removeAttribute('src');\n\n  // force the media element to update its loading state by calling load()\n  // however IE on Windows 7N has a bug that throws an error so need a try/catch (#793)\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // not supported\n      }\n    })();\n  }\n};\n\nHtml5.resetMediaElement = function (el) {\n  if (!el) {\n    return;\n  }\n\n  var sources = el.querySelectorAll('source');\n  var i = sources.length;\n\n  while (i--) {\n    el.removeChild(sources[i]);\n  }\n\n  // remove any src reference.\n  // not setting `src=''` because that throws an error\n  el.removeAttribute('src');\n\n  if (typeof el.load === 'function') {\n    // wrapping in an iife so it's not deoptimized (#1060#discussion_r10324473)\n    (function () {\n      try {\n        el.load();\n      } catch (e) {\n        // satisfy linter\n      }\n    })();\n  }\n};\n\n/* Native HTML5 element property wrapping ----------------------------------- */\n// Wrap native boolean attributes with getters that check both property and attribute\n// The list is as followed:\n// muted, defaultMuted, autoplay, controls, loop, playsinline\n[\n/**\n * Get the value of `muted` from the media element. `muted` indicates\n * that the volume for the media should be set to silent. This does not actually change\n * the `volume` attribute.\n *\n * @method Html5#muted\n * @return {boolean}\n *         - True if the value of `volume` should be ignored and the audio set to silent.\n *         - False if the value of `volume` should be used.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Get the value of `defaultMuted` from the media element. `defaultMuted` indicates\n * whether the media should start muted or not. Only changes the default state of the\n * media. `muted` and `defaultMuted` can have different values. {@link Html5#muted} indicates the\n * current state.\n *\n * @method Html5#defaultMuted\n * @return {boolean}\n *         - The value of `defaultMuted` from the media element.\n *         - True indicates that the media should start muted.\n *         - False indicates that the media should not start muted\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Get the value of `autoplay` from the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#autoplay\n * @return {boolean}\n *         - The value of `autoplay` from the media element.\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Get the value of `controls` from the media element. `controls` indicates\n * whether the native media controls should be shown or hidden.\n *\n * @method Html5#controls\n * @return {boolean}\n *         - The value of `controls` from the media element.\n *         - True indicates that native controls should be showing.\n *         - False indicates that native controls should be hidden.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-controls}\n */\n'controls',\n\n/**\n * Get the value of `loop` from the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#loop\n * @return {boolean}\n *         - The value of `loop` from the media element.\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Get the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#playsinline\n * @return {boolean}\n *         - The value of `playsinline` from the media element.\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop] || this.el_.hasAttribute(prop);\n  };\n});\n\n// Wrap native boolean attributes with setters that set both property and attribute\n// The list is as followed:\n// setMuted, setDefaultMuted, setAutoplay, setLoop, setPlaysinline\n// setControls is special-cased above\n[\n/**\n * Set the value of `muted` on the media element. `muted` indicates that the current\n * audio level should be silent.\n *\n * @method Html5#setMuted\n * @param {boolean} muted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-muted}\n */\n'muted',\n\n/**\n * Set the value of `defaultMuted` on the media element. `defaultMuted` indicates that the current\n * audio level should be silent, but will only effect the muted level on intial playback..\n *\n * @method Html5.prototype.setDefaultMuted\n * @param {boolean} defaultMuted\n *        - True if the audio should be set to silent\n *        - False otherwise\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultmuted}\n */\n'defaultMuted',\n\n/**\n * Set the value of `autoplay` on the media element. `autoplay` indicates\n * that the media should start to play as soon as the page is ready.\n *\n * @method Html5#setAutoplay\n * @param {boolean} autoplay\n *         - True indicates that the media should start as soon as the page loads.\n *         - False indicates that the media should not start as soon as the page loads.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-autoplay}\n */\n'autoplay',\n\n/**\n * Set the value of `loop` on the media element. `loop` indicates\n * that the media should return to the start of the media and continue playing once\n * it reaches the end.\n *\n * @method Html5#setLoop\n * @param {boolean} loop\n *         - True indicates that playback should seek back to start once\n *           the end of a media is reached.\n *         - False indicates that playback should not loop back to the start when the\n *           end of the media is reached.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-loop}\n */\n'loop',\n\n/**\n * Set the value of `playsinline` from the media element. `playsinline` indicates\n * to the browser that non-fullscreen playback is preferred when fullscreen\n * playback is the native default, such as in iOS Safari.\n *\n * @method Html5#setPlaysinline\n * @param {boolean} playsinline\n *         - True indicates that the media should play inline.\n *         - False indicates that the media should not play inline.\n *\n * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n */\n'playsinline'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n\n    if (v) {\n      this.el_.setAttribute(prop, prop);\n    } else {\n      this.el_.removeAttribute(prop);\n    }\n  };\n});\n\n// Wrap native properties with a getter\n// The list is as followed\n// paused, currentTime, buffered, volume, poster, preload, error, seeking\n// seekable, ended, playbackRate, defaultPlaybackRate, played, networkState\n// readyState, videoWidth, videoHeight\n[\n/**\n * Get the value of `paused` from the media element. `paused` indicates whether the media element\n * is currently paused or not.\n *\n * @method Html5#paused\n * @return {boolean}\n *         The value of `paused` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-paused}\n */\n'paused',\n\n/**\n * Get the value of `currentTime` from the media element. `currentTime` indicates\n * the current second that the media is at in playback.\n *\n * @method Html5#currentTime\n * @return {number}\n *         The value of `currentTime` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-currenttime}\n */\n'currentTime',\n\n/**\n * Get the value of `buffered` from the media element. `buffered` is a `TimeRange`\n * object that represents the parts of the media that are already downloaded and\n * available for playback.\n *\n * @method Html5#buffered\n * @return {TimeRange}\n *         The value of `buffered` from the media element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-buffered}\n */\n'buffered',\n\n/**\n * Get the value of `volume` from the media element. `volume` indicates\n * the current playback volume of audio for a media. `volume` will be a value from 0\n * (silent) to 1 (loudest and default).\n *\n * @method Html5#volume\n * @return {number}\n *         The value of `volume` from the media element. Value will be between 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Get the value of `poster` from the media element. `poster` indicates\n * that the url of an image file that can/will be shown when no media data is available.\n *\n * @method Html5#poster\n * @return {string}\n *         The value of `poster` from the media element. Value will be a url to an\n *         image.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-video-poster}\n */\n'poster',\n\n/**\n * Get the value of `preload` from the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#preload\n * @return {string}\n *         The value of `preload` from the media element. Will be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Get the value of the `error` from the media element. `error` indicates any\n * MediaError that may have occured during playback. If error returns null there is no\n * current error.\n *\n * @method Html5#error\n * @return {MediaError|null}\n *         The value of `error` from the media element. Will be `MediaError` if there\n *         is a current error and null otherwise.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-error}\n */\n'error',\n\n/**\n * Get the value of `seeking` from the media element. `seeking` indicates whether the\n * media is currently seeking to a new position or not.\n *\n * @method Html5#seeking\n * @return {boolean}\n *         - The value of `seeking` from the media element.\n *         - True indicates that the media is currently seeking to a new position.\n *         - Flase indicates that the media is not seeking to a new position at this time.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seeking}\n */\n'seeking',\n\n/**\n * Get the value of `seekable` from the media element. `seekable` returns a\n * `TimeRange` object indicating ranges of time that can currently be `seeked` to.\n *\n * @method Html5#seekable\n * @return {TimeRange}\n *         The value of `seekable` from the media element. A `TimeRange` object\n *         indicating the current ranges of time that can be seeked to.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-seekable}\n */\n'seekable',\n\n/**\n * Get the value of `ended` from the media element. `ended` indicates whether\n * the media has reached the end or not.\n *\n * @method Html5#ended\n * @return {boolean}\n *         - The value of `ended` from the media element.\n *         - True indicates that the media has ended.\n *         - False indicates that the media has not ended.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-ended}\n */\n'ended',\n\n/**\n * Get the value of `playbackRate` from the media element. `playbackRate` indicates\n * the rate at which the media is currently playing back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#playbackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Get the value of `defaultPlaybackRate` from the media element. `defaultPlaybackRate` indicates\n * the rate at which the media is currently playing back. This value will not indicate the current\n * `playbackRate` after playback has started, use {@link Html5#playbackRate} for that.\n *\n * Examples:\n *   - if defaultPlaybackRate is set to 2, media will play twice as fast.\n *   - if defaultPlaybackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.defaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'defaultPlaybackRate',\n\n/**\n * Get the value of `played` from the media element. `played` returns a `TimeRange`\n * object representing points in the media timeline that have been played.\n *\n * @method Html5#played\n * @return {TimeRange}\n *         The value of `played` from the media element. A `TimeRange` object indicating\n *         the ranges of time that have been played.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-played}\n */\n'played',\n\n/**\n * Get the value of `networkState` from the media element. `networkState` indicates\n * the current network state. It returns an enumeration from the following list:\n * - 0: NETWORK_EMPTY\n * - 1: NEWORK_IDLE\n * - 2: NETWORK_LOADING\n * - 3: NETWORK_NO_SOURCE\n *\n * @method Html5#networkState\n * @return {number}\n *         The value of `networkState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-networkstate}\n */\n'networkState',\n\n/**\n * Get the value of `readyState` from the media element. `readyState` indicates\n * the current state of the media element. It returns an enumeration from the\n * following list:\n * - 0: HAVE_NOTHING\n * - 1: HAVE_METADATA\n * - 2: HAVE_CURRENT_DATA\n * - 3: HAVE_FUTURE_DATA\n * - 4: HAVE_ENOUGH_DATA\n *\n * @method Html5#readyState\n * @return {number}\n *         The value of `readyState` from the media element. This will be a number\n *         from the list in the description.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#ready-states}\n */\n'readyState',\n\n/**\n * Get the value of `videoWidth` from the video element. `videoWidth` indicates\n * the current width of the video in css pixels.\n *\n * @method Html5#videoWidth\n * @return {number}\n *         The value of `videoWidth` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoWidth',\n\n/**\n * Get the value of `videoHeight` from the video element. `videoHeigth` indicates\n * the current height of the video in css pixels.\n *\n * @method Html5#videoHeight\n * @return {number}\n *         The value of `videoHeight` from the video element. This will be a number\n *         in css pixels.\n *\n * @see [Spec] {@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-video-videowidth}\n */\n'videoHeight'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop];\n  };\n});\n\n// Wrap native properties with a setter in this format:\n// set + toTitleCase(name)\n// The list is as follows:\n// setVolume, setSrc, setPoster, setPreload, setPlaybackRate, setDefaultPlaybackRate\n[\n/**\n * Set the value of `volume` on the media element. `volume` indicates the current\n * audio level as a percentage in decimal form. This means that 1 is 100%, 0.5 is 50%, and\n * so on.\n *\n * @method Html5#setVolume\n * @param {number} percentAsDecimal\n *        The volume percent as a decimal. Valid range is from 0-1.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-a-volume}\n */\n'volume',\n\n/**\n * Set the value of `src` on the media element. `src` indicates the current\n * {@link Tech~SourceObject} for the media.\n *\n * @method Html5#setSrc\n * @param {Tech~SourceObject} src\n *        The source object to set as the current source.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-src}\n */\n'src',\n\n/**\n * Set the value of `poster` on the media element. `poster` is the url to\n * an image file that can/will be shown when no media data is available.\n *\n * @method Html5#setPoster\n * @param {string} poster\n *        The url to an image that should be used as the `poster` for the media\n *        element.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-poster}\n */\n'poster',\n\n/**\n * Set the value of `preload` on the media element. `preload` indicates\n * what should download before the media is interacted with. It can have the following\n * values:\n * - none: nothing should be downloaded\n * - metadata: poster and the first few frames of the media may be downloaded to get\n *   media dimensions and other metadata\n * - auto: allow the media and metadata for the media to be downloaded before\n *    interaction\n *\n * @method Html5#setPreload\n * @param {string} preload\n *         The value of `preload` to set on the media element. Must be 'none', 'metadata',\n *         or 'auto'.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#attr-media-preload}\n */\n'preload',\n\n/**\n * Set the value of `playbackRate` on the media element. `playbackRate` indicates\n * the rate at which the media should play back. Examples:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5#setPlaybackRate\n * @return {number}\n *         The value of `playbackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-playbackrate}\n */\n'playbackRate',\n\n/**\n * Set the value of `defaultPlaybackRate` on the media element. `defaultPlaybackRate` indicates\n * the rate at which the media should play back upon initial startup. Changing this value\n * after a video has started will do nothing. Instead you should used {@link Html5#setPlaybackRate}.\n *\n * Example Values:\n *   - if playbackRate is set to 2, media will play twice as fast.\n *   - if playbackRate is set to 0.5, media will play half as fast.\n *\n * @method Html5.prototype.setDefaultPlaybackRate\n * @return {number}\n *         The value of `defaultPlaybackRate` from the media element. A number indicating\n *         the current playback speed of the media, where 1 is normal speed.\n *\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-defaultplaybackrate}\n */\n'defaultPlaybackRate'].forEach(function (prop) {\n  Html5.prototype['set' + toTitleCase(prop)] = function (v) {\n    this.el_[prop] = v;\n  };\n});\n\n// wrap native functions with a function\n// The list is as follows:\n// pause, load play\n[\n/**\n * A wrapper around the media elements `pause` function. This will call the `HTML5`\n * media elements `pause` function.\n *\n * @method Html5#pause\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-pause}\n */\n'pause',\n\n/**\n * A wrapper around the media elements `load` function. This will call the `HTML5`s\n * media element `load` function.\n *\n * @method Html5#load\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-load}\n */\n'load',\n\n/**\n * A wrapper around the media elements `play` function. This will call the `HTML5`s\n * media element `play` function.\n *\n * @method Html5#play\n * @see [Spec]{@link https://www.w3.org/TR/html5/embedded-content-0.html#dom-media-play}\n */\n'play'].forEach(function (prop) {\n  Html5.prototype[prop] = function () {\n    return this.el_[prop]();\n  };\n});\n\nTech.withSourceHandlers(Html5);\n\n/**\n * Native source handler for Html5, simply passes the source to the media element.\n *\n * @proprety {Tech~SourceObject} source\n *        The source object\n *\n * @proprety {Html5} tech\n *        The instance of the HTML5 tech.\n */\nHtml5.nativeSourceHandler = {};\n\n/**\n * Check if the media element can play the given mime type.\n *\n * @param {string} type\n *        The mimetype to check\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string)\n */\nHtml5.nativeSourceHandler.canPlayType = function (type) {\n  // IE9 on Windows 7 without MediaPlayer throws an error here\n  // https://github.com/videojs/video.js/issues/519\n  try {\n    return Html5.TEST_VID.canPlayType(type);\n  } catch (e) {\n    return '';\n  }\n};\n\n/**\n * Check if the media element can handle a source natively.\n *\n * @param {Tech~SourceObject} source\n *         The source object\n *\n * @param {Object} [options]\n *         Options to be passed to the tech.\n *\n * @return {string}\n *         'probably', 'maybe', or '' (empty string).\n */\nHtml5.nativeSourceHandler.canHandleSource = function (source, options) {\n\n  // If a type was provided we should rely on that\n  if (source.type) {\n    return Html5.nativeSourceHandler.canPlayType(source.type);\n\n    // If no type, fall back to checking 'video/[EXTENSION]'\n  } else if (source.src) {\n    var ext = getFileExtension(source.src);\n\n    return Html5.nativeSourceHandler.canPlayType('video/' + ext);\n  }\n\n  return '';\n};\n\n/**\n * Pass the source to the native media element.\n *\n * @param {Tech~SourceObject} source\n *        The source object\n *\n * @param {Html5} tech\n *        The instance of the Html5 tech\n *\n * @param {Object} [options]\n *        The options to pass to the source\n */\nHtml5.nativeSourceHandler.handleSource = function (source, tech, options) {\n  tech.setSrc(source.src);\n};\n\n/**\n * A noop for the native dispose function, as cleanup is not needed.\n */\nHtml5.nativeSourceHandler.dispose = function () {};\n\n// Register the native source handler\nHtml5.registerSourceHandler(Html5.nativeSourceHandler);\n\nTech.registerTech('Html5', Html5);\n\nvar _templateObject$1 = taggedTemplateLiteralLoose(['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      '], ['\\n        Using the tech directly can be dangerous. I hope you know what you\\'re doing.\\n        See https://github.com/videojs/video.js/issues/2617 for more info.\\n      ']);\n\n/**\n * @file player.js\n */\n// Subclasses Component\n// The following imports are used only to ensure that the corresponding modules\n// are always included in the video.js package. Importing the modules will\n// execute them and they will register themselves with video.js.\n// Import Html5 tech, at least for disposing the original video tag.\n// The following tech events are simply re-triggered\n// on the player when they happen\nvar TECH_EVENTS_RETRIGGER = [\n/**\n * Fired while the user agent is downloading media data.\n *\n * @event Player#progress\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `progress` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechProgress_\n * @fires Player#progress\n * @listens Tech#progress\n */\n'progress',\n\n/**\n * Fires when the loading of an audio/video is aborted.\n *\n * @event Player#abort\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `abort` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechAbort_\n * @fires Player#abort\n * @listens Tech#abort\n */\n'abort',\n\n/**\n * Fires when the browser is intentionally not getting media data.\n *\n * @event Player#suspend\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `suspend` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechSuspend_\n * @fires Player#suspend\n * @listens Tech#suspend\n */\n'suspend',\n\n/**\n * Fires when the current playlist is empty.\n *\n * @event Player#emptied\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `emptied` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechEmptied_\n * @fires Player#emptied\n * @listens Tech#emptied\n */\n'emptied',\n/**\n * Fires when the browser is trying to get media data, but data is not available.\n *\n * @event Player#stalled\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechStalled_\n * @fires Player#stalled\n * @listens Tech#stalled\n */\n'stalled',\n\n/**\n * Fires when the browser has loaded meta data for the audio/video.\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n/**\n * Retrigger the `stalled` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoadedmetadata_\n * @fires Player#loadedmetadata\n * @listens Tech#loadedmetadata\n */\n'loadedmetadata',\n\n/**\n * Fires when the browser has loaded the current frame of the audio/video.\n *\n * @event Player#loadeddata\n * @type {event}\n */\n/**\n * Retrigger the `loadeddata` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechLoaddeddata_\n * @fires Player#loadeddata\n * @listens Tech#loadeddata\n */\n'loadeddata',\n\n/**\n * Fires when the current playback position has changed.\n *\n * @event Player#timeupdate\n * @type {event}\n */\n/**\n * Retrigger the `timeupdate` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTimeUpdate_\n * @fires Player#timeupdate\n * @listens Tech#timeupdate\n */\n'timeupdate',\n\n/**\n * Fires when the video's intrinsic dimensions change\n *\n * @event Player#resize\n * @type {event}\n */\n/**\n * Retrigger the `resize` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechResize_\n * @fires Player#resize\n * @listens Tech#resize\n */\n'resize',\n\n/**\n * Fires when the volume has been changed\n *\n * @event Player#volumechange\n * @type {event}\n */\n/**\n * Retrigger the `volumechange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechVolumechange_\n * @fires Player#volumechange\n * @listens Tech#volumechange\n */\n'volumechange',\n\n/**\n * Fires when the text track has been changed\n *\n * @event Player#texttrackchange\n * @type {event}\n */\n/**\n * Retrigger the `texttrackchange` event that was triggered by the {@link Tech}.\n *\n * @private\n * @method Player#handleTechTexttrackchange_\n * @fires Player#texttrackchange\n * @listens Tech#texttrackchange\n */\n'texttrackchange'];\n\n// events to queue when playback rate is zero\n// this is a hash for the sole purpose of mapping non-camel-cased event names\n// to camel-cased function names\nvar TECH_EVENTS_QUEUE = {\n  canplay: 'CanPlay',\n  canplaythrough: 'CanPlayThrough',\n  playing: 'Playing',\n  seeked: 'Seeked'\n};\n\n/**\n * An instance of the `Player` class is created when any of the Video.js setup methods\n * are used to initialize a video.\n *\n * After an instance has been created it can be accessed globally in two ways:\n * 1. By calling `videojs('example_video_1');`\n * 2. By using it directly via  `videojs.players.example_video_1;`\n *\n * @extends Component\n */\n\nvar Player = function (_Component) {\n  inherits(Player, _Component);\n\n  /**\n   * Create an instance of this class.\n   *\n   * @param {Element} tag\n   *        The original video DOM element used for configuring options.\n   *\n   * @param {Object} [options]\n   *        Object of option names and values.\n   *\n   * @param {Component~ReadyCallback} [ready]\n   *        Ready callback function.\n   */\n  function Player(tag, options, ready) {\n    classCallCheck(this, Player);\n\n    // Make sure tag ID exists\n    tag.id = tag.id || options.id || 'vjs_video_' + newGUID();\n\n    // Set Options\n    // The options argument overrides options set in the video tag\n    // which overrides globally set options.\n    // This latter part coincides with the load order\n    // (tag must exist before Player)\n    options = assign(Player.getTagSettings(tag), options);\n\n    // Delay the initialization of children because we need to set up\n    // player properties first, and can't use `this` before `super()`\n    options.initChildren = false;\n\n    // Same with creating the element\n    options.createEl = false;\n\n    // don't auto mixin the evented mixin\n    options.evented = false;\n\n    // we don't want the player to report touch activity on itself\n    // see enableTouchActivity in Component\n    options.reportTouchActivity = false;\n\n    // If language is not set, get the closest lang attribute\n    if (!options.language) {\n      if (typeof tag.closest === 'function') {\n        var closest = tag.closest('[lang]');\n\n        if (closest && closest.getAttribute) {\n          options.language = closest.getAttribute('lang');\n        }\n      } else {\n        var element = tag;\n\n        while (element && element.nodeType === 1) {\n          if (getAttributes(element).hasOwnProperty('lang')) {\n            options.language = element.getAttribute('lang');\n            break;\n          }\n          element = element.parentNode;\n        }\n      }\n    }\n\n    // Run base component initializing with new options\n\n    // Tracks when a tech changes the poster\n    var _this = possibleConstructorReturn(this, _Component.call(this, null, options, ready));\n\n    _this.isPosterFromTech_ = false;\n\n    // Holds callback info that gets queued when playback rate is zero\n    // and a seek is happening\n    _this.queuedCallbacks_ = [];\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    _this.isReady_ = false;\n\n    // Init state hasStarted_\n    _this.hasStarted_ = false;\n\n    // Init state userActive_\n    _this.userActive_ = false;\n\n    // if the global option object was accidentally blown away by\n    // someone, bail early with an informative error\n    if (!_this.options_ || !_this.options_.techOrder || !_this.options_.techOrder.length) {\n      throw new Error('No techOrder specified. Did you overwrite ' + 'videojs.options instead of just changing the ' + 'properties you want to override?');\n    }\n\n    // Store the original tag used to set options\n    _this.tag = tag;\n\n    // Store the tag attributes used to restore html5 element\n    _this.tagAttributes = tag && getAttributes(tag);\n\n    // Update current language\n    _this.language(_this.options_.language);\n\n    // Update Supported Languages\n    if (options.languages) {\n      // Normalise player option languages to lowercase\n      var languagesToLower = {};\n\n      Object.getOwnPropertyNames(options.languages).forEach(function (name$$1) {\n        languagesToLower[name$$1.toLowerCase()] = options.languages[name$$1];\n      });\n      _this.languages_ = languagesToLower;\n    } else {\n      _this.languages_ = Player.prototype.options_.languages;\n    }\n\n    // Cache for video property values.\n    _this.cache_ = {};\n\n    // Set poster\n    _this.poster_ = options.poster || '';\n\n    // Set controls\n    _this.controls_ = !!options.controls;\n\n    // Set default values for lastVolume\n    _this.cache_.lastVolume = 1;\n\n    // Original tag settings stored in options\n    // now remove immediately so native controls don't flash.\n    // May be turned back on by HTML5 tech if nativeControlsForTouch is true\n    tag.controls = false;\n    tag.removeAttribute('controls');\n\n    // the attribute overrides the option\n    if (tag.hasAttribute('autoplay')) {\n      _this.options_.autoplay = true;\n    } else {\n      // otherwise use the setter to validate and\n      // set the correct value.\n      _this.autoplay(_this.options_.autoplay);\n    }\n\n    /*\n     * Store the internal state of scrubbing\n     *\n     * @private\n     * @return {Boolean} True if the user is scrubbing\n     */\n    _this.scrubbing_ = false;\n\n    _this.el_ = _this.createEl();\n\n    // Set default value for lastPlaybackRate\n    _this.cache_.lastPlaybackRate = _this.defaultPlaybackRate();\n\n    // Make this an evented object and use `el_` as its event bus.\n    evented(_this, { eventBusKey: 'el_' });\n\n    // We also want to pass the original player options to each component and plugin\n    // as well so they don't need to reach back into the player for options later.\n    // We also need to do another copy of this.options_ so we don't end up with\n    // an infinite loop.\n    var playerOptionsCopy = mergeOptions(_this.options_);\n\n    // Load plugins\n    if (options.plugins) {\n      var plugins = options.plugins;\n\n      Object.keys(plugins).forEach(function (name$$1) {\n        if (typeof this[name$$1] === 'function') {\n          this[name$$1](plugins[name$$1]);\n        } else {\n          throw new Error('plugin \"' + name$$1 + '\" does not exist');\n        }\n      }, _this);\n    }\n\n    _this.options_.playerOptions = playerOptionsCopy;\n\n    _this.middleware_ = [];\n\n    _this.initChildren();\n\n    // Set isAudio based on whether or not an audio tag was used\n    _this.isAudio(tag.nodeName.toLowerCase() === 'audio');\n\n    // Update controls className. Can't do this when the controls are initially\n    // set because the element doesn't exist yet.\n    if (_this.controls()) {\n      _this.addClass('vjs-controls-enabled');\n    } else {\n      _this.addClass('vjs-controls-disabled');\n    }\n\n    // Set ARIA label and region role depending on player type\n    _this.el_.setAttribute('role', 'region');\n    if (_this.isAudio()) {\n      _this.el_.setAttribute('aria-label', _this.localize('Audio Player'));\n    } else {\n      _this.el_.setAttribute('aria-label', _this.localize('Video Player'));\n    }\n\n    if (_this.isAudio()) {\n      _this.addClass('vjs-audio');\n    }\n\n    if (_this.flexNotSupported_()) {\n      _this.addClass('vjs-no-flex');\n    }\n\n    // TODO: Make this smarter. Toggle user state between touching/mousing\n    // using events, since devices can have both touch and mouse events.\n    // if (browser.TOUCH_ENABLED) {\n    //   this.addClass('vjs-touch-enabled');\n    // }\n\n    // iOS Safari has broken hover handling\n    if (!IS_IOS) {\n      _this.addClass('vjs-workinghover');\n    }\n\n    // Make player easily findable by ID\n    Player.players[_this.id_] = _this;\n\n    // Add a major version class to aid css in plugins\n    var majorVersion = version.split('.')[0];\n\n    _this.addClass('vjs-v' + majorVersion);\n\n    // When the player is first initialized, trigger activity so components\n    // like the control bar show themselves if needed\n    _this.userActive(true);\n    _this.reportUserActivity();\n\n    _this.one('play', _this.listenForUserActivity_);\n    _this.on('fullscreenchange', _this.handleFullscreenChange_);\n    _this.on('stageclick', _this.handleStageClick_);\n\n    _this.changingSrc_ = false;\n    _this.playWaitingForReady_ = false;\n    _this.playOnLoadstart_ = null;\n    return _this;\n  }\n\n  /**\n   * Destroys the video player and does any necessary cleanup.\n   *\n   * This is especially helpful if you are dynamically adding and removing videos\n   * to/from the DOM.\n   *\n   * @fires Player#dispose\n   */\n\n\n  Player.prototype.dispose = function dispose() {\n    /**\n     * Called when the player is being disposed of.\n     *\n     * @event Player#dispose\n     * @type {EventTarget~Event}\n     */\n    this.trigger('dispose');\n    // prevent dispose from being called twice\n    this.off('dispose');\n\n    if (this.styleEl_ && this.styleEl_.parentNode) {\n      this.styleEl_.parentNode.removeChild(this.styleEl_);\n      this.styleEl_ = null;\n    }\n\n    // Kill reference to this player\n    Player.players[this.id_] = null;\n\n    if (this.tag && this.tag.player) {\n      this.tag.player = null;\n    }\n\n    if (this.el_ && this.el_.player) {\n      this.el_.player = null;\n    }\n\n    if (this.tech_) {\n      this.tech_.dispose();\n      this.isPosterFromTech_ = false;\n      this.poster_ = '';\n    }\n\n    if (this.playerElIngest_) {\n      this.playerElIngest_ = null;\n    }\n\n    if (this.tag) {\n      this.tag = null;\n    }\n\n    clearCacheForPlayer(this);\n\n    // the actual .el_ is removed here\n    _Component.prototype.dispose.call(this);\n  };\n\n  /**\n   * Create the `Player`'s DOM element.\n   *\n   * @return {Element}\n   *         The DOM element that gets created.\n   */\n\n\n  Player.prototype.createEl = function createEl$$1() {\n    var tag = this.tag;\n    var el = void 0;\n    var playerElIngest = this.playerElIngest_ = tag.parentNode && tag.parentNode.hasAttribute && tag.parentNode.hasAttribute('data-vjs-player');\n    var divEmbed = this.tag.tagName.toLowerCase() === 'video-js';\n\n    if (playerElIngest) {\n      el = this.el_ = tag.parentNode;\n    } else if (!divEmbed) {\n      el = this.el_ = _Component.prototype.createEl.call(this, 'div');\n    }\n\n    // Copy over all the attributes from the tag, including ID and class\n    // ID will now reference player box, not the video tag\n    var attrs = getAttributes(tag);\n\n    if (divEmbed) {\n      el = this.el_ = tag;\n      tag = this.tag = document.createElement('video');\n      while (el.children.length) {\n        tag.appendChild(el.firstChild);\n      }\n\n      if (!hasClass(el, 'video-js')) {\n        addClass(el, 'video-js');\n      }\n\n      el.appendChild(tag);\n\n      playerElIngest = this.playerElIngest_ = el;\n\n      // copy over properties from the video-js element\n      // ie8 doesn't support Object.keys nor hasOwnProperty\n      // on dom elements so we have to specify properties individually\n      ['autoplay', 'controls', 'crossOrigin', 'defaultMuted', 'defaultPlaybackRate', 'loop', 'muted', 'playbackRate', 'src', 'volume'].forEach(function (prop) {\n        if (typeof el[prop] !== 'undefined') {\n          tag[prop] = el[prop];\n        }\n      });\n    }\n\n    // set tabindex to -1 to remove the video element from the focus order\n    tag.setAttribute('tabindex', '-1');\n    // Workaround for #4583 (JAWS+IE doesn't announce BPB or play button)\n    // See https://github.com/FreedomScientific/VFO-standards-support/issues/78\n    // Note that we can't detect if JAWS is being used, but this ARIA attribute\n    //  doesn't change behavior of IE11 if JAWS is not being used\n    if (IE_VERSION) {\n      tag.setAttribute('role', 'application');\n    }\n\n    // Remove width/height attrs from tag so CSS can make it 100% width/height\n    tag.removeAttribute('width');\n    tag.removeAttribute('height');\n\n    Object.getOwnPropertyNames(attrs).forEach(function (attr) {\n      // workaround so we don't totally break IE7\n      // http://stackoverflow.com/questions/3653444/css-styles-not-applied-on-dynamic-elements-in-internet-explorer-7\n      if (attr === 'class') {\n        el.className += ' ' + attrs[attr];\n\n        if (divEmbed) {\n          tag.className += ' ' + attrs[attr];\n        }\n      } else {\n        el.setAttribute(attr, attrs[attr]);\n\n        if (divEmbed) {\n          tag.setAttribute(attr, attrs[attr]);\n        }\n      }\n    });\n\n    // Update tag id/class for use as HTML5 playback tech\n    // Might think we should do this after embedding in container so .vjs-tech class\n    // doesn't flash 100% width/height, but class only applies with .video-js parent\n    tag.playerId = tag.id;\n    tag.id += '_html5_api';\n    tag.className = 'vjs-tech';\n\n    // Make player findable on elements\n    tag.player = el.player = this;\n    // Default state of video is paused\n    this.addClass('vjs-paused');\n\n    // Add a style element in the player that we'll use to set the width/height\n    // of the player in a way that's still overrideable by CSS, just like the\n    // video element\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE !== true) {\n      this.styleEl_ = createStyleElement('vjs-styles-dimensions');\n      var defaultsStyleEl = $('.vjs-styles-defaults');\n      var head = $('head');\n\n      head.insertBefore(this.styleEl_, defaultsStyleEl ? defaultsStyleEl.nextSibling : head.firstChild);\n    }\n\n    // Pass in the width/height/aspectRatio options which will update the style el\n    this.width(this.options_.width);\n    this.height(this.options_.height);\n    this.fluid(this.options_.fluid);\n    this.aspectRatio(this.options_.aspectRatio);\n\n    // Hide any links within the video/audio tag, because IE doesn't hide them completely.\n    var links = tag.getElementsByTagName('a');\n\n    for (var i = 0; i < links.length; i++) {\n      var linkEl = links.item(i);\n\n      addClass(linkEl, 'vjs-hidden');\n      linkEl.setAttribute('hidden', 'hidden');\n    }\n\n    // insertElFirst seems to cause the networkState to flicker from 3 to 2, so\n    // keep track of the original for later so we can know if the source originally failed\n    tag.initNetworkState_ = tag.networkState;\n\n    // Wrap video tag in div (el/box) container\n    if (tag.parentNode && !playerElIngest) {\n      tag.parentNode.insertBefore(el, tag);\n    }\n\n    // insert the tag as the first child of the player element\n    // then manually add it to the children array so that this.addChild\n    // will work properly for other components\n    //\n    // Breaks iPhone, fixed in HTML5 setup.\n    prependTo(tag, el);\n    this.children_.unshift(tag);\n\n    // Set lang attr on player to ensure CSS :lang() in consistent with player\n    // if it's been set to something different to the doc\n    this.el_.setAttribute('lang', this.language_);\n\n    this.el_ = el;\n\n    return el;\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width. Returns the player's configured value.\n   * To get the current width use `currentWidth()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s width to.\n   *\n   * @return {number}\n   *         The current width of the `Player` when getting.\n   */\n\n\n  Player.prototype.width = function width(value) {\n    return this.dimension('width', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s height. Returns the player's configured value.\n   * To get the current height use `currentheight()`.\n   *\n   * @param {number} [value]\n   *        The value to set the `Player`'s heigth to.\n   *\n   * @return {number}\n   *         The current height of the `Player` when getting.\n   */\n\n\n  Player.prototype.height = function height(value) {\n    return this.dimension('height', value);\n  };\n\n  /**\n   * A getter/setter for the `Player`'s width & height.\n   *\n   * @param {string} dimension\n   *        This string can be:\n   *        - 'width'\n   *        - 'height'\n   *\n   * @param {number} [value]\n   *        Value for dimension specified in the first argument.\n   *\n   * @return {number}\n   *         The dimension arguments value when getting (width/height).\n   */\n\n\n  Player.prototype.dimension = function dimension(_dimension, value) {\n    var privDimension = _dimension + '_';\n\n    if (value === undefined) {\n      return this[privDimension] || 0;\n    }\n\n    if (value === '') {\n      // If an empty string is given, reset the dimension to be automatic\n      this[privDimension] = undefined;\n      this.updateStyleEl_();\n      return;\n    }\n\n    var parsedVal = parseFloat(value);\n\n    if (isNaN(parsedVal)) {\n      log$1.error('Improper value \"' + value + '\" supplied for for ' + _dimension);\n      return;\n    }\n\n    this[privDimension] = parsedVal;\n    this.updateStyleEl_();\n  };\n\n  /**\n   * A getter/setter/toggler for the vjs-fluid `className` on the `Player`.\n   *\n   * @param {boolean} [bool]\n   *        - A value of true adds the class.\n   *        - A value of false removes the class.\n   *        - No value will toggle the fluid class.\n   *\n   * @return {boolean|undefined}\n   *         - The value of fluid when getting.\n   *         - `undefined` when setting.\n   */\n\n\n  Player.prototype.fluid = function fluid(bool) {\n    if (bool === undefined) {\n      return !!this.fluid_;\n    }\n\n    this.fluid_ = !!bool;\n\n    if (bool) {\n      this.addClass('vjs-fluid');\n    } else {\n      this.removeClass('vjs-fluid');\n    }\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Get/Set the aspect ratio\n   *\n   * @param {string} [ratio]\n   *        Aspect ratio for player\n   *\n   * @return {string|undefined}\n   *         returns the current aspect ratio when getting\n   */\n\n  /**\n   * A getter/setter for the `Player`'s aspect ratio.\n   *\n   * @param {string} [ratio]\n   *        The value to set the `Player's aspect ratio to.\n   *\n   * @return {string|undefined}\n   *         - The current aspect ratio of the `Player` when getting.\n   *         - undefined when setting\n   */\n\n\n  Player.prototype.aspectRatio = function aspectRatio(ratio) {\n    if (ratio === undefined) {\n      return this.aspectRatio_;\n    }\n\n    // Check for width:height format\n    if (!/^\\d+\\:\\d+$/.test(ratio)) {\n      throw new Error('Improper value supplied for aspect ratio. The format should be width:height, for example 16:9.');\n    }\n    this.aspectRatio_ = ratio;\n\n    // We're assuming if you set an aspect ratio you want fluid mode,\n    // because in fixed mode you could calculate width and height yourself.\n    this.fluid(true);\n\n    this.updateStyleEl_();\n  };\n\n  /**\n   * Update styles of the `Player` element (height, width and aspect ratio).\n   *\n   * @private\n   * @listens Tech#loadedmetadata\n   */\n\n\n  Player.prototype.updateStyleEl_ = function updateStyleEl_() {\n    if (window.VIDEOJS_NO_DYNAMIC_STYLE === true) {\n      var _width = typeof this.width_ === 'number' ? this.width_ : this.options_.width;\n      var _height = typeof this.height_ === 'number' ? this.height_ : this.options_.height;\n      var techEl = this.tech_ && this.tech_.el();\n\n      if (techEl) {\n        if (_width >= 0) {\n          techEl.width = _width;\n        }\n        if (_height >= 0) {\n          techEl.height = _height;\n        }\n      }\n\n      return;\n    }\n\n    var width = void 0;\n    var height = void 0;\n    var aspectRatio = void 0;\n    var idClass = void 0;\n\n    // The aspect ratio is either used directly or to calculate width and height.\n    if (this.aspectRatio_ !== undefined && this.aspectRatio_ !== 'auto') {\n      // Use any aspectRatio that's been specifically set\n      aspectRatio = this.aspectRatio_;\n    } else if (this.videoWidth() > 0) {\n      // Otherwise try to get the aspect ratio from the video metadata\n      aspectRatio = this.videoWidth() + ':' + this.videoHeight();\n    } else {\n      // Or use a default. The video element's is 2:1, but 16:9 is more common.\n      aspectRatio = '16:9';\n    }\n\n    // Get the ratio as a decimal we can use to calculate dimensions\n    var ratioParts = aspectRatio.split(':');\n    var ratioMultiplier = ratioParts[1] / ratioParts[0];\n\n    if (this.width_ !== undefined) {\n      // Use any width that's been specifically set\n      width = this.width_;\n    } else if (this.height_ !== undefined) {\n      // Or calulate the width from the aspect ratio if a height has been set\n      width = this.height_ / ratioMultiplier;\n    } else {\n      // Or use the video's metadata, or use the video el's default of 300\n      width = this.videoWidth() || 300;\n    }\n\n    if (this.height_ !== undefined) {\n      // Use any height that's been specifically set\n      height = this.height_;\n    } else {\n      // Otherwise calculate the height from the ratio and the width\n      height = width * ratioMultiplier;\n    }\n\n    // Ensure the CSS class is valid by starting with an alpha character\n    if (/^[^a-zA-Z]/.test(this.id())) {\n      idClass = 'dimensions-' + this.id();\n    } else {\n      idClass = this.id() + '-dimensions';\n    }\n\n    // Ensure the right class is still on the player for the style element\n    this.addClass(idClass);\n\n    setTextContent(this.styleEl_, '\\n      .' + idClass + ' {\\n        width: ' + width + 'px;\\n        height: ' + height + 'px;\\n      }\\n\\n      .' + idClass + '.vjs-fluid {\\n        padding-top: ' + ratioMultiplier * 100 + '%;\\n      }\\n    ');\n  };\n\n  /**\n   * Load/Create an instance of playback {@link Tech} including element\n   * and API methods. Then append the `Tech` element in `Player` as a child.\n   *\n   * @param {string} techName\n   *        name of the playback technology\n   *\n   * @param {string} source\n   *        video source\n   *\n   * @private\n   */\n\n\n  Player.prototype.loadTech_ = function loadTech_(techName, source) {\n    var _this2 = this;\n\n    // Pause and remove current playback technology\n    if (this.tech_) {\n      this.unloadTech_();\n    }\n\n    var titleTechName = toTitleCase(techName);\n    var camelTechName = techName.charAt(0).toLowerCase() + techName.slice(1);\n\n    // get rid of the HTML5 video tag as soon as we are using another tech\n    if (titleTechName !== 'Html5' && this.tag) {\n      Tech.getTech('Html5').disposeMediaElement(this.tag);\n      this.tag.player = null;\n      this.tag = null;\n    }\n\n    this.techName_ = titleTechName;\n\n    // Turn off API access because we're loading a new tech that might load asynchronously\n    this.isReady_ = false;\n\n    // if autoplay is a string we pass false to the tech\n    // because the player is going to handle autoplay on `loadstart`\n    var autoplay = typeof this.autoplay() === 'string' ? false : this.autoplay();\n\n    // Grab tech-specific options from player options and add source and parent element to use.\n    var techOptions = {\n      source: source,\n      autoplay: autoplay,\n      'nativeControlsForTouch': this.options_.nativeControlsForTouch,\n      'playerId': this.id(),\n      'techId': this.id() + '_' + titleTechName + '_api',\n      'playsinline': this.options_.playsinline,\n      'preload': this.options_.preload,\n      'loop': this.options_.loop,\n      'muted': this.options_.muted,\n      'poster': this.poster(),\n      'language': this.language(),\n      'playerElIngest': this.playerElIngest_ || false,\n      'vtt.js': this.options_['vtt.js'],\n      'canOverridePoster': !!this.options_.techCanOverridePoster,\n      'enableSourceset': this.options_.enableSourceset\n    };\n\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      techOptions[props.getterName] = _this2[props.privateName];\n    });\n\n    assign(techOptions, this.options_[titleTechName]);\n    assign(techOptions, this.options_[camelTechName]);\n    assign(techOptions, this.options_[techName.toLowerCase()]);\n\n    if (this.tag) {\n      techOptions.tag = this.tag;\n    }\n\n    if (source && source.src === this.cache_.src && this.cache_.currentTime > 0) {\n      techOptions.startTime = this.cache_.currentTime;\n    }\n\n    // Initialize tech instance\n    var TechClass = Tech.getTech(techName);\n\n    if (!TechClass) {\n      throw new Error('No Tech named \\'' + titleTechName + '\\' exists! \\'' + titleTechName + '\\' should be registered using videojs.registerTech()\\'');\n    }\n\n    this.tech_ = new TechClass(techOptions);\n\n    // player.triggerReady is always async, so don't need this to be async\n    this.tech_.ready(bind(this, this.handleTechReady_), true);\n\n    textTrackConverter.jsonToTextTracks(this.textTracksJson_ || [], this.tech_);\n\n    // Listen to all HTML5-defined events and trigger them on the player\n    TECH_EVENTS_RETRIGGER.forEach(function (event) {\n      _this2.on(_this2.tech_, event, _this2['handleTech' + toTitleCase(event) + '_']);\n    });\n\n    Object.keys(TECH_EVENTS_QUEUE).forEach(function (event) {\n      _this2.on(_this2.tech_, event, function (eventObj) {\n        if (_this2.tech_.playbackRate() === 0 && _this2.tech_.seeking()) {\n          _this2.queuedCallbacks_.push({\n            callback: _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'].bind(_this2),\n            event: eventObj\n          });\n          return;\n        }\n        _this2['handleTech' + TECH_EVENTS_QUEUE[event] + '_'](eventObj);\n      });\n    });\n\n    this.on(this.tech_, 'loadstart', this.handleTechLoadStart_);\n    this.on(this.tech_, 'sourceset', this.handleTechSourceset_);\n    this.on(this.tech_, 'waiting', this.handleTechWaiting_);\n    this.on(this.tech_, 'ended', this.handleTechEnded_);\n    this.on(this.tech_, 'seeking', this.handleTechSeeking_);\n    this.on(this.tech_, 'play', this.handleTechPlay_);\n    this.on(this.tech_, 'firstplay', this.handleTechFirstPlay_);\n    this.on(this.tech_, 'pause', this.handleTechPause_);\n    this.on(this.tech_, 'durationchange', this.handleTechDurationChange_);\n    this.on(this.tech_, 'fullscreenchange', this.handleTechFullscreenChange_);\n    this.on(this.tech_, 'error', this.handleTechError_);\n    this.on(this.tech_, 'loadedmetadata', this.updateStyleEl_);\n    this.on(this.tech_, 'posterchange', this.handleTechPosterChange_);\n    this.on(this.tech_, 'textdata', this.handleTechTextData_);\n    this.on(this.tech_, 'ratechange', this.handleTechRateChange_);\n\n    this.usingNativeControls(this.techGet_('controls'));\n\n    if (this.controls() && !this.usingNativeControls()) {\n      this.addTechControlsListeners_();\n    }\n\n    // Add the tech element in the DOM if it was not already there\n    // Make sure to not insert the original video element if using Html5\n    if (this.tech_.el().parentNode !== this.el() && (titleTechName !== 'Html5' || !this.tag)) {\n      prependTo(this.tech_.el(), this.el());\n    }\n\n    // Get rid of the original video tag reference after the first tech is loaded\n    if (this.tag) {\n      this.tag.player = null;\n      this.tag = null;\n    }\n  };\n\n  /**\n   * Unload and dispose of the current playback {@link Tech}.\n   *\n   * @private\n   */\n\n\n  Player.prototype.unloadTech_ = function unloadTech_() {\n    var _this3 = this;\n\n    // Save the current text tracks so that we can reuse the same text tracks with the next tech\n    ALL.names.forEach(function (name$$1) {\n      var props = ALL[name$$1];\n\n      _this3[props.privateName] = _this3[props.getterName]();\n    });\n    this.textTracksJson_ = textTrackConverter.textTracksToJson(this.tech_);\n\n    this.isReady_ = false;\n\n    this.tech_.dispose();\n\n    this.tech_ = false;\n\n    if (this.isPosterFromTech_) {\n      this.poster_ = '';\n      this.trigger('posterchange');\n    }\n\n    this.isPosterFromTech_ = false;\n  };\n\n  /**\n   * Return a reference to the current {@link Tech}.\n   * It will print a warning by default about the danger of using the tech directly\n   * but any argument that is passed in will silence the warning.\n   *\n   * @param {*} [safety]\n   *        Anything passed in to silence the warning\n   *\n   * @return {Tech}\n   *         The Tech\n   */\n\n\n  Player.prototype.tech = function tech(safety) {\n    if (safety === undefined) {\n      log$1.warn(tsml(_templateObject$1));\n    }\n\n    return this.tech_;\n  };\n\n  /**\n   * Set up click and touch listeners for the playback element\n   *\n   * - On desktops: a click on the video itself will toggle playback\n   * - On mobile devices: a click on the video toggles controls\n   *   which is done by toggling the user state between active and\n   *   inactive\n   * - A tap can signal that a user has become active or has become inactive\n   *   e.g. a quick tap on an iPhone movie should reveal the controls. Another\n   *   quick tap should hide them again (signaling the user is in an inactive\n   *   viewing state)\n   * - In addition to this, we still want the user to be considered inactive after\n   *   a few seconds of inactivity.\n   *\n   * > Note: the only part of iOS interaction we can't mimic with this setup\n   * is a touch and hold on the video element counting as activity in order to\n   * keep the controls showing, but that shouldn't be an issue. A touch and hold\n   * on any controls will still keep the user active\n   *\n   * @private\n   */\n\n\n  Player.prototype.addTechControlsListeners_ = function addTechControlsListeners_() {\n    // Make sure to remove all the previous listeners in case we are called multiple times.\n    this.removeTechControlsListeners_();\n\n    // Some browsers (Chrome & IE) don't trigger a click on a flash swf, but do\n    // trigger mousedown/up.\n    // http://stackoverflow.com/questions/1444562/javascript-onclick-event-over-flash-object\n    // Any touch events are set to block the mousedown event from happening\n    this.on(this.tech_, 'mousedown', this.handleTechClick_);\n\n    // If the controls were hidden we don't want that to change without a tap event\n    // so we'll check if the controls were already showing before reporting user\n    // activity\n    this.on(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.on(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.on(this.tech_, 'touchend', this.handleTechTouchEnd_);\n\n    // The tap listener needs to come after the touchend listener because the tap\n    // listener cancels out any reportedUserActivity when setting userActive(false)\n    this.on(this.tech_, 'tap', this.handleTechTap_);\n  };\n\n  /**\n   * Remove the listeners used for click and tap controls. This is needed for\n   * toggling to controls disabled, where a tap/touch should do nothing.\n   *\n   * @private\n   */\n\n\n  Player.prototype.removeTechControlsListeners_ = function removeTechControlsListeners_() {\n    // We don't want to just use `this.off()` because there might be other needed\n    // listeners added by techs that extend this.\n    this.off(this.tech_, 'tap', this.handleTechTap_);\n    this.off(this.tech_, 'touchstart', this.handleTechTouchStart_);\n    this.off(this.tech_, 'touchmove', this.handleTechTouchMove_);\n    this.off(this.tech_, 'touchend', this.handleTechTouchEnd_);\n    this.off(this.tech_, 'mousedown', this.handleTechClick_);\n  };\n\n  /**\n   * Player waits for the tech to be ready\n   *\n   * @private\n   */\n\n\n  Player.prototype.handleTechReady_ = function handleTechReady_() {\n    this.triggerReady();\n\n    // Keep the same volume as before\n    if (this.cache_.volume) {\n      this.techCall_('setVolume', this.cache_.volume);\n    }\n\n    // Look if the tech found a higher resolution poster while loading\n    this.handleTechPosterChange_();\n\n    // Update the duration if available\n    this.handleTechDurationChange_();\n\n    // Chrome and Safari both have issues with autoplay.\n    // In Safari (5.1.1), when we move the video element into the container div, autoplay doesn't work.\n    // In Chrome (15), if you have autoplay + a poster + no controls, the video gets hidden (but audio plays)\n    // This fixes both issues. Need to wait for API, so it updates displays correctly\n    if ((this.src() || this.currentSrc()) && this.tag && this.options_.autoplay && this.paused()) {\n      try {\n        // Chrome Fix. Fixed in Chrome v16.\n        delete this.tag.poster;\n      } catch (e) {\n        log$1('deleting tag.poster throws in some browsers', e);\n      }\n    }\n  };\n\n  /**\n   * Retrigger the `loadstart` event that was triggered by the {@link Tech}. This\n   * function will also trigger {@link Player#firstplay} if it is the first loadstart\n   * for a video.\n   *\n   * @fires Player#loadstart\n   * @fires Player#firstplay\n   * @listens Tech#loadstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechLoadStart_ = function handleTechLoadStart_() {\n    // TODO: Update to use `emptied` event instead. See #1277.\n\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-seeking');\n\n    // reset the error state\n    this.error(null);\n\n    // If it's already playing we want to trigger a firstplay event now.\n    // The firstplay event relies on both the play and loadstart events\n    // which can happen in any order for a new source\n    if (!this.paused()) {\n      /**\n       * Fired when the user agent begins looking for media data\n       *\n       * @event Player#loadstart\n       * @type {EventTarget~Event}\n       */\n      this.trigger('loadstart');\n      this.trigger('firstplay');\n    } else {\n      // reset the hasStarted state\n      this.hasStarted(false);\n      this.trigger('loadstart');\n    }\n\n    // autoplay happens after loadstart for the browser,\n    // so we mimic that behavior\n    this.manualAutoplay_(this.autoplay());\n  };\n\n  /**\n   * Handle autoplay string values, rather than the typical boolean\n   * values that should be handled by the tech. Note that this is not\n   * part of any specification. Valid values and what they do can be\n   * found on the autoplay getter at Player#autoplay()\n   */\n\n\n  Player.prototype.manualAutoplay_ = function manualAutoplay_(type) {\n    var _this4 = this;\n\n    if (!this.tech_ || typeof type !== 'string') {\n      return;\n    }\n\n    var muted = function muted() {\n      var previouslyMuted = _this4.muted();\n\n      _this4.muted(true);\n\n      var playPromise = _this4.play();\n\n      if (!playPromise || !playPromise.then || !playPromise['catch']) {\n        return;\n      }\n\n      return playPromise['catch'](function (e) {\n        // restore old value of muted on failure\n        _this4.muted(previouslyMuted);\n      });\n    };\n\n    var promise = void 0;\n\n    if (type === 'any') {\n      promise = this.play();\n\n      if (promise && promise.then && promise['catch']) {\n        promise['catch'](function () {\n          return muted();\n        });\n      }\n    } else if (type === 'muted') {\n      promise = muted();\n    } else {\n      promise = this.play();\n    }\n\n    if (!promise || !promise.then || !promise['catch']) {\n      return;\n    }\n\n    return promise.then(function () {\n      _this4.trigger({ type: 'autoplay-success', autoplay: type });\n    })['catch'](function (e) {\n      _this4.trigger({ type: 'autoplay-failure', autoplay: type });\n    });\n  };\n\n  /**\n   * Update the internal source caches so that we return the correct source from\n   * `src()`, `currentSource()`, and `currentSources()`.\n   *\n   * > Note: `currentSources` will not be updated if the source that is passed in exists\n   *         in the current `currentSources` cache.\n   *\n   *\n   * @param {Tech~SourceObject} srcObj\n   *        A string or object source to update our caches to.\n   */\n\n\n  Player.prototype.updateSourceCaches_ = function updateSourceCaches_() {\n    var srcObj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n\n\n    var src = srcObj;\n    var type = '';\n\n    if (typeof src !== 'string') {\n      src = srcObj.src;\n      type = srcObj.type;\n    }\n    // make sure all the caches are set to default values\n    // to prevent null checking\n    this.cache_.source = this.cache_.source || {};\n    this.cache_.sources = this.cache_.sources || [];\n\n    // try to get the type of the src that was passed in\n    if (src && !type) {\n      type = findMimetype(this, src);\n    }\n\n    // update `currentSource` cache always\n    this.cache_.source = mergeOptions({}, srcObj, { src: src, type: type });\n\n    var matchingSources = this.cache_.sources.filter(function (s) {\n      return s.src && s.src === src;\n    });\n    var sourceElSources = [];\n    var sourceEls = this.$$('source');\n    var matchingSourceEls = [];\n\n    for (var i = 0; i < sourceEls.length; i++) {\n      var sourceObj = getAttributes(sourceEls[i]);\n\n      sourceElSources.push(sourceObj);\n\n      if (sourceObj.src && sourceObj.src === src) {\n        matchingSourceEls.push(sourceObj.src);\n      }\n    }\n\n    // if we have matching source els but not matching sources\n    // the current source cache is not up to date\n    if (matchingSourceEls.length && !matchingSources.length) {\n      this.cache_.sources = sourceElSources;\n      // if we don't have matching source or source els set the\n      // sources cache to the `currentSource` cache\n    } else if (!matchingSources.length) {\n      this.cache_.sources = [this.cache_.source];\n    }\n\n    // update the tech `src` cache\n    this.cache_.src = src;\n  };\n\n  /**\n   * *EXPERIMENTAL* Fired when the source is set or changed on the {@link Tech}\n   * causing the media element to reload.\n   *\n   * It will fire for the initial source and each subsequent source.\n   * This event is a custom event from Video.js and is triggered by the {@link Tech}.\n   *\n   * The event object for this event contains a `src` property that will contain the source\n   * that was available when the event was triggered. This is generally only necessary if Video.js\n   * is switching techs while the source was being changed.\n   *\n   * It is also fired when `load` is called on the player (or media element)\n   * because the {@link https://html.spec.whatwg.org/multipage/media.html#dom-media-load|specification for `load`}\n   * says that the resource selection algorithm needs to be aborted and restarted.\n   * In this case, it is very likely that the `src` property will be set to the\n   * empty string `\"\"` to indicate we do not know what the source will be but\n   * that it is changing.\n   *\n   * *This event is currently still experimental and may change in minor releases.*\n   * __To use this, pass `enableSourceset` option to the player.__\n   *\n   * @event Player#sourceset\n   * @type {EventTarget~Event}\n   * @prop {string} src\n   *                The source url available when the `sourceset` was triggered.\n   *                It will be an empty string if we cannot know what the source is\n   *                but know that the source will change.\n   */\n  /**\n   * Retrigger the `sourceset` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#sourceset\n   * @listens Tech#sourceset\n   * @private\n   */\n\n\n  Player.prototype.handleTechSourceset_ = function handleTechSourceset_(event) {\n    var _this5 = this;\n\n    // only update the source cache when the source\n    // was not updated using the player api\n    if (!this.changingSrc_) {\n      // update the source to the intial source right away\n      // in some cases this will be empty string\n      this.updateSourceCaches_(event.src);\n\n      // if the `sourceset` `src` was an empty string\n      // wait for a `loadstart` to update the cache to `currentSrc`.\n      // If a sourceset happens before a `loadstart`, we reset the state\n      // as this function will be called again.\n      if (!event.src) {\n        var updateCache = function updateCache(e) {\n          if (e.type !== 'sourceset') {\n            _this5.updateSourceCaches_(_this5.techGet_('currentSrc'));\n          }\n\n          _this5.tech_.off(['sourceset', 'loadstart'], updateCache);\n        };\n\n        this.tech_.one(['sourceset', 'loadstart'], updateCache);\n      }\n    }\n\n    this.trigger({\n      src: event.src,\n      type: 'sourceset'\n    });\n  };\n\n  /**\n   * Add/remove the vjs-has-started class\n   *\n   * @fires Player#firstplay\n   *\n   * @param {boolean} request\n   *        - true: adds the class\n   *        - false: remove the class\n   *\n   * @return {boolean}\n   *         the boolean value of hasStarted_\n   */\n\n\n  Player.prototype.hasStarted = function hasStarted(request) {\n    if (request === undefined) {\n      // act as getter, if we have no request to change\n      return this.hasStarted_;\n    }\n\n    if (request === this.hasStarted_) {\n      return;\n    }\n\n    this.hasStarted_ = request;\n\n    if (this.hasStarted_) {\n      this.addClass('vjs-has-started');\n      this.trigger('firstplay');\n    } else {\n      this.removeClass('vjs-has-started');\n    }\n  };\n\n  /**\n   * Fired whenever the media begins or resumes playback\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-play}\n   * @fires Player#play\n   * @listens Tech#play\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlay_ = function handleTechPlay_() {\n    this.removeClass('vjs-ended');\n    this.removeClass('vjs-paused');\n    this.addClass('vjs-playing');\n\n    // hide the poster when the user hits play\n    this.hasStarted(true);\n    /**\n     * Triggered whenever an {@link Tech#play} event happens. Indicates that\n     * playback has started or resumed.\n     *\n     * @event Player#play\n     * @type {EventTarget~Event}\n     */\n    this.trigger('play');\n  };\n\n  /**\n   * Retrigger the `ratechange` event that was triggered by the {@link Tech}.\n   *\n   * If there were any events queued while the playback rate was zero, fire\n   * those events now.\n   *\n   * @private\n   * @method Player#handleTechRateChange_\n   * @fires Player#ratechange\n   * @listens Tech#ratechange\n   */\n\n\n  Player.prototype.handleTechRateChange_ = function handleTechRateChange_() {\n    if (this.tech_.playbackRate() > 0 && this.cache_.lastPlaybackRate === 0) {\n      this.queuedCallbacks_.forEach(function (queued) {\n        return queued.callback(queued.event);\n      });\n      this.queuedCallbacks_ = [];\n    }\n    this.cache_.lastPlaybackRate = this.tech_.playbackRate();\n    /**\n     * Fires when the playing speed of the audio/video is changed\n     *\n     * @event Player#ratechange\n     * @type {event}\n     */\n    this.trigger('ratechange');\n  };\n\n  /**\n   * Retrigger the `waiting` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#waiting\n   * @listens Tech#waiting\n   * @private\n   */\n\n\n  Player.prototype.handleTechWaiting_ = function handleTechWaiting_() {\n    var _this6 = this;\n\n    this.addClass('vjs-waiting');\n    /**\n     * A readyState change on the DOM element has caused playback to stop.\n     *\n     * @event Player#waiting\n     * @type {EventTarget~Event}\n     */\n    this.trigger('waiting');\n    this.one('timeupdate', function () {\n      return _this6.removeClass('vjs-waiting');\n    });\n  };\n\n  /**\n   * Retrigger the `canplay` event that was triggered by the {@link Tech}.\n   * > Note: This is not consistent between browsers. See #1351\n   *\n   * @fires Player#canplay\n   * @listens Tech#canplay\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlay_ = function handleTechCanPlay_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_FUTURE_DATA or greater.\n     *\n     * @event Player#canplay\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplay');\n  };\n\n  /**\n   * Retrigger the `canplaythrough` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#canplaythrough\n   * @listens Tech#canplaythrough\n   * @private\n   */\n\n\n  Player.prototype.handleTechCanPlayThrough_ = function handleTechCanPlayThrough_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media has a readyState of HAVE_ENOUGH_DATA or greater. This means that the\n     * entire media file can be played without buffering.\n     *\n     * @event Player#canplaythrough\n     * @type {EventTarget~Event}\n     */\n    this.trigger('canplaythrough');\n  };\n\n  /**\n   * Retrigger the `playing` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#playing\n   * @listens Tech#playing\n   * @private\n   */\n\n\n  Player.prototype.handleTechPlaying_ = function handleTechPlaying_() {\n    this.removeClass('vjs-waiting');\n    /**\n     * The media is no longer blocked from playback, and has started playing.\n     *\n     * @event Player#playing\n     * @type {EventTarget~Event}\n     */\n    this.trigger('playing');\n  };\n\n  /**\n   * Retrigger the `seeking` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeking\n   * @listens Tech#seeking\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeking_ = function handleTechSeeking_() {\n    this.addClass('vjs-seeking');\n    /**\n     * Fired whenever the player is jumping to a new time\n     *\n     * @event Player#seeking\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeking');\n  };\n\n  /**\n   * Retrigger the `seeked` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#seeked\n   * @listens Tech#seeked\n   * @private\n   */\n\n\n  Player.prototype.handleTechSeeked_ = function handleTechSeeked_() {\n    this.removeClass('vjs-seeking');\n    /**\n     * Fired when the player has finished jumping to a new time\n     *\n     * @event Player#seeked\n     * @type {EventTarget~Event}\n     */\n    this.trigger('seeked');\n  };\n\n  /**\n   * Retrigger the `firstplay` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#firstplay\n   * @listens Tech#firstplay\n   * @deprecated As of 6.0 firstplay event is deprecated.\n   * @deprecated As of 6.0 passing the `starttime` option to the player and the firstplay event are deprecated.\n   * @private\n   */\n\n\n  Player.prototype.handleTechFirstPlay_ = function handleTechFirstPlay_() {\n    // If the first starttime attribute is specified\n    // then we will start at the given offset in seconds\n    if (this.options_.starttime) {\n      log$1.warn('Passing the `starttime` option to the player will be deprecated in 6.0');\n      this.currentTime(this.options_.starttime);\n    }\n\n    this.addClass('vjs-has-started');\n    /**\n     * Fired the first time a video is played. Not part of the HLS spec, and this is\n     * probably not the best implementation yet, so use sparingly. If you don't have a\n     * reason to prevent playback, use `myPlayer.one('play');` instead.\n     *\n     * @event Player#firstplay\n     * @deprecated As of 6.0 firstplay event is deprecated.\n     * @type {EventTarget~Event}\n     */\n    this.trigger('firstplay');\n  };\n\n  /**\n   * Retrigger the `pause` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#pause\n   * @listens Tech#pause\n   * @private\n   */\n\n\n  Player.prototype.handleTechPause_ = function handleTechPause_() {\n    this.removeClass('vjs-playing');\n    this.addClass('vjs-paused');\n    /**\n     * Fired whenever the media has been paused\n     *\n     * @event Player#pause\n     * @type {EventTarget~Event}\n     */\n    this.trigger('pause');\n  };\n\n  /**\n   * Retrigger the `ended` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#ended\n   * @listens Tech#ended\n   * @private\n   */\n\n\n  Player.prototype.handleTechEnded_ = function handleTechEnded_() {\n    this.addClass('vjs-ended');\n    if (this.options_.loop) {\n      this.currentTime(0);\n      this.play();\n    } else if (!this.paused()) {\n      this.pause();\n    }\n\n    /**\n     * Fired when the end of the media resource is reached (currentTime == duration)\n     *\n     * @event Player#ended\n     * @type {EventTarget~Event}\n     */\n    this.trigger('ended');\n  };\n\n  /**\n   * Fired when the duration of the media resource is first known or changed\n   *\n   * @listens Tech#durationchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechDurationChange_ = function handleTechDurationChange_() {\n    this.duration(this.techGet_('duration'));\n  };\n\n  /**\n   * Handle a click on the media element to play/pause\n   *\n   * @param {EventTarget~Event} event\n   *        the event that caused this function to trigger\n   *\n   * @listens Tech#mousedown\n   * @private\n   */\n\n\n  Player.prototype.handleTechClick_ = function handleTechClick_(event) {\n    if (!isSingleLeftClick(event)) {\n      return;\n    }\n\n    // When controls are disabled a click should not toggle playback because\n    // the click is considered a control\n    if (!this.controls_) {\n      return;\n    }\n\n    if (this.paused()) {\n      silencePromise(this.play());\n    } else {\n      this.pause();\n    }\n  };\n\n  /**\n   * Handle a tap on the media element. It will toggle the user\n   * activity state, which hides and shows the controls.\n   *\n   * @listens Tech#tap\n   * @private\n   */\n\n\n  Player.prototype.handleTechTap_ = function handleTechTap_() {\n    this.userActive(!this.userActive());\n  };\n\n  /**\n   * Handle touch to start\n   *\n   * @listens Tech#touchstart\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchStart_ = function handleTechTouchStart_() {\n    this.userWasActive = this.userActive();\n  };\n\n  /**\n   * Handle touch to move\n   *\n   * @listens Tech#touchmove\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchMove_ = function handleTechTouchMove_() {\n    if (this.userWasActive) {\n      this.reportUserActivity();\n    }\n  };\n\n  /**\n   * Handle touch to end\n   *\n   * @param {EventTarget~Event} event\n   *        the touchend event that triggered\n   *        this function\n   *\n   * @listens Tech#touchend\n   * @private\n   */\n\n\n  Player.prototype.handleTechTouchEnd_ = function handleTechTouchEnd_(event) {\n    // Stop the mouse events from also happening\n    event.preventDefault();\n  };\n\n  /**\n   * Fired when the player switches in or out of fullscreen mode\n   *\n   * @private\n   * @listens Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleFullscreenChange_ = function handleFullscreenChange_() {\n    if (this.isFullscreen()) {\n      this.addClass('vjs-fullscreen');\n    } else {\n      this.removeClass('vjs-fullscreen');\n    }\n  };\n\n  /**\n   * native click events on the SWF aren't triggered on IE11, Win8.1RT\n   * use stageclick events triggered from inside the SWF instead\n   *\n   * @private\n   * @listens stageclick\n   */\n\n\n  Player.prototype.handleStageClick_ = function handleStageClick_() {\n    this.reportUserActivity();\n  };\n\n  /**\n   * Handle Tech Fullscreen Change\n   *\n   * @param {EventTarget~Event} event\n   *        the fullscreenchange event that triggered this function\n   *\n   * @param {Object} data\n   *        the data that was sent with the event\n   *\n   * @private\n   * @listens Tech#fullscreenchange\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.handleTechFullscreenChange_ = function handleTechFullscreenChange_(event, data) {\n    if (data) {\n      this.isFullscreen(data.isFullscreen);\n    }\n    /**\n     * Fired when going in and out of fullscreen.\n     *\n     * @event Player#fullscreenchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('fullscreenchange');\n  };\n\n  /**\n   * Fires when an error occurred during the loading of an audio/video.\n   *\n   * @private\n   * @listens Tech#error\n   */\n\n\n  Player.prototype.handleTechError_ = function handleTechError_() {\n    var error = this.tech_.error();\n\n    this.error(error);\n  };\n\n  /**\n   * Retrigger the `textdata` event that was triggered by the {@link Tech}.\n   *\n   * @fires Player#textdata\n   * @listens Tech#textdata\n   * @private\n   */\n\n\n  Player.prototype.handleTechTextData_ = function handleTechTextData_() {\n    var data = null;\n\n    if (arguments.length > 1) {\n      data = arguments[1];\n    }\n\n    /**\n     * Fires when we get a textdata event from tech\n     *\n     * @event Player#textdata\n     * @type {EventTarget~Event}\n     */\n    this.trigger('textdata', data);\n  };\n\n  /**\n   * Get object for cached values.\n   *\n   * @return {Object}\n   *         get the current object cache\n   */\n\n\n  Player.prototype.getCache = function getCache() {\n    return this.cache_;\n  };\n\n  /**\n   * Pass values to the playback tech\n   *\n   * @param {string} [method]\n   *        the method to call\n   *\n   * @param {Object} arg\n   *        the argument to pass\n   *\n   * @private\n   */\n\n\n  Player.prototype.techCall_ = function techCall_(method, arg) {\n    // If it's not ready yet, call method when it is\n\n    this.ready(function () {\n      if (method in allowedSetters) {\n        return set$1(this.middleware_, this.tech_, method, arg);\n      } else if (method in allowedMediators) {\n        return mediate(this.middleware_, this.tech_, method, arg);\n      }\n\n      try {\n        if (this.tech_) {\n          this.tech_[method](arg);\n        }\n      } catch (e) {\n        log$1(e);\n        throw e;\n      }\n    }, true);\n  };\n\n  /**\n   * Get calls can't wait for the tech, and sometimes don't need to.\n   *\n   * @param {string} method\n   *        Tech method\n   *\n   * @return {Function|undefined}\n   *         the method or undefined\n   *\n   * @private\n   */\n\n\n  Player.prototype.techGet_ = function techGet_(method) {\n    if (!this.tech_ || !this.tech_.isReady_) {\n      return;\n    }\n\n    if (method in allowedGetters) {\n      return get$1(this.middleware_, this.tech_, method);\n    } else if (method in allowedMediators) {\n      return mediate(this.middleware_, this.tech_, method);\n    }\n\n    // Flash likes to die and reload when you hide or reposition it.\n    // In these cases the object methods go away and we get errors.\n    // When that happens we'll catch the errors and inform tech that it's not ready any more.\n    try {\n      return this.tech_[method]();\n    } catch (e) {\n\n      // When building additional tech libs, an expected method may not be defined yet\n      if (this.tech_[method] === undefined) {\n        log$1('Video.js: ' + method + ' method not defined for ' + this.techName_ + ' playback technology.', e);\n        throw e;\n      }\n\n      // When a method isn't available on the object it throws a TypeError\n      if (e.name === 'TypeError') {\n        log$1('Video.js: ' + method + ' unavailable on ' + this.techName_ + ' playback technology element.', e);\n        this.tech_.isReady_ = false;\n        throw e;\n      }\n\n      // If error unknown, just log and throw\n      log$1(e);\n      throw e;\n    }\n  };\n\n  /**\n   * Attempt to begin playback at the first opportunity.\n   *\n   * @return {Promise|undefined}\n   *         Returns a `Promise` only if the browser returns one and the player\n   *         is ready to begin playback. For some browsers and all non-ready\n   *         situations, this will return `undefined`.\n   */\n\n\n  Player.prototype.play = function play() {\n    var _this7 = this;\n\n    // If this is called while we have a play queued up on a loadstart, remove\n    // that listener to avoid getting in a potentially bad state.\n    if (this.playOnLoadstart_) {\n      this.off('loadstart', this.playOnLoadstart_);\n    }\n\n    // If the player/tech is not ready, queue up another call to `play()` for\n    // when it is. This will loop back into this method for another attempt at\n    // playback when the tech is ready.\n    if (!this.isReady_) {\n\n      // Bail out if we're already waiting for `ready`!\n      if (this.playWaitingForReady_) {\n        return;\n      }\n\n      this.playWaitingForReady_ = true;\n      this.ready(function () {\n        _this7.playWaitingForReady_ = false;\n        silencePromise(_this7.play());\n      });\n\n      // If the player/tech is ready and we have a source, we can attempt playback.\n    } else if (!this.changingSrc_ && (this.src() || this.currentSrc())) {\n      return this.techGet_('play');\n\n      // If the tech is ready, but we do not have a source, we'll need to wait\n      // for both the `ready` and a `loadstart` when the source is finally\n      // resolved by middleware and set on the player.\n      //\n      // This can happen if `play()` is called while changing sources or before\n      // one has been set on the player.\n    } else {\n\n      this.playOnLoadstart_ = function () {\n        _this7.playOnLoadstart_ = null;\n        silencePromise(_this7.play());\n      };\n\n      this.one('loadstart', this.playOnLoadstart_);\n    }\n  };\n\n  /**\n   * Pause the video playback\n   *\n   * @return {Player}\n   *         A reference to the player object this function was called on\n   */\n\n\n  Player.prototype.pause = function pause() {\n    this.techCall_('pause');\n  };\n\n  /**\n   * Check if the player is paused or has yet to play\n   *\n   * @return {boolean}\n   *         - false: if the media is currently playing\n   *         - true: if media is not currently playing\n   */\n\n\n  Player.prototype.paused = function paused() {\n    // The initial state of paused should be true (in Safari it's actually false)\n    return this.techGet_('paused') === false ? false : true;\n  };\n\n  /**\n   * Get a TimeRange object representing the current ranges of time that the user\n   * has played.\n   *\n   * @return {TimeRange}\n   *         A time range object that represents all the increments of time that have\n   *         been played.\n   */\n\n\n  Player.prototype.played = function played() {\n    return this.techGet_('played') || createTimeRanges(0, 0);\n  };\n\n  /**\n   * Returns whether or not the user is \"scrubbing\". Scrubbing is\n   * when the user has clicked the progress bar handle and is\n   * dragging it along the progress bar.\n   *\n   * @param {boolean} [isScrubbing]\n   *        wether the user is or is not scrubbing\n   *\n   * @return {boolean}\n   *         The value of scrubbing when getting\n   */\n\n\n  Player.prototype.scrubbing = function scrubbing(isScrubbing) {\n    if (typeof isScrubbing === 'undefined') {\n      return this.scrubbing_;\n    }\n    this.scrubbing_ = !!isScrubbing;\n\n    if (isScrubbing) {\n      this.addClass('vjs-scrubbing');\n    } else {\n      this.removeClass('vjs-scrubbing');\n    }\n  };\n\n  /**\n   * Get or set the current time (in seconds)\n   *\n   * @param {number|string} [seconds]\n   *        The time to seek to in seconds\n   *\n   * @return {number}\n   *         - the current time in seconds when getting\n   */\n\n\n  Player.prototype.currentTime = function currentTime(seconds) {\n    if (typeof seconds !== 'undefined') {\n      if (seconds < 0) {\n        seconds = 0;\n      }\n      this.techCall_('setCurrentTime', seconds);\n      return;\n    }\n\n    // cache last currentTime and return. default to 0 seconds\n    //\n    // Caching the currentTime is meant to prevent a massive amount of reads on the tech's\n    // currentTime when scrubbing, but may not provide much performance benefit afterall.\n    // Should be tested. Also something has to read the actual current time or the cache will\n    // never get updated.\n    this.cache_.currentTime = this.techGet_('currentTime') || 0;\n    return this.cache_.currentTime;\n  };\n\n  /**\n   * Normally gets the length in time of the video in seconds;\n   * in all but the rarest use cases an argument will NOT be passed to the method\n   *\n   * > **NOTE**: The video must have started loading before the duration can be\n   * known, and in the case of Flash, may not be known until the video starts\n   * playing.\n   *\n   * @fires Player#durationchange\n   *\n   * @param {number} [seconds]\n   *        The duration of the video to set in seconds\n   *\n   * @return {number}\n   *         - The duration of the video in seconds when getting\n   */\n\n\n  Player.prototype.duration = function duration(seconds) {\n    if (seconds === undefined) {\n      // return NaN if the duration is not known\n      return this.cache_.duration !== undefined ? this.cache_.duration : NaN;\n    }\n\n    seconds = parseFloat(seconds);\n\n    // Standardize on Inifity for signaling video is live\n    if (seconds < 0) {\n      seconds = Infinity;\n    }\n\n    if (seconds !== this.cache_.duration) {\n      // Cache the last set value for optimized scrubbing (esp. Flash)\n      this.cache_.duration = seconds;\n\n      if (seconds === Infinity) {\n        this.addClass('vjs-live');\n      } else {\n        this.removeClass('vjs-live');\n      }\n      /**\n       * @event Player#durationchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('durationchange');\n    }\n  };\n\n  /**\n   * Calculates how much time is left in the video. Not part\n   * of the native video API.\n   *\n   * @return {number}\n   *         The time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTime = function remainingTime() {\n    return this.duration() - this.currentTime();\n  };\n\n  /**\n   * A remaining time function that is intented to be used when\n   * the time is to be displayed directly to the user.\n   *\n   * @return {number}\n   *         The rounded time remaining in seconds\n   */\n\n\n  Player.prototype.remainingTimeDisplay = function remainingTimeDisplay() {\n    return Math.floor(this.duration()) - Math.floor(this.currentTime());\n  };\n\n  //\n  // Kind of like an array of portions of the video that have been downloaded.\n\n  /**\n   * Get a TimeRange object with an array of the times of the video\n   * that have been downloaded. If you just want the percent of the\n   * video that's been downloaded, use bufferedPercent.\n   *\n   * @see [Buffered Spec]{@link http://dev.w3.org/html5/spec/video.html#dom-media-buffered}\n   *\n   * @return {TimeRange}\n   *         A mock TimeRange object (following HTML spec)\n   */\n\n\n  Player.prototype.buffered = function buffered() {\n    var buffered = this.techGet_('buffered');\n\n    if (!buffered || !buffered.length) {\n      buffered = createTimeRanges(0, 0);\n    }\n\n    return buffered;\n  };\n\n  /**\n   * Get the percent (as a decimal) of the video that's been downloaded.\n   * This method is not a part of the native HTML video API.\n   *\n   * @return {number}\n   *         A decimal between 0 and 1 representing the percent\n   *         that is bufferred 0 being 0% and 1 being 100%\n   */\n\n\n  Player.prototype.bufferedPercent = function bufferedPercent$$1() {\n    return bufferedPercent(this.buffered(), this.duration());\n  };\n\n  /**\n   * Get the ending time of the last buffered time range\n   * This is used in the progress bar to encapsulate all time ranges.\n   *\n   * @return {number}\n   *         The end of the last buffered time range\n   */\n\n\n  Player.prototype.bufferedEnd = function bufferedEnd() {\n    var buffered = this.buffered();\n    var duration = this.duration();\n    var end = buffered.end(buffered.length - 1);\n\n    if (end > duration) {\n      end = duration;\n    }\n\n    return end;\n  };\n\n  /**\n   * Get or set the current volume of the media\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         The current volume as a percent when getting\n   */\n\n\n  Player.prototype.volume = function volume(percentAsDecimal) {\n    var vol = void 0;\n\n    if (percentAsDecimal !== undefined) {\n      // Force value to between 0 and 1\n      vol = Math.max(0, Math.min(1, parseFloat(percentAsDecimal)));\n      this.cache_.volume = vol;\n      this.techCall_('setVolume', vol);\n\n      if (vol > 0) {\n        this.lastVolume_(vol);\n      }\n\n      return;\n    }\n\n    // Default to 1 when returning current volume.\n    vol = parseFloat(this.techGet_('volume'));\n    return isNaN(vol) ? 1 : vol;\n  };\n\n  /**\n   * Get the current muted state, or turn mute on or off\n   *\n   * @param {boolean} [muted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean}\n   *         - true if mute is on and getting\n   *         - false if mute is off and getting\n   */\n\n\n  Player.prototype.muted = function muted(_muted) {\n    if (_muted !== undefined) {\n      this.techCall_('setMuted', _muted);\n      return;\n    }\n    return this.techGet_('muted') || false;\n  };\n\n  /**\n   * Get the current defaultMuted state, or turn defaultMuted on or off. defaultMuted\n   * indicates the state of muted on intial playback.\n   *\n   * ```js\n   *   var myPlayer = videojs('some-player-id');\n   *\n   *   myPlayer.src(\"http://www.example.com/path/to/video.mp4\");\n   *\n   *   // get, should be false\n   *   console.log(myPlayer.defaultMuted());\n   *   // set to true\n   *   myPlayer.defaultMuted(true);\n   *   // get should be true\n   *   console.log(myPlayer.defaultMuted());\n   * ```\n   *\n   * @param {boolean} [defaultMuted]\n   *        - true to mute\n   *        - false to unmute\n   *\n   * @return {boolean|Player}\n   *         - true if defaultMuted is on and getting\n   *         - false if defaultMuted is off and getting\n   *         - A reference to the current player when setting\n   */\n\n\n  Player.prototype.defaultMuted = function defaultMuted(_defaultMuted) {\n    if (_defaultMuted !== undefined) {\n      return this.techCall_('setDefaultMuted', _defaultMuted);\n    }\n    return this.techGet_('defaultMuted') || false;\n  };\n\n  /**\n   * Get the last volume, or set it\n   *\n   * @param  {number} [percentAsDecimal]\n   *         The new last volume as a decimal percent:\n   *         - 0 is muted/0%/off\n   *         - 1.0 is 100%/full\n   *         - 0.5 is half volume or 50%\n   *\n   * @return {number}\n   *         the current value of lastVolume as a percent when getting\n   *\n   * @private\n   */\n\n\n  Player.prototype.lastVolume_ = function lastVolume_(percentAsDecimal) {\n    if (percentAsDecimal !== undefined && percentAsDecimal !== 0) {\n      this.cache_.lastVolume = percentAsDecimal;\n      return;\n    }\n    return this.cache_.lastVolume;\n  };\n\n  /**\n   * Check if current tech can support native fullscreen\n   * (e.g. with built in controls like iOS, so not our flash swf)\n   *\n   * @return {boolean}\n   *         if native fullscreen is supported\n   */\n\n\n  Player.prototype.supportsFullScreen = function supportsFullScreen() {\n    return this.techGet_('supportsFullScreen') || false;\n  };\n\n  /**\n   * Check if the player is in fullscreen mode or tell the player that it\n   * is or is not in fullscreen mode.\n   *\n   * > NOTE: As of the latest HTML5 spec, isFullscreen is no longer an official\n   * property and instead document.fullscreenElement is used. But isFullscreen is\n   * still a valuable property for internal player workings.\n   *\n   * @param  {boolean} [isFS]\n   *         Set the players current fullscreen state\n   *\n   * @return {boolean}\n   *         - true if fullscreen is on and getting\n   *         - false if fullscreen is off and getting\n   */\n\n\n  Player.prototype.isFullscreen = function isFullscreen(isFS) {\n    if (isFS !== undefined) {\n      this.isFullscreen_ = !!isFS;\n      return;\n    }\n    return !!this.isFullscreen_;\n  };\n\n  /**\n   * Increase the size of the video to full screen\n   * In some browsers, full screen is not supported natively, so it enters\n   * \"full window mode\", where the video fills the browser window.\n   * In browsers and devices that support native full screen, sometimes the\n   * browser's default controls will be shown, and not the Video.js custom skin.\n   * This includes most mobile devices (iOS, Android) and older versions of\n   * Safari.\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.requestFullscreen = function requestFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(true);\n\n    if (fsApi.requestFullscreen) {\n      // the browser supports going fullscreen at the element level so we can\n      // take the controls fullscreen as well as the video\n\n      // Trigger fullscreenchange event after change\n      // We have to specifically add this each time, and remove\n      // when canceling fullscreen. Otherwise if there's multiple\n      // players on a page, they would all be reacting to the same fullscreen\n      // events\n      on(document, fsApi.fullscreenchange, bind(this, function documentFullscreenChange(e) {\n        this.isFullscreen(document[fsApi.fullscreenElement]);\n\n        // If cancelling fullscreen, remove event listener.\n        if (this.isFullscreen() === false) {\n          off(document, fsApi.fullscreenchange, documentFullscreenChange);\n        }\n        /**\n         * @event Player#fullscreenchange\n         * @type {EventTarget~Event}\n         */\n        this.trigger('fullscreenchange');\n      }));\n\n      this.el_[fsApi.requestFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      // we can't take the video.js controls fullscreen but we can go fullscreen\n      // with native controls\n      this.techCall_('enterFullScreen');\n    } else {\n      // fullscreen isn't supported so we'll just stretch the video element to\n      // fill the viewport\n      this.enterFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * Return the video to its normal size after having been in full screen mode\n   *\n   * @fires Player#fullscreenchange\n   */\n\n\n  Player.prototype.exitFullscreen = function exitFullscreen() {\n    var fsApi = FullscreenApi;\n\n    this.isFullscreen(false);\n\n    // Check for browser element fullscreen support\n    if (fsApi.requestFullscreen) {\n      document[fsApi.exitFullscreen]();\n    } else if (this.tech_.supportsFullScreen()) {\n      this.techCall_('exitFullScreen');\n    } else {\n      this.exitFullWindow();\n      /**\n       * @event Player#fullscreenchange\n       * @type {EventTarget~Event}\n       */\n      this.trigger('fullscreenchange');\n    }\n  };\n\n  /**\n   * When fullscreen isn't supported we can stretch the\n   * video container to as wide as the browser will let us.\n   *\n   * @fires Player#enterFullWindow\n   */\n\n\n  Player.prototype.enterFullWindow = function enterFullWindow() {\n    this.isFullWindow = true;\n\n    // Storing original doc overflow value to return to when fullscreen is off\n    this.docOrigOverflow = document.documentElement.style.overflow;\n\n    // Add listener for esc key to exit fullscreen\n    on(document, 'keydown', bind(this, this.fullWindowOnEscKey));\n\n    // Hide any scroll bars\n    document.documentElement.style.overflow = 'hidden';\n\n    // Apply fullscreen styles\n    addClass(document.body, 'vjs-full-window');\n\n    /**\n     * @event Player#enterFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('enterFullWindow');\n  };\n\n  /**\n   * Check for call to either exit full window or\n   * full screen on ESC key\n   *\n   * @param {string} event\n   *        Event to check for key press\n   */\n\n\n  Player.prototype.fullWindowOnEscKey = function fullWindowOnEscKey(event) {\n    if (event.keyCode === 27) {\n      if (this.isFullscreen() === true) {\n        this.exitFullscreen();\n      } else {\n        this.exitFullWindow();\n      }\n    }\n  };\n\n  /**\n   * Exit full window\n   *\n   * @fires Player#exitFullWindow\n   */\n\n\n  Player.prototype.exitFullWindow = function exitFullWindow() {\n    this.isFullWindow = false;\n    off(document, 'keydown', this.fullWindowOnEscKey);\n\n    // Unhide scroll bars.\n    document.documentElement.style.overflow = this.docOrigOverflow;\n\n    // Remove fullscreen styles\n    removeClass(document.body, 'vjs-full-window');\n\n    // Resize the box, controller, and poster to original sizes\n    // this.positionAll();\n    /**\n     * @event Player#exitFullWindow\n     * @type {EventTarget~Event}\n     */\n    this.trigger('exitFullWindow');\n  };\n\n  /**\n   * Check whether the player can play a given mimetype\n   *\n   * @see https://www.w3.org/TR/2011/WD-html5-20110113/video.html#dom-navigator-canplaytype\n   *\n   * @param {string} type\n   *        The mimetype to check\n   *\n   * @return {string}\n   *         'probably', 'maybe', or '' (empty string)\n   */\n\n\n  Player.prototype.canPlayType = function canPlayType(type) {\n    var can = void 0;\n\n    // Loop through each playback technology in the options order\n    for (var i = 0, j = this.options_.techOrder; i < j.length; i++) {\n      var techName = j[i];\n      var tech = Tech.getTech(techName);\n\n      // Support old behavior of techs being registered as components.\n      // Remove once that deprecated behavior is removed.\n      if (!tech) {\n        tech = Component.getComponent(techName);\n      }\n\n      // Check if the current tech is defined before continuing\n      if (!tech) {\n        log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n        continue;\n      }\n\n      // Check if the browser supports this technology\n      if (tech.isSupported()) {\n        can = tech.canPlayType(type);\n\n        if (can) {\n          return can;\n        }\n      }\n    }\n\n    return '';\n  };\n\n  /**\n   * Select source based on tech-order or source-order\n   * Uses source-order selection if `options.sourceOrder` is truthy. Otherwise,\n   * defaults to tech-order selection\n   *\n   * @param {Array} sources\n   *        The sources for a media asset\n   *\n   * @return {Object|boolean}\n   *         Object of source and tech order or false\n   */\n\n\n  Player.prototype.selectSource = function selectSource(sources) {\n    var _this8 = this;\n\n    // Get only the techs specified in `techOrder` that exist and are supported by the\n    // current platform\n    var techs = this.options_.techOrder.map(function (techName) {\n      return [techName, Tech.getTech(techName)];\n    }).filter(function (_ref) {\n      var techName = _ref[0],\n          tech = _ref[1];\n\n      // Check if the current tech is defined before continuing\n      if (tech) {\n        // Check if the browser supports this technology\n        return tech.isSupported();\n      }\n\n      log$1.error('The \"' + techName + '\" tech is undefined. Skipped browser support check for that tech.');\n      return false;\n    });\n\n    // Iterate over each `innerArray` element once per `outerArray` element and execute\n    // `tester` with both. If `tester` returns a non-falsy value, exit early and return\n    // that value.\n    var findFirstPassingTechSourcePair = function findFirstPassingTechSourcePair(outerArray, innerArray, tester) {\n      var found = void 0;\n\n      outerArray.some(function (outerChoice) {\n        return innerArray.some(function (innerChoice) {\n          found = tester(outerChoice, innerChoice);\n\n          if (found) {\n            return true;\n          }\n        });\n      });\n\n      return found;\n    };\n\n    var foundSourceAndTech = void 0;\n    var flip = function flip(fn) {\n      return function (a, b) {\n        return fn(b, a);\n      };\n    };\n    var finder = function finder(_ref2, source) {\n      var techName = _ref2[0],\n          tech = _ref2[1];\n\n      if (tech.canPlaySource(source, _this8.options_[techName.toLowerCase()])) {\n        return { source: source, tech: techName };\n      }\n    };\n\n    // Depending on the truthiness of `options.sourceOrder`, we swap the order of techs and sources\n    // to select from them based on their priority.\n    if (this.options_.sourceOrder) {\n      // Source-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(sources, techs, flip(finder));\n    } else {\n      // Tech-first ordering\n      foundSourceAndTech = findFirstPassingTechSourcePair(techs, sources, finder);\n    }\n\n    return foundSourceAndTech || false;\n  };\n\n  /**\n   * Get or set the video source.\n   *\n   * @param {Tech~SourceObject|Tech~SourceObject[]|string} [source]\n   *        A SourceObject, an array of SourceObjects, or a string referencing\n   *        a URL to a media source. It is _highly recommended_ that an object\n   *        or array of objects is used here, so that source selection\n   *        algorithms can take the `type` into account.\n   *\n   *        If not provided, this method acts as a getter.\n   *\n   * @return {string|undefined}\n   *         If the `source` argument is missing, returns the current source\n   *         URL. Otherwise, returns nothing/undefined.\n   */\n\n\n  Player.prototype.src = function src(source) {\n    var _this9 = this;\n\n    // getter usage\n    if (typeof source === 'undefined') {\n      return this.cache_.src || '';\n    }\n    // filter out invalid sources and turn our source into\n    // an array of source objects\n    var sources = filterSource(source);\n\n    // if a source was passed in then it is invalid because\n    // it was filtered to a zero length Array. So we have to\n    // show an error\n    if (!sources.length) {\n      this.setTimeout(function () {\n        this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n      }, 0);\n      return;\n    }\n\n    // intial sources\n    this.changingSrc_ = true;\n\n    this.cache_.sources = sources;\n    this.updateSourceCaches_(sources[0]);\n\n    // middlewareSource is the source after it has been changed by middleware\n    setSource(this, sources[0], function (middlewareSource, mws) {\n      _this9.middleware_ = mws;\n\n      // since sourceSet is async we have to update the cache again after we select a source since\n      // the source that is selected could be out of order from the cache update above this callback.\n      _this9.cache_.sources = sources;\n      _this9.updateSourceCaches_(middlewareSource);\n\n      var err = _this9.src_(middlewareSource);\n\n      if (err) {\n        if (sources.length > 1) {\n          return _this9.src(sources.slice(1));\n        }\n\n        _this9.changingSrc_ = false;\n\n        // We need to wrap this in a timeout to give folks a chance to add error event handlers\n        _this9.setTimeout(function () {\n          this.error({ code: 4, message: this.localize(this.options_.notSupportedMessage) });\n        }, 0);\n\n        // we could not find an appropriate tech, but let's still notify the delegate that this is it\n        // this needs a better comment about why this is needed\n        _this9.triggerReady();\n\n        return;\n      }\n\n      setTech(mws, _this9.tech_);\n    });\n  };\n\n  /**\n   * Set the source object on the tech, returns a boolean that indicates wether\n   * there is a tech that can play the source or not\n   *\n   * @param {Tech~SourceObject} source\n   *        The source object to set on the Tech\n   *\n   * @return {Boolean}\n   *         - True if there is no Tech to playback this source\n   *         - False otherwise\n   *\n   * @private\n   */\n\n\n  Player.prototype.src_ = function src_(source) {\n    var _this10 = this;\n\n    var sourceTech = this.selectSource([source]);\n\n    if (!sourceTech) {\n      return true;\n    }\n\n    if (!titleCaseEquals(sourceTech.tech, this.techName_)) {\n      this.changingSrc_ = true;\n      // load this technology with the chosen source\n      this.loadTech_(sourceTech.tech, sourceTech.source);\n      this.tech_.ready(function () {\n        _this10.changingSrc_ = false;\n      });\n      return false;\n    }\n\n    // wait until the tech is ready to set the source\n    // and set it synchronously if possible (#2326)\n    this.ready(function () {\n\n      // The setSource tech method was added with source handlers\n      // so older techs won't support it\n      // We need to check the direct prototype for the case where subclasses\n      // of the tech do not support source handlers\n      if (this.tech_.constructor.prototype.hasOwnProperty('setSource')) {\n        this.techCall_('setSource', source);\n      } else {\n        this.techCall_('src', source.src);\n      }\n\n      this.changingSrc_ = false;\n    }, true);\n\n    return false;\n  };\n\n  /**\n   * Begin loading the src data.\n   */\n\n\n  Player.prototype.load = function load() {\n    this.techCall_('load');\n  };\n\n  /**\n   * Reset the player. Loads the first tech in the techOrder,\n   * and calls `reset` on the tech`.\n   */\n\n\n  Player.prototype.reset = function reset() {\n    this.loadTech_(this.options_.techOrder[0], null);\n    this.techCall_('reset');\n  };\n\n  /**\n   * Returns all of the current source objects.\n   *\n   * @return {Tech~SourceObject[]}\n   *         The current source objects\n   */\n\n\n  Player.prototype.currentSources = function currentSources() {\n    var source = this.currentSource();\n    var sources = [];\n\n    // assume `{}` or `{ src }`\n    if (Object.keys(source).length !== 0) {\n      sources.push(source);\n    }\n\n    return this.cache_.sources || sources;\n  };\n\n  /**\n   * Returns the current source object.\n   *\n   * @return {Tech~SourceObject}\n   *         The current source object\n   */\n\n\n  Player.prototype.currentSource = function currentSource() {\n    return this.cache_.source || {};\n  };\n\n  /**\n   * Returns the fully qualified URL of the current source value e.g. http://mysite.com/video.mp4\n   * Can be used in conjuction with `currentType` to assist in rebuilding the current source object.\n   *\n   * @return {string}\n   *         The current source\n   */\n\n\n  Player.prototype.currentSrc = function currentSrc() {\n    return this.currentSource() && this.currentSource().src || '';\n  };\n\n  /**\n   * Get the current source type e.g. video/mp4\n   * This can allow you rebuild the current source object so that you could load the same\n   * source and tech later\n   *\n   * @return {string}\n   *         The source MIME type\n   */\n\n\n  Player.prototype.currentType = function currentType() {\n    return this.currentSource() && this.currentSource().type || '';\n  };\n\n  /**\n   * Get or set the preload attribute\n   *\n   * @param {boolean} [value]\n   *        - true means that we should preload\n   *        - false maens that we should not preload\n   *\n   * @return {string}\n   *         The preload attribute value when getting\n   */\n\n\n  Player.prototype.preload = function preload(value) {\n    if (value !== undefined) {\n      this.techCall_('setPreload', value);\n      this.options_.preload = value;\n      return;\n    }\n    return this.techGet_('preload');\n  };\n\n  /**\n   * Get or set the autoplay option. When this is a boolean it will\n   * modify the attribute on the tech. When this is a string the attribute on\n   * the tech will be removed and `Player` will handle autoplay on loadstarts.\n   *\n   * @param {boolean|string} [value]\n   *        - true: autoplay using the browser behavior\n   *        - false: do not autoplay\n   *        - 'play': call play() on every loadstart\n   *        - 'muted': call muted() then play() on every loadstart\n   *        - 'any': call play() on every loadstart. if that fails call muted() then play().\n   *        - *: values other than those listed here will be set `autoplay` to true\n   *\n   * @return {boolean|string}\n   *         The current value of autoplay when getting\n   */\n\n\n  Player.prototype.autoplay = function autoplay(value) {\n    // getter usage\n    if (value === undefined) {\n      return this.options_.autoplay || false;\n    }\n\n    var techAutoplay = void 0;\n\n    // if the value is a valid string set it to that\n    if (typeof value === 'string' && /(any|play|muted)/.test(value)) {\n      this.options_.autoplay = value;\n      this.manualAutoplay_(value);\n      techAutoplay = false;\n\n      // any falsy value sets autoplay to false in the browser,\n      // lets do the same\n    } else if (!value) {\n      this.options_.autoplay = false;\n\n      // any other value (ie truthy) sets autoplay to true\n    } else {\n      this.options_.autoplay = true;\n    }\n\n    techAutoplay = techAutoplay || this.options_.autoplay;\n\n    // if we don't have a tech then we do not queue up\n    // a setAutoplay call on tech ready. We do this because the\n    // autoplay option will be passed in the constructor and we\n    // do not need to set it twice\n    if (this.tech_) {\n      this.techCall_('setAutoplay', techAutoplay);\n    }\n  };\n\n  /**\n   * Set or unset the playsinline attribute.\n   * Playsinline tells the browser that non-fullscreen playback is preferred.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should try to play inline by default\n   *        - false means that we should use the browser's default playback mode,\n   *          which in most cases is inline. iOS Safari is a notable exception\n   *          and plays fullscreen by default.\n   *\n   * @return {string|Player}\n   *         - the current value of playsinline\n   *         - the player when setting\n   *\n   * @see [Spec]{@link https://html.spec.whatwg.org/#attr-video-playsinline}\n   */\n\n\n  Player.prototype.playsinline = function playsinline(value) {\n    if (value !== undefined) {\n      this.techCall_('setPlaysinline', value);\n      this.options_.playsinline = value;\n      return this;\n    }\n    return this.techGet_('playsinline');\n  };\n\n  /**\n   * Get or set the loop attribute on the video element.\n   *\n   * @param {boolean} [value]\n   *        - true means that we should loop the video\n   *        - false means that we should not loop the video\n   *\n   * @return {string}\n   *         The current value of loop when getting\n   */\n\n\n  Player.prototype.loop = function loop(value) {\n    if (value !== undefined) {\n      this.techCall_('setLoop', value);\n      this.options_.loop = value;\n      return;\n    }\n    return this.techGet_('loop');\n  };\n\n  /**\n   * Get or set the poster image source url\n   *\n   * @fires Player#posterchange\n   *\n   * @param {string} [src]\n   *        Poster image source URL\n   *\n   * @return {string}\n   *         The current value of poster when getting\n   */\n\n\n  Player.prototype.poster = function poster(src) {\n    if (src === undefined) {\n      return this.poster_;\n    }\n\n    // The correct way to remove a poster is to set as an empty string\n    // other falsey values will throw errors\n    if (!src) {\n      src = '';\n    }\n\n    if (src === this.poster_) {\n      return;\n    }\n\n    // update the internal poster variable\n    this.poster_ = src;\n\n    // update the tech's poster\n    this.techCall_('setPoster', src);\n\n    this.isPosterFromTech_ = false;\n\n    // alert components that the poster has been set\n    /**\n     * This event fires when the poster image is changed on the player.\n     *\n     * @event Player#posterchange\n     * @type {EventTarget~Event}\n     */\n    this.trigger('posterchange');\n  };\n\n  /**\n   * Some techs (e.g. YouTube) can provide a poster source in an\n   * asynchronous way. We want the poster component to use this\n   * poster source so that it covers up the tech's controls.\n   * (YouTube's play button). However we only want to use this\n   * source if the player user hasn't set a poster through\n   * the normal APIs.\n   *\n   * @fires Player#posterchange\n   * @listens Tech#posterchange\n   * @private\n   */\n\n\n  Player.prototype.handleTechPosterChange_ = function handleTechPosterChange_() {\n    if ((!this.poster_ || this.options_.techCanOverridePoster) && this.tech_ && this.tech_.poster) {\n      var newPoster = this.tech_.poster() || '';\n\n      if (newPoster !== this.poster_) {\n        this.poster_ = newPoster;\n        this.isPosterFromTech_ = true;\n\n        // Let components know the poster has changed\n        this.trigger('posterchange');\n      }\n    }\n  };\n\n  /**\n   * Get or set whether or not the controls are showing.\n   *\n   * @fires Player#controlsenabled\n   *\n   * @param {boolean} [bool]\n   *        - true to turn controls on\n   *        - false to turn controls off\n   *\n   * @return {boolean}\n   *         The current value of controls when getting\n   */\n\n\n  Player.prototype.controls = function controls(bool) {\n    if (bool === undefined) {\n      return !!this.controls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.controls_ === bool) {\n      return;\n    }\n\n    this.controls_ = bool;\n\n    if (this.usingNativeControls()) {\n      this.techCall_('setControls', bool);\n    }\n\n    if (this.controls_) {\n      this.removeClass('vjs-controls-disabled');\n      this.addClass('vjs-controls-enabled');\n      /**\n       * @event Player#controlsenabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsenabled');\n      if (!this.usingNativeControls()) {\n        this.addTechControlsListeners_();\n      }\n    } else {\n      this.removeClass('vjs-controls-enabled');\n      this.addClass('vjs-controls-disabled');\n      /**\n       * @event Player#controlsdisabled\n       * @type {EventTarget~Event}\n       */\n      this.trigger('controlsdisabled');\n      if (!this.usingNativeControls()) {\n        this.removeTechControlsListeners_();\n      }\n    }\n  };\n\n  /**\n   * Toggle native controls on/off. Native controls are the controls built into\n   * devices (e.g. default iPhone controls), Flash, or other techs\n   * (e.g. Vimeo Controls)\n   * **This should only be set by the current tech, because only the tech knows\n   * if it can support native controls**\n   *\n   * @fires Player#usingnativecontrols\n   * @fires Player#usingcustomcontrols\n   *\n   * @param {boolean} [bool]\n   *        - true to turn native controls on\n   *        - false to turn native controls off\n   *\n   * @return {boolean}\n   *         The current value of native controls when getting\n   */\n\n\n  Player.prototype.usingNativeControls = function usingNativeControls(bool) {\n    if (bool === undefined) {\n      return !!this.usingNativeControls_;\n    }\n\n    bool = !!bool;\n\n    // Don't trigger a change event unless it actually changed\n    if (this.usingNativeControls_ === bool) {\n      return;\n    }\n\n    this.usingNativeControls_ = bool;\n\n    if (this.usingNativeControls_) {\n      this.addClass('vjs-using-native-controls');\n\n      /**\n       * player is using the native device controls\n       *\n       * @event Player#usingnativecontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingnativecontrols');\n    } else {\n      this.removeClass('vjs-using-native-controls');\n\n      /**\n       * player is using the custom HTML controls\n       *\n       * @event Player#usingcustomcontrols\n       * @type {EventTarget~Event}\n       */\n      this.trigger('usingcustomcontrols');\n    }\n  };\n\n  /**\n   * Set or get the current MediaError\n   *\n   * @fires Player#error\n   *\n   * @param  {MediaError|string|number} [err]\n   *         A MediaError or a string/number to be turned\n   *         into a MediaError\n   *\n   * @return {MediaError|null}\n   *         The current MediaError when getting (or null)\n   */\n\n\n  Player.prototype.error = function error(err) {\n    if (err === undefined) {\n      return this.error_ || null;\n    }\n\n    // restoring to default\n    if (err === null) {\n      this.error_ = err;\n      this.removeClass('vjs-error');\n      if (this.errorDisplay) {\n        this.errorDisplay.close();\n      }\n      return;\n    }\n\n    this.error_ = new MediaError(err);\n\n    // add the vjs-error classname to the player\n    this.addClass('vjs-error');\n\n    // log the name of the error type and any message\n    // ie8 just logs \"[object object]\" if you just log the error object\n    log$1.error('(CODE:' + this.error_.code + ' ' + MediaError.errorTypes[this.error_.code] + ')', this.error_.message, this.error_);\n\n    /**\n     * @event Player#error\n     * @type {EventTarget~Event}\n     */\n    this.trigger('error');\n\n    return;\n  };\n\n  /**\n   * Report user activity\n   *\n   * @param {Object} event\n   *        Event object\n   */\n\n\n  Player.prototype.reportUserActivity = function reportUserActivity(event) {\n    this.userActivity_ = true;\n  };\n\n  /**\n   * Get/set if user is active\n   *\n   * @fires Player#useractive\n   * @fires Player#userinactive\n   *\n   * @param {boolean} [bool]\n   *        - true if the user is active\n   *        - false if the user is inactive\n   *\n   * @return {boolean}\n   *         The current value of userActive when getting\n   */\n\n\n  Player.prototype.userActive = function userActive(bool) {\n    if (bool === undefined) {\n      return this.userActive_;\n    }\n\n    bool = !!bool;\n\n    if (bool === this.userActive_) {\n      return;\n    }\n\n    this.userActive_ = bool;\n\n    if (this.userActive_) {\n      this.userActivity_ = true;\n      this.removeClass('vjs-user-inactive');\n      this.addClass('vjs-user-active');\n      /**\n       * @event Player#useractive\n       * @type {EventTarget~Event}\n       */\n      this.trigger('useractive');\n      return;\n    }\n\n    // Chrome/Safari/IE have bugs where when you change the cursor it can\n    // trigger a mousemove event. This causes an issue when you're hiding\n    // the cursor when the user is inactive, and a mousemove signals user\n    // activity. Making it impossible to go into inactive mode. Specifically\n    // this happens in fullscreen when we really need to hide the cursor.\n    //\n    // When this gets resolved in ALL browsers it can be removed\n    // https://code.google.com/p/chromium/issues/detail?id=103041\n    if (this.tech_) {\n      this.tech_.one('mousemove', function (e) {\n        e.stopPropagation();\n        e.preventDefault();\n      });\n    }\n\n    this.userActivity_ = false;\n    this.removeClass('vjs-user-active');\n    this.addClass('vjs-user-inactive');\n    /**\n     * @event Player#userinactive\n     * @type {EventTarget~Event}\n     */\n    this.trigger('userinactive');\n  };\n\n  /**\n   * Listen for user activity based on timeout value\n   *\n   * @private\n   */\n\n\n  Player.prototype.listenForUserActivity_ = function listenForUserActivity_() {\n    var mouseInProgress = void 0;\n    var lastMoveX = void 0;\n    var lastMoveY = void 0;\n    var handleActivity = bind(this, this.reportUserActivity);\n\n    var handleMouseMove = function handleMouseMove(e) {\n      // #1068 - Prevent mousemove spamming\n      // Chrome Bug: https://code.google.com/p/chromium/issues/detail?id=366970\n      if (e.screenX !== lastMoveX || e.screenY !== lastMoveY) {\n        lastMoveX = e.screenX;\n        lastMoveY = e.screenY;\n        handleActivity();\n      }\n    };\n\n    var handleMouseDown = function handleMouseDown() {\n      handleActivity();\n      // For as long as the they are touching the device or have their mouse down,\n      // we consider them active even if they're not moving their finger or mouse.\n      // So we want to continue to update that they are active\n      this.clearInterval(mouseInProgress);\n      // Setting userActivity=true now and setting the interval to the same time\n      // as the activityCheck interval (250) should ensure we never miss the\n      // next activityCheck\n      mouseInProgress = this.setInterval(handleActivity, 250);\n    };\n\n    var handleMouseUp = function handleMouseUp(event) {\n      handleActivity();\n      // Stop the interval that maintains activity if the mouse/touch is down\n      this.clearInterval(mouseInProgress);\n    };\n\n    // Any mouse movement will be considered user activity\n    this.on('mousedown', handleMouseDown);\n    this.on('mousemove', handleMouseMove);\n    this.on('mouseup', handleMouseUp);\n\n    // Listen for keyboard navigation\n    // Shouldn't need to use inProgress interval because of key repeat\n    this.on('keydown', handleActivity);\n    this.on('keyup', handleActivity);\n\n    // Run an interval every 250 milliseconds instead of stuffing everything into\n    // the mousemove/touchmove function itself, to prevent performance degradation.\n    // `this.reportUserActivity` simply sets this.userActivity_ to true, which\n    // then gets picked up by this loop\n    // http://ejohn.org/blog/learning-from-twitter/\n    var inactivityTimeout = void 0;\n\n    this.setInterval(function () {\n      // Check to see if mouse/touch activity has happened\n      if (!this.userActivity_) {\n        return;\n      }\n\n      // Reset the activity tracker\n      this.userActivity_ = false;\n\n      // If the user state was inactive, set the state to active\n      this.userActive(true);\n\n      // Clear any existing inactivity timeout to start the timer over\n      this.clearTimeout(inactivityTimeout);\n\n      var timeout = this.options_.inactivityTimeout;\n\n      if (timeout <= 0) {\n        return;\n      }\n\n      // In <timeout> milliseconds, if no more activity has occurred the\n      // user will be considered inactive\n      inactivityTimeout = this.setTimeout(function () {\n        // Protect against the case where the inactivityTimeout can trigger just\n        // before the next user activity is picked up by the activity check loop\n        // causing a flicker\n        if (!this.userActivity_) {\n          this.userActive(false);\n        }\n      }, timeout);\n    }, 250);\n  };\n\n  /**\n   * Gets or sets the current playback rate. A playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed\n   * playback, for instance.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-playbackrate\n   *\n   * @param {number} [rate]\n   *       New playback rate to set.\n   *\n   * @return {number}\n   *         The current playback rate when getting or 1.0\n   */\n\n\n  Player.prototype.playbackRate = function playbackRate(rate) {\n    if (rate !== undefined) {\n      // NOTE: this.cache_.lastPlaybackRate is set from the tech handler\n      // that is registered above\n      this.techCall_('setPlaybackRate', rate);\n      return;\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.cache_.lastPlaybackRate || this.techGet_('playbackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the current default playback rate. A default playback rate of\n   * 1.0 represents normal speed and 0.5 would indicate half-speed playback, for instance.\n   * defaultPlaybackRate will only represent what the intial playbackRate of a video was, not\n   * not the current playbackRate.\n   *\n   * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-defaultplaybackrate\n   *\n   * @param {number} [rate]\n   *       New default playback rate to set.\n   *\n   * @return {number|Player}\n   *         - The default playback rate when getting or 1.0\n   *         - the player when setting\n   */\n\n\n  Player.prototype.defaultPlaybackRate = function defaultPlaybackRate(rate) {\n    if (rate !== undefined) {\n      return this.techCall_('setDefaultPlaybackRate', rate);\n    }\n\n    if (this.tech_ && this.tech_.featuresPlaybackRate) {\n      return this.techGet_('defaultPlaybackRate');\n    }\n    return 1.0;\n  };\n\n  /**\n   * Gets or sets the audio flag\n   *\n   * @param {boolean} bool\n   *        - true signals that this is an audio player\n   *        - false signals that this is not an audio player\n   *\n   * @return {boolean}\n   *         The current value of isAudio when getting\n   */\n\n\n  Player.prototype.isAudio = function isAudio(bool) {\n    if (bool !== undefined) {\n      this.isAudio_ = !!bool;\n      return;\n    }\n\n    return !!this.isAudio_;\n  };\n\n  /**\n   * A helper method for adding a {@link TextTrack} to our\n   * {@link TextTrackList}.\n   *\n   * In addition to the W3C settings we allow adding additional info through options.\n   *\n   * @see http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-addtexttrack\n   *\n   * @param {string} [kind]\n   *        the kind of TextTrack you are adding\n   *\n   * @param {string} [label]\n   *        the label to give the TextTrack label\n   *\n   * @param {string} [language]\n   *        the language to set on the TextTrack\n   *\n   * @return {TextTrack|undefined}\n   *         the TextTrack that was added or undefined\n   *         if there is no tech\n   */\n\n\n  Player.prototype.addTextTrack = function addTextTrack(kind, label, language) {\n    if (this.tech_) {\n      return this.tech_.addTextTrack(kind, label, language);\n    }\n  };\n\n  /**\n   * Create a remote {@link TextTrack} and an {@link HTMLTrackElement}. It will\n   * automatically removed from the video element whenever the source changes, unless\n   * manualCleanup is set to false.\n   *\n   * @param {Object} options\n   *        Options to pass to {@link HTMLTrackElement} during creation. See\n   *        {@link HTMLTrackElement} for object properties that you should use.\n   *\n   * @param {boolean} [manualCleanup=true] if set to false, the TextTrack will be\n   *\n   * @return {HtmlTrackElement}\n   *         the HTMLTrackElement that was created and added\n   *         to the HtmlTrackElementList and the remote\n   *         TextTrackList\n   *\n   * @deprecated The default value of the \"manualCleanup\" parameter will default\n   *             to \"false\" in upcoming versions of Video.js\n   */\n\n\n  Player.prototype.addRemoteTextTrack = function addRemoteTextTrack(options, manualCleanup) {\n    if (this.tech_) {\n      return this.tech_.addRemoteTextTrack(options, manualCleanup);\n    }\n  };\n\n  /**\n   * Remove a remote {@link TextTrack} from the respective\n   * {@link TextTrackList} and {@link HtmlTrackElementList}.\n   *\n   * @param {Object} track\n   *        Remote {@link TextTrack} to remove\n   *\n   * @return {undefined}\n   *         does not return anything\n   */\n\n\n  Player.prototype.removeRemoteTextTrack = function removeRemoteTextTrack() {\n    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n        _ref3$track = _ref3.track,\n        track = _ref3$track === undefined ? arguments[0] : _ref3$track;\n\n    // destructure the input into an object with a track argument, defaulting to arguments[0]\n    // default the whole argument to an empty object if nothing was passed in\n\n    if (this.tech_) {\n      return this.tech_.removeRemoteTextTrack(track);\n    }\n  };\n\n  /**\n   * Gets available media playback quality metrics as specified by the W3C's Media\n   * Playback Quality API.\n   *\n   * @see [Spec]{@link https://wicg.github.io/media-playback-quality}\n   *\n   * @return {Object|undefined}\n   *         An object with supported media playback quality metrics or undefined if there\n   *         is no tech or the tech does not support it.\n   */\n\n\n  Player.prototype.getVideoPlaybackQuality = function getVideoPlaybackQuality() {\n    return this.techGet_('getVideoPlaybackQuality');\n  };\n\n  /**\n   * Get video width\n   *\n   * @return {number}\n   *         current video width\n   */\n\n\n  Player.prototype.videoWidth = function videoWidth() {\n    return this.tech_ && this.tech_.videoWidth && this.tech_.videoWidth() || 0;\n  };\n\n  /**\n   * Get video height\n   *\n   * @return {number}\n   *         current video height\n   */\n\n\n  Player.prototype.videoHeight = function videoHeight() {\n    return this.tech_ && this.tech_.videoHeight && this.tech_.videoHeight() || 0;\n  };\n\n  /**\n   * The player's language code\n   * NOTE: The language should be set in the player options if you want the\n   * the controls to be built with a specific language. Changing the lanugage\n   * later will not update controls text.\n   *\n   * @param {string} [code]\n   *        the language code to set the player to\n   *\n   * @return {string}\n   *         The current language code when getting\n   */\n\n\n  Player.prototype.language = function language(code) {\n    if (code === undefined) {\n      return this.language_;\n    }\n\n    this.language_ = String(code).toLowerCase();\n  };\n\n  /**\n   * Get the player's language dictionary\n   * Merge every time, because a newly added plugin might call videojs.addLanguage() at any time\n   * Languages specified directly in the player options have precedence\n   *\n   * @return {Array}\n   *         An array of of supported languages\n   */\n\n\n  Player.prototype.languages = function languages() {\n    return mergeOptions(Player.prototype.options_.languages, this.languages_);\n  };\n\n  /**\n   * returns a JavaScript object reperesenting the current track\n   * information. **DOES not return it as JSON**\n   *\n   * @return {Object}\n   *         Object representing the current of track info\n   */\n\n\n  Player.prototype.toJSON = function toJSON() {\n    var options = mergeOptions(this.options_);\n    var tracks = options.tracks;\n\n    options.tracks = [];\n\n    for (var i = 0; i < tracks.length; i++) {\n      var track = tracks[i];\n\n      // deep merge tracks and null out player so no circular references\n      track = mergeOptions(track);\n      track.player = undefined;\n      options.tracks[i] = track;\n    }\n\n    return options;\n  };\n\n  /**\n   * Creates a simple modal dialog (an instance of the {@link ModalDialog}\n   * component) that immediately overlays the player with arbitrary\n   * content and removes itself when closed.\n   *\n   * @param {string|Function|Element|Array|null} content\n   *        Same as {@link ModalDialog#content}'s param of the same name.\n   *        The most straight-forward usage is to provide a string or DOM\n   *        element.\n   *\n   * @param {Object} [options]\n   *        Extra options which will be passed on to the {@link ModalDialog}.\n   *\n   * @return {ModalDialog}\n   *         the {@link ModalDialog} that was created\n   */\n\n\n  Player.prototype.createModal = function createModal(content, options) {\n    var _this11 = this;\n\n    options = options || {};\n    options.content = content || '';\n\n    var modal = new ModalDialog(this, options);\n\n    this.addChild(modal);\n    modal.on('dispose', function () {\n      _this11.removeChild(modal);\n    });\n\n    modal.open();\n    return modal;\n  };\n\n  /**\n   * Gets tag settings\n   *\n   * @param {Element} tag\n   *        The player tag\n   *\n   * @return {Object}\n   *         An object containing all of the settings\n   *         for a player tag\n   */\n\n\n  Player.getTagSettings = function getTagSettings(tag) {\n    var baseOptions = {\n      sources: [],\n      tracks: []\n    };\n\n    var tagOptions = getAttributes(tag);\n    var dataSetup = tagOptions['data-setup'];\n\n    if (hasClass(tag, 'vjs-fluid')) {\n      tagOptions.fluid = true;\n    }\n\n    // Check if data-setup attr exists.\n    if (dataSetup !== null) {\n      // Parse options JSON\n      // If empty string, make it a parsable json object.\n      var _safeParseTuple = safeParseTuple(dataSetup || '{}'),\n          err = _safeParseTuple[0],\n          data = _safeParseTuple[1];\n\n      if (err) {\n        log$1.error(err);\n      }\n      assign(tagOptions, data);\n    }\n\n    assign(baseOptions, tagOptions);\n\n    // Get tag children settings\n    if (tag.hasChildNodes()) {\n      var children = tag.childNodes;\n\n      for (var i = 0, j = children.length; i < j; i++) {\n        var child = children[i];\n        // Change case needed: http://ejohn.org/blog/nodename-case-sensitivity/\n        var childName = child.nodeName.toLowerCase();\n\n        if (childName === 'source') {\n          baseOptions.sources.push(getAttributes(child));\n        } else if (childName === 'track') {\n          baseOptions.tracks.push(getAttributes(child));\n        }\n      }\n    }\n\n    return baseOptions;\n  };\n\n  /**\n   * Determine wether or not flexbox is supported\n   *\n   * @return {boolean}\n   *         - true if flexbox is supported\n   *         - false if flexbox is not supported\n   */\n\n\n  Player.prototype.flexNotSupported_ = function flexNotSupported_() {\n    var elem = document.createElement('i');\n\n    // Note: We don't actually use flexBasis (or flexOrder), but it's one of the more\n    // common flex features that we can rely on when checking for flex support.\n    return !('flexBasis' in elem.style || 'webkitFlexBasis' in elem.style || 'mozFlexBasis' in elem.style || 'msFlexBasis' in elem.style ||\n    // IE10-specific (2012 flex spec)\n    'msFlexOrder' in elem.style);\n  };\n\n  return Player;\n}(Component);\n\n/**\n * Get the {@link VideoTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#videotracklist\n *\n * @return {VideoTrackList}\n *         the current video track list\n *\n * @method Player.prototype.videoTracks\n */\n\n/**\n * Get the {@link AudioTrackList}\n * @link https://html.spec.whatwg.org/multipage/embedded-content.html#audiotracklist\n *\n * @return {AudioTrackList}\n *         the current audio track list\n *\n * @method Player.prototype.audioTracks\n */\n\n/**\n * Get the {@link TextTrackList}\n *\n * @link http://www.w3.org/html/wg/drafts/html/master/embedded-content-0.html#dom-media-texttracks\n *\n * @return {TextTrackList}\n *         the current text track list\n *\n * @method Player.prototype.textTracks\n */\n\n/**\n * Get the remote {@link TextTrackList}\n *\n * @return {TextTrackList}\n *         The current remote text track list\n *\n * @method Player.prototype.remoteTextTracks\n */\n\n/**\n * Get the remote {@link HtmlTrackElementList} tracks.\n *\n * @return {HtmlTrackElementList}\n *         The current remote text track element list\n *\n * @method Player.prototype.remoteTextTrackEls\n */\n\nALL.names.forEach(function (name$$1) {\n  var props = ALL[name$$1];\n\n  Player.prototype[props.getterName] = function () {\n    if (this.tech_) {\n      return this.tech_[props.getterName]();\n    }\n\n    // if we have not yet loadTech_, we create {video,audio,text}Tracks_\n    // these will be passed to the tech during loading\n    this[props.privateName] = this[props.privateName] || new props.ListClass();\n    return this[props.privateName];\n  };\n});\n\n/**\n * Global player list\n *\n * @type {Object}\n */\nPlayer.players = {};\n\nvar navigator = window.navigator;\n\n/*\n * Player instance options, surfaced using options\n * options = Player.prototype.options_\n * Make changes in options, not here.\n *\n * @type {Object}\n * @private\n */\nPlayer.prototype.options_ = {\n  // Default order of fallback technology\n  techOrder: Tech.defaultTechOrder_,\n\n  html5: {},\n  flash: {},\n\n  // default inactivity timeout\n  inactivityTimeout: 2000,\n\n  // default playback rates\n  playbackRates: [],\n  // Add playback rate selection by adding rates\n  // 'playbackRates': [0.5, 1, 1.5, 2],\n\n  // Included control sets\n  children: ['mediaLoader', 'posterImage', 'textTrackDisplay', 'loadingSpinner', 'bigPlayButton', 'controlBar', 'errorDisplay', 'textTrackSettings'],\n\n  language: navigator && (navigator.languages && navigator.languages[0] || navigator.userLanguage || navigator.language) || 'en',\n\n  // locales and their language translations\n  languages: {},\n\n  // Default message to show when a video cannot be played.\n  notSupportedMessage: 'No compatible source was found for this media.'\n};\n\nif (!IS_IE8) {\n  Player.prototype.options_.children.push('resizeManager');\n}\n\n[\n/**\n * Returns whether or not the player is in the \"ended\" state.\n *\n * @return {Boolean} True if the player is in the ended state, false if not.\n * @method Player#ended\n */\n'ended',\n/**\n * Returns whether or not the player is in the \"seeking\" state.\n *\n * @return {Boolean} True if the player is in the seeking state, false if not.\n * @method Player#seeking\n */\n'seeking',\n/**\n * Returns the TimeRanges of the media that are currently available\n * for seeking to.\n *\n * @return {TimeRanges} the seekable intervals of the media timeline\n * @method Player#seekable\n */\n'seekable',\n/**\n * Returns the current state of network activity for the element, from\n * the codes in the list below.\n * - NETWORK_EMPTY (numeric value 0)\n *   The element has not yet been initialised. All attributes are in\n *   their initial states.\n * - NETWORK_IDLE (numeric value 1)\n *   The element's resource selection algorithm is active and has\n *   selected a resource, but it is not actually using the network at\n *   this time.\n * - NETWORK_LOADING (numeric value 2)\n *   The user agent is actively trying to download data.\n * - NETWORK_NO_SOURCE (numeric value 3)\n *   The element's resource selection algorithm is active, but it has\n *   not yet found a resource to use.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#network-states\n * @return {number} the current network activity state\n * @method Player#networkState\n */\n'networkState',\n/**\n * Returns a value that expresses the current state of the element\n * with respect to rendering the current playback position, from the\n * codes in the list below.\n * - HAVE_NOTHING (numeric value 0)\n *   No information regarding the media resource is available.\n * - HAVE_METADATA (numeric value 1)\n *   Enough of the resource has been obtained that the duration of the\n *   resource is available.\n * - HAVE_CURRENT_DATA (numeric value 2)\n *   Data for the immediate current playback position is available.\n * - HAVE_FUTURE_DATA (numeric value 3)\n *   Data for the immediate current playback position is available, as\n *   well as enough data for the user agent to advance the current\n *   playback position in the direction of playback.\n * - HAVE_ENOUGH_DATA (numeric value 4)\n *   The user agent estimates that enough data is available for\n *   playback to proceed uninterrupted.\n *\n * @see https://html.spec.whatwg.org/multipage/embedded-content.html#dom-media-readystate\n * @return {number} the current playback rendering state\n * @method Player#readyState\n */\n'readyState'].forEach(function (fn) {\n  Player.prototype[fn] = function () {\n    return this.techGet_(fn);\n  };\n});\n\nTECH_EVENTS_RETRIGGER.forEach(function (event) {\n  Player.prototype['handleTech' + toTitleCase(event) + '_'] = function () {\n    return this.trigger(event);\n  };\n});\n\n/**\n * Fired when the player has initial duration and dimension information\n *\n * @event Player#loadedmetadata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the player has downloaded data at the current playback position\n *\n * @event Player#loadeddata\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the current playback position has changed *\n * During playback this is fired every 15-250 milliseconds, depending on the\n * playback technology in use.\n *\n * @event Player#timeupdate\n * @type {EventTarget~Event}\n */\n\n/**\n * Fired when the volume changes\n *\n * @event Player#volumechange\n * @type {EventTarget~Event}\n */\n\n/**\n * Reports whether or not a player has a plugin available.\n *\n * This does not report whether or not the plugin has ever been initialized\n * on this player. For that, [usingPlugin]{@link Player#usingPlugin}.\n *\n * @method Player#hasPlugin\n * @param  {string}  name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player has the requested plugin available.\n */\n\n/**\n * Reports whether or not a player is using a plugin by name.\n *\n * For basic plugins, this only reports whether the plugin has _ever_ been\n * initialized on this player.\n *\n * @method Player#usingPlugin\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {boolean}\n *         Whether or not this player is using the requested plugin.\n */\n\nComponent.registerComponent('Player', Player);\n\n/**\n * @file plugin.js\n */\n/**\n * The base plugin name.\n *\n * @private\n * @constant\n * @type {string}\n */\nvar BASE_PLUGIN_NAME = 'plugin';\n\n/**\n * The key on which a player's active plugins cache is stored.\n *\n * @private\n * @constant\n * @type     {string}\n */\nvar PLUGIN_CACHE_KEY = 'activePlugins_';\n\n/**\n * Stores registered plugins in a private space.\n *\n * @private\n * @type    {Object}\n */\nvar pluginStorage = {};\n\n/**\n * Reports whether or not a plugin has been registered.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {boolean}\n *          Whether or not the plugin has been registered.\n */\nvar pluginExists = function pluginExists(name) {\n  return pluginStorage.hasOwnProperty(name);\n};\n\n/**\n * Get a single registered plugin by name.\n *\n * @private\n * @param   {string} name\n *          The name of a plugin.\n *\n * @returns {Function|undefined}\n *          The plugin (or undefined).\n */\nvar getPlugin = function getPlugin(name) {\n  return pluginExists(name) ? pluginStorage[name] : undefined;\n};\n\n/**\n * Marks a plugin as \"active\" on a player.\n *\n * Also, ensures that the player has an object for tracking active plugins.\n *\n * @private\n * @param   {Player} player\n *          A Video.js player instance.\n *\n * @param   {string} name\n *          The name of a plugin.\n */\nvar markPluginAsActive = function markPluginAsActive(player, name) {\n  player[PLUGIN_CACHE_KEY] = player[PLUGIN_CACHE_KEY] || {};\n  player[PLUGIN_CACHE_KEY][name] = true;\n};\n\n/**\n * Triggers a pair of plugin setup events.\n *\n * @private\n * @param  {Player} player\n *         A Video.js player instance.\n *\n * @param  {Plugin~PluginEventHash} hash\n *         A plugin event hash.\n *\n * @param  {Boolean} [before]\n *         If true, prefixes the event name with \"before\". In other words,\n *         use this to trigger \"beforepluginsetup\" instead of \"pluginsetup\".\n */\nvar triggerSetupEvent = function triggerSetupEvent(player, hash, before) {\n  var eventName = (before ? 'before' : '') + 'pluginsetup';\n\n  player.trigger(eventName, hash);\n  player.trigger(eventName + ':' + hash.name, hash);\n};\n\n/**\n * Takes a basic plugin function and returns a wrapper function which marks\n * on the player that the plugin has been activated.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Function} plugin\n *          The basic plugin.\n *\n * @returns {Function}\n *          A wrapper function for the given plugin.\n */\nvar createBasicPlugin = function createBasicPlugin(name, plugin) {\n  var basicPluginWrapper = function basicPluginWrapper() {\n\n    // We trigger the \"beforepluginsetup\" and \"pluginsetup\" events on the player\n    // regardless, but we want the hash to be consistent with the hash provided\n    // for advanced plugins.\n    //\n    // The only potentially counter-intuitive thing here is the `instance` in\n    // the \"pluginsetup\" event is the value returned by the `plugin` function.\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: null }, true);\n\n    var instance = plugin.apply(this, arguments);\n\n    markPluginAsActive(this, name);\n    triggerSetupEvent(this, { name: name, plugin: plugin, instance: instance });\n\n    return instance;\n  };\n\n  Object.keys(plugin).forEach(function (prop) {\n    basicPluginWrapper[prop] = plugin[prop];\n  });\n\n  return basicPluginWrapper;\n};\n\n/**\n * Takes a plugin sub-class and returns a factory function for generating\n * instances of it.\n *\n * This factory function will replace itself with an instance of the requested\n * sub-class of Plugin.\n *\n * @private\n * @param   {string} name\n *          The name of the plugin.\n *\n * @param   {Plugin} PluginSubClass\n *          The advanced plugin.\n *\n * @returns {Function}\n */\nvar createPluginFactory = function createPluginFactory(name, PluginSubClass) {\n\n  // Add a `name` property to the plugin prototype so that each plugin can\n  // refer to itself by name.\n  PluginSubClass.prototype.name = name;\n\n  return function () {\n    triggerSetupEvent(this, { name: name, plugin: PluginSubClass, instance: null }, true);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var instance = new (Function.prototype.bind.apply(PluginSubClass, [null].concat([this].concat(args))))();\n\n    // The plugin is replaced by a function that returns the current instance.\n    this[name] = function () {\n      return instance;\n    };\n\n    triggerSetupEvent(this, instance.getEventHash());\n\n    return instance;\n  };\n};\n\n/**\n * Parent class for all advanced plugins.\n *\n * @mixes   module:evented~EventedMixin\n * @mixes   module:stateful~StatefulMixin\n * @fires   Player#beforepluginsetup\n * @fires   Player#beforepluginsetup:$name\n * @fires   Player#pluginsetup\n * @fires   Player#pluginsetup:$name\n * @listens Player#dispose\n * @throws  {Error}\n *          If attempting to instantiate the base {@link Plugin} class\n *          directly instead of via a sub-class.\n */\n\nvar Plugin = function () {\n\n  /**\n   * Creates an instance of this class.\n   *\n   * Sub-classes should call `super` to ensure plugins are properly initialized.\n   *\n   * @param {Player} player\n   *        A Video.js player instance.\n   */\n  function Plugin(player) {\n    classCallCheck(this, Plugin);\n\n    if (this.constructor === Plugin) {\n      throw new Error('Plugin must be sub-classed; not directly instantiated.');\n    }\n\n    this.player = player;\n\n    // Make this object evented, but remove the added `trigger` method so we\n    // use the prototype version instead.\n    evented(this);\n    delete this.trigger;\n\n    stateful(this, this.constructor.defaultState);\n    markPluginAsActive(player, this.name);\n\n    // Auto-bind the dispose method so we can use it as a listener and unbind\n    // it later easily.\n    this.dispose = bind(this, this.dispose);\n\n    // If the player is disposed, dispose the plugin.\n    player.on('dispose', this.dispose);\n  }\n\n  /**\n   * Get the version of the plugin that was set on <pluginName>.VERSION\n   */\n\n\n  Plugin.prototype.version = function version() {\n    return this.constructor.VERSION;\n  };\n\n  /**\n   * Each event triggered by plugins includes a hash of additional data with\n   * conventional properties.\n   *\n   * This returns that object or mutates an existing hash.\n   *\n   * @param   {Object} [hash={}]\n   *          An object to be used as event an event hash.\n   *\n   * @returns {Plugin~PluginEventHash}\n   *          An event hash object with provided properties mixed-in.\n   */\n\n\n  Plugin.prototype.getEventHash = function getEventHash() {\n    var hash = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    hash.name = this.name;\n    hash.plugin = this.constructor;\n    hash.instance = this;\n    return hash;\n  };\n\n  /**\n   * Triggers an event on the plugin object and overrides\n   * {@link module:evented~EventedMixin.trigger|EventedMixin.trigger}.\n   *\n   * @param   {string|Object} event\n   *          An event type or an object with a type property.\n   *\n   * @param   {Object} [hash={}]\n   *          Additional data hash to merge with a\n   *          {@link Plugin~PluginEventHash|PluginEventHash}.\n   *\n   * @returns {boolean}\n   *          Whether or not default was prevented.\n   */\n\n\n  Plugin.prototype.trigger = function trigger$$1(event) {\n    var hash = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return trigger(this.eventBusEl_, event, this.getEventHash(hash));\n  };\n\n  /**\n   * Handles \"statechanged\" events on the plugin. No-op by default, override by\n   * subclassing.\n   *\n   * @abstract\n   * @param    {Event} e\n   *           An event object provided by a \"statechanged\" event.\n   *\n   * @param    {Object} e.changes\n   *           An object describing changes that occurred with the \"statechanged\"\n   *           event.\n   */\n\n\n  Plugin.prototype.handleStateChanged = function handleStateChanged(e) {};\n\n  /**\n   * Disposes a plugin.\n   *\n   * Subclasses can override this if they want, but for the sake of safety,\n   * it's probably best to subscribe the \"dispose\" event.\n   *\n   * @fires Plugin#dispose\n   */\n\n\n  Plugin.prototype.dispose = function dispose() {\n    var name = this.name,\n        player = this.player;\n\n    /**\n     * Signals that a advanced plugin is about to be disposed.\n     *\n     * @event Plugin#dispose\n     * @type  {EventTarget~Event}\n     */\n\n    this.trigger('dispose');\n    this.off();\n    player.off('dispose', this.dispose);\n\n    // Eliminate any possible sources of leaking memory by clearing up\n    // references between the player and the plugin instance and nulling out\n    // the plugin's state and replacing methods with a function that throws.\n    player[PLUGIN_CACHE_KEY][name] = false;\n    this.player = this.state = null;\n\n    // Finally, replace the plugin name on the player with a new factory\n    // function, so that the plugin is ready to be set up again.\n    player[name] = createPluginFactory(name, pluginStorage[name]);\n  };\n\n  /**\n   * Determines if a plugin is a basic plugin (i.e. not a sub-class of `Plugin`).\n   *\n   * @param   {string|Function} plugin\n   *          If a string, matches the name of a plugin. If a function, will be\n   *          tested directly.\n   *\n   * @returns {boolean}\n   *          Whether or not a plugin is a basic plugin.\n   */\n\n\n  Plugin.isBasic = function isBasic(plugin) {\n    var p = typeof plugin === 'string' ? getPlugin(plugin) : plugin;\n\n    return typeof p === 'function' && !Plugin.prototype.isPrototypeOf(p.prototype);\n  };\n\n  /**\n   * Register a Video.js plugin.\n   *\n   * @param   {string} name\n   *          The name of the plugin to be registered. Must be a string and\n   *          must not match an existing plugin or a method on the `Player`\n   *          prototype.\n   *\n   * @param   {Function} plugin\n   *          A sub-class of `Plugin` or a function for basic plugins.\n   *\n   * @returns {Function}\n   *          For advanced plugins, a factory function for that plugin. For\n   *          basic plugins, a wrapper function that initializes the plugin.\n   */\n\n\n  Plugin.registerPlugin = function registerPlugin(name, plugin) {\n    if (typeof name !== 'string') {\n      throw new Error('Illegal plugin name, \"' + name + '\", must be a string, was ' + (typeof name === 'undefined' ? 'undefined' : _typeof(name)) + '.');\n    }\n\n    if (pluginExists(name)) {\n      log$1.warn('A plugin named \"' + name + '\" already exists. You may want to avoid re-registering plugins!');\n    } else if (Player.prototype.hasOwnProperty(name)) {\n      throw new Error('Illegal plugin name, \"' + name + '\", cannot share a name with an existing player method!');\n    }\n\n    if (typeof plugin !== 'function') {\n      throw new Error('Illegal plugin for \"' + name + '\", must be a function, was ' + (typeof plugin === 'undefined' ? 'undefined' : _typeof(plugin)) + '.');\n    }\n\n    pluginStorage[name] = plugin;\n\n    // Add a player prototype method for all sub-classed plugins (but not for\n    // the base Plugin class).\n    if (name !== BASE_PLUGIN_NAME) {\n      if (Plugin.isBasic(plugin)) {\n        Player.prototype[name] = createBasicPlugin(name, plugin);\n      } else {\n        Player.prototype[name] = createPluginFactory(name, plugin);\n      }\n    }\n\n    return plugin;\n  };\n\n  /**\n   * De-register a Video.js plugin.\n   *\n   * @param {string} name\n   *        The name of the plugin to be deregistered.\n   */\n\n\n  Plugin.deregisterPlugin = function deregisterPlugin(name) {\n    if (name === BASE_PLUGIN_NAME) {\n      throw new Error('Cannot de-register base plugin.');\n    }\n    if (pluginExists(name)) {\n      delete pluginStorage[name];\n      delete Player.prototype[name];\n    }\n  };\n\n  /**\n   * Gets an object containing multiple Video.js plugins.\n   *\n   * @param   {Array} [names]\n   *          If provided, should be an array of plugin names. Defaults to _all_\n   *          plugin names.\n   *\n   * @returns {Object|undefined}\n   *          An object containing plugin(s) associated with their name(s) or\n   *          `undefined` if no matching plugins exist).\n   */\n\n\n  Plugin.getPlugins = function getPlugins() {\n    var names = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : Object.keys(pluginStorage);\n\n    var result = void 0;\n\n    names.forEach(function (name) {\n      var plugin = getPlugin(name);\n\n      if (plugin) {\n        result = result || {};\n        result[name] = plugin;\n      }\n    });\n\n    return result;\n  };\n\n  /**\n   * Gets a plugin's version, if available\n   *\n   * @param   {string} name\n   *          The name of a plugin.\n   *\n   * @returns {string}\n   *          The plugin's version or an empty string.\n   */\n\n\n  Plugin.getPluginVersion = function getPluginVersion(name) {\n    var plugin = getPlugin(name);\n\n    return plugin && plugin.VERSION || '';\n  };\n\n  return Plugin;\n}();\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @static\n * @method   getPlugin\n * @memberOf Plugin\n * @param    {string} name\n *           The name of a plugin.\n *\n * @returns  {Function|undefined}\n *           The plugin (or `undefined`).\n */\n\n\nPlugin.getPlugin = getPlugin;\n\n/**\n * The name of the base plugin class as it is registered.\n *\n * @type {string}\n */\nPlugin.BASE_PLUGIN_NAME = BASE_PLUGIN_NAME;\n\nPlugin.registerPlugin(BASE_PLUGIN_NAME, Plugin);\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.usingPlugin = function (name) {\n  return !!this[PLUGIN_CACHE_KEY] && this[PLUGIN_CACHE_KEY][name] === true;\n};\n\n/**\n * Documented in player.js\n *\n * @ignore\n */\nPlayer.prototype.hasPlugin = function (name) {\n  return !!pluginExists(name);\n};\n\n/**\n * Signals that a plugin is about to be set up on a player.\n *\n * @event    Player#beforepluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin is about to be set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#beforepluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player.\n *\n * @event    Player#pluginsetup\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * Signals that a plugin has just been set up on a player - by name. The name\n * is the name of the plugin.\n *\n * @event    Player#pluginsetup:$name\n * @type     {Plugin~PluginEventHash}\n */\n\n/**\n * @typedef  {Object} Plugin~PluginEventHash\n *\n * @property {string} instance\n *           For basic plugins, the return value of the plugin function. For\n *           advanced plugins, the plugin instance on which the event is fired.\n *\n * @property {string} name\n *           The name of the plugin.\n *\n * @property {string} plugin\n *           For basic plugins, the plugin function. For advanced plugins, the\n *           plugin class/constructor.\n */\n\n/**\n * @file extend.js\n * @module extend\n */\n\n/**\n * A combination of node inherits and babel's inherits (after transpile).\n * Both work the same but node adds `super_` to the subClass\n * and Bable adds the superClass as __proto__. Both seem useful.\n *\n * @param {Object} subClass\n *        The class to inherit to\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @private\n */\nvar _inherits = function _inherits(subClass, superClass) {\n  if (typeof superClass !== 'function' && superClass !== null) {\n    throw new TypeError('Super expression must either be null or a function, not ' + (typeof superClass === 'undefined' ? 'undefined' : _typeof(superClass)));\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n\n  if (superClass) {\n    // node\n    subClass.super_ = superClass;\n  }\n};\n\n/**\n * Function for subclassing using the same inheritance that\n * videojs uses internally\n *\n * @static\n * @const\n *\n * @param {Object} superClass\n *        The class to inherit from\n *\n * @param {Object} [subClassMethods={}]\n *        The class to inherit to\n *\n * @return {Object}\n *         The new object with subClassMethods that inherited superClass.\n */\nvar extendFn = function extendFn(superClass) {\n  var subClassMethods = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var subClass = function subClass() {\n    superClass.apply(this, arguments);\n  };\n\n  var methods = {};\n\n  if ((typeof subClassMethods === 'undefined' ? 'undefined' : _typeof(subClassMethods)) === 'object') {\n    if (subClassMethods.constructor !== Object.prototype.constructor) {\n      subClass = subClassMethods.constructor;\n    }\n    methods = subClassMethods;\n  } else if (typeof subClassMethods === 'function') {\n    subClass = subClassMethods;\n  }\n\n  _inherits(subClass, superClass);\n\n  // Extend subObj's prototype with functions and other properties from props\n  for (var name in methods) {\n    if (methods.hasOwnProperty(name)) {\n      subClass.prototype[name] = methods[name];\n    }\n  }\n\n  return subClass;\n};\n\n/**\n * @file video.js\n * @module videojs\n */\n// Include the built-in techs\n// HTML5 Element Shim for IE8\nif (typeof HTMLVideoElement === 'undefined' && isReal()) {\n  document.createElement('video');\n  document.createElement('audio');\n  document.createElement('track');\n  document.createElement('video-js');\n}\n\n/**\n * Normalize an `id` value by trimming off a leading `#`\n *\n * @param   {string} id\n *          A string, maybe with a leading `#`.\n *\n * @returns {string}\n *          The string, without any leading `#`.\n */\nvar normalizeId = function normalizeId(id) {\n  return id.indexOf('#') === 0 ? id.slice(1) : id;\n};\n\n/**\n * Doubles as the main function for users to create a player instance and also\n * the main library object.\n * The `videojs` function can be used to initialize or retrieve a player.\n  *\n * @param {string|Element} id\n *        Video element or video element ID\n *\n * @param {Object} [options]\n *        Optional options object for config/settings\n *\n * @param {Component~ReadyCallback} [ready]\n *        Optional ready callback\n *\n * @return {Player}\n *         A player instance\n */\nfunction videojs(id, options, ready) {\n  var player = videojs.getPlayer(id);\n\n  if (player) {\n    if (options) {\n      log$1.warn('Player \"' + id + '\" is already initialised. Options will not be applied.');\n    }\n    if (ready) {\n      player.ready(ready);\n    }\n    return player;\n  }\n\n  var el = typeof id === 'string' ? $('#' + normalizeId(id)) : id;\n\n  if (!isEl(el)) {\n    throw new TypeError('The element or ID supplied is not valid. (videojs)');\n  }\n\n  if (!document.body.contains(el)) {\n    log$1.warn('The element supplied is not included in the DOM');\n  }\n\n  options = options || {};\n\n  videojs.hooks('beforesetup').forEach(function (hookFunction) {\n    var opts = hookFunction(el, mergeOptions(options));\n\n    if (!isObject(opts) || Array.isArray(opts)) {\n      log$1.error('please return an object in beforesetup hooks');\n      return;\n    }\n\n    options = mergeOptions(options, opts);\n  });\n\n  // We get the current \"Player\" component here in case an integration has\n  // replaced it with a custom player.\n  var PlayerComponent = Component.getComponent('Player');\n\n  player = new PlayerComponent(el, options, ready);\n\n  videojs.hooks('setup').forEach(function (hookFunction) {\n    return hookFunction(player);\n  });\n\n  return player;\n}\n\n/**\n * An Object that contains lifecycle hooks as keys which point to an array\n * of functions that are run when a lifecycle is triggered\n */\nvideojs.hooks_ = {};\n\n/**\n * Get a list of hooks for a specific lifecycle\n * @function videojs.hooks\n *\n * @param {string} type\n *        the lifecyle to get hooks from\n *\n * @param {Function|Function[]} [fn]\n *        Optionally add a hook (or hooks) to the lifecycle that your are getting.\n *\n * @return {Array}\n *         an array of hooks, or an empty array if there are none.\n */\nvideojs.hooks = function (type, fn) {\n  videojs.hooks_[type] = videojs.hooks_[type] || [];\n  if (fn) {\n    videojs.hooks_[type] = videojs.hooks_[type].concat(fn);\n  }\n  return videojs.hooks_[type];\n};\n\n/**\n * Add a function hook to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hook = function (type, fn) {\n  videojs.hooks(type, fn);\n};\n\n/**\n * Add a function hook that will only run once to a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle to hook the function to.\n *\n * @param {Function|Function[]}\n *        The function or array of functions to attach.\n */\nvideojs.hookOnce = function (type, fn) {\n  videojs.hooks(type, [].concat(fn).map(function (original) {\n    var wrapper = function wrapper() {\n      videojs.removeHook(type, wrapper);\n      return original.apply(undefined, arguments);\n    };\n\n    return wrapper;\n  }));\n};\n\n/**\n * Remove a hook from a specific videojs lifecycle.\n *\n * @param {string} type\n *        the lifecycle that the function hooked to\n *\n * @param {Function} fn\n *        The hooked function to remove\n *\n * @return {boolean}\n *         The function that was removed or undef\n */\nvideojs.removeHook = function (type, fn) {\n  var index = videojs.hooks(type).indexOf(fn);\n\n  if (index <= -1) {\n    return false;\n  }\n\n  videojs.hooks_[type] = videojs.hooks_[type].slice();\n  videojs.hooks_[type].splice(index, 1);\n\n  return true;\n};\n\n// Add default styles\nif (window.VIDEOJS_NO_DYNAMIC_STYLE !== true && isReal()) {\n  var style = $('.vjs-styles-defaults');\n\n  if (!style) {\n    style = createStyleElement('vjs-styles-defaults');\n    var head = $('head');\n\n    if (head) {\n      head.insertBefore(style, head.firstChild);\n    }\n    setTextContent(style, '\\n      .video-js {\\n        width: 300px;\\n        height: 150px;\\n      }\\n\\n      .vjs-fluid {\\n        padding-top: 56.25%\\n      }\\n    ');\n  }\n}\n\n// Run Auto-load players\n// You have to wait at least once in case this script is loaded after your\n// video in the DOM (weird behavior only with minified version)\nautoSetupTimeout(1, videojs);\n\n/**\n * Current software version. Follows semver.\n *\n * @type {string}\n */\nvideojs.VERSION = version;\n\n/**\n * The global options object. These are the settings that take effect\n * if no overrides are specified when the player is created.\n *\n * @type {Object}\n */\nvideojs.options = Player.prototype.options_;\n\n/**\n * Get an object with the currently created players, keyed by player ID\n *\n * @return {Object}\n *         The created players\n */\nvideojs.getPlayers = function () {\n  return Player.players;\n};\n\n/**\n * Get a single player based on an ID or DOM element.\n *\n * This is useful if you want to check if an element or ID has an associated\n * Video.js player, but not create one if it doesn't.\n *\n * @param   {string|Element} id\n *          An HTML element - `<video>`, `<audio>`, or `<video-js>` -\n *          or a string matching the `id` of such an element.\n *\n * @returns {Player|undefined}\n *          A player instance or `undefined` if there is no player instance\n *          matching the argument.\n */\nvideojs.getPlayer = function (id) {\n  var players = Player.players;\n  var tag = void 0;\n\n  if (typeof id === 'string') {\n    var nId = normalizeId(id);\n    var player = players[nId];\n\n    if (player) {\n      return player;\n    }\n\n    tag = $('#' + nId);\n  } else {\n    tag = id;\n  }\n\n  if (isEl(tag)) {\n    var _tag = tag,\n        _player = _tag.player,\n        playerId = _tag.playerId;\n\n    // Element may have a `player` property referring to an already created\n    // player instance. If so, return that.\n\n    if (_player || players[playerId]) {\n      return _player || players[playerId];\n    }\n  }\n};\n\n/**\n * Returns an array of all current players.\n *\n * @return {Array}\n *         An array of all players. The array will be in the order that\n *         `Object.keys` provides, which could potentially vary between\n *         JavaScript engines.\n *\n */\nvideojs.getAllPlayers = function () {\n  return (\n\n    // Disposed players leave a key with a `null` value, so we need to make sure\n    // we filter those out.\n    Object.keys(Player.players).map(function (k) {\n      return Player.players[k];\n    }).filter(Boolean)\n  );\n};\n\n/**\n * Expose players object.\n *\n * @memberOf videojs\n * @property {Object} players\n */\nvideojs.players = Player.players;\n\n/**\n * Get a component class object by name\n *\n * @borrows Component.getComponent as videojs.getComponent\n */\nvideojs.getComponent = Component.getComponent;\n\n/**\n * Register a component so it can referred to by name. Used when adding to other\n * components, either through addChild `component.addChild('myComponent')` or through\n * default children options  `{ children: ['myComponent'] }`.\n *\n * > NOTE: You could also just initialize the component before adding.\n * `component.addChild(new MyComponent());`\n *\n * @param {string} name\n *        The class name of the component\n *\n * @param {Component} comp\n *        The component class\n *\n * @return {Component}\n *         The newly registered component\n */\nvideojs.registerComponent = function (name$$1, comp) {\n  if (Tech.isTech(comp)) {\n    log$1.warn('The ' + name$$1 + ' tech was registered as a component. It should instead be registered using videojs.registerTech(name, tech)');\n  }\n\n  Component.registerComponent.call(Component, name$$1, comp);\n};\n\n/**\n * Get a Tech class object by name\n *\n * @borrows Tech.getTech as videojs.getTech\n */\nvideojs.getTech = Tech.getTech;\n\n/**\n * Register a Tech so it can referred to by name.\n * This is used in the tech order for the player.\n *\n * @borrows Tech.registerTech as videojs.registerTech\n */\nvideojs.registerTech = Tech.registerTech;\n\n/**\n * Register a middleware to a source type.\n *\n * @param {String} type A string representing a MIME type.\n * @param {function(player):object} middleware A middleware factory that takes a player.\n */\nvideojs.use = use;\n\n/**\n * An object that can be returned by a middleware to signify\n * that the middleware is being terminated.\n *\n * @type {object}\n * @memberOf {videojs}\n * @property {object} middleware.TERMINATOR\n */\n// Object.defineProperty is not available in IE8\nif (!IS_IE8 && Object.defineProperty) {\n  Object.defineProperty(videojs, 'middleware', {\n    value: {},\n    writeable: false,\n    enumerable: true\n  });\n\n  Object.defineProperty(videojs.middleware, 'TERMINATOR', {\n    value: TERMINATOR,\n    writeable: false,\n    enumerable: true\n  });\n} else {\n  videojs.middleware = { TERMINATOR: TERMINATOR };\n}\n\n/**\n * A suite of browser and device tests from {@link browser}.\n *\n * @type {Object}\n * @private\n */\nvideojs.browser = browser;\n\n/**\n * Whether or not the browser supports touch events. Included for backward\n * compatibility with 4.x, but deprecated. Use `videojs.browser.TOUCH_ENABLED`\n * instead going forward.\n *\n * @deprecated since version 5.0\n * @type {boolean}\n */\nvideojs.TOUCH_ENABLED = TOUCH_ENABLED;\n\n/**\n * Subclass an existing class\n * Mimics ES6 subclassing with the `extend` keyword\n *\n * @borrows extend:extendFn as videojs.extend\n */\nvideojs.extend = extendFn;\n\n/**\n * Merge two options objects recursively\n * Performs a deep merge like lodash.merge but **only merges plain objects**\n * (not arrays, elements, anything else)\n * Other values will be copied directly from the second object.\n *\n * @borrows merge-options:mergeOptions as videojs.mergeOptions\n */\nvideojs.mergeOptions = mergeOptions;\n\n/**\n * Change the context (this) of a function\n *\n * > NOTE: as of v5.0 we require an ES5 shim, so you should use the native\n * `function() {}.bind(newContext);` instead of this.\n *\n * @borrows fn:bind as videojs.bind\n */\nvideojs.bind = bind;\n\n/**\n * Register a Video.js plugin.\n *\n * @borrows plugin:registerPlugin as videojs.registerPlugin\n * @method registerPlugin\n *\n * @param  {string} name\n *         The name of the plugin to be registered. Must be a string and\n *         must not match an existing plugin or a method on the `Player`\n *         prototype.\n *\n * @param  {Function} plugin\n *         A sub-class of `Plugin` or a function for basic plugins.\n *\n * @return {Function}\n *         For advanced plugins, a factory function for that plugin. For\n *         basic plugins, a wrapper function that initializes the plugin.\n */\nvideojs.registerPlugin = Plugin.registerPlugin;\n\n/**\n * Deprecated method to register a plugin with Video.js\n *\n * @deprecated\n *        videojs.plugin() is deprecated; use videojs.registerPlugin() instead\n *\n * @param {string} name\n *        The plugin name\n *\n * @param {Plugin|Function} plugin\n *         The plugin sub-class or function\n */\nvideojs.plugin = function (name$$1, plugin) {\n  log$1.warn('videojs.plugin() is deprecated; use videojs.registerPlugin() instead');\n  return Plugin.registerPlugin(name$$1, plugin);\n};\n\n/**\n * Gets an object containing multiple Video.js plugins.\n *\n * @param  {Array} [names]\n *         If provided, should be an array of plugin names. Defaults to _all_\n *         plugin names.\n *\n * @return {Object|undefined}\n *         An object containing plugin(s) associated with their name(s) or\n *         `undefined` if no matching plugins exist).\n */\nvideojs.getPlugins = Plugin.getPlugins;\n\n/**\n * Gets a plugin by name if it exists.\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {Function|undefined}\n *         The plugin (or `undefined`).\n */\nvideojs.getPlugin = Plugin.getPlugin;\n\n/**\n * Gets a plugin's version, if available\n *\n * @param  {string} name\n *         The name of a plugin.\n *\n * @return {string}\n *         The plugin's version or an empty string.\n */\nvideojs.getPluginVersion = Plugin.getPluginVersion;\n\n/**\n * Adding languages so that they're available to all players.\n * Example: `videojs.addLanguage('es', { 'Hello': 'Hola' });`\n *\n * @param {string} code\n *        The language code or dictionary property\n *\n * @param {Object} data\n *        The data values to be translated\n *\n * @return {Object}\n *         The resulting language dictionary object\n */\nvideojs.addLanguage = function (code, data) {\n  var _mergeOptions;\n\n  code = ('' + code).toLowerCase();\n\n  videojs.options.languages = mergeOptions(videojs.options.languages, (_mergeOptions = {}, _mergeOptions[code] = data, _mergeOptions));\n\n  return videojs.options.languages[code];\n};\n\n/**\n * Log messages\n *\n * @borrows log:log as videojs.log\n */\nvideojs.log = log$1;\n\n/**\n * Creates an emulated TimeRange object.\n *\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRange\n */\n/**\n * @borrows time-ranges:createTimeRanges as videojs.createTimeRanges\n */\nvideojs.createTimeRange = videojs.createTimeRanges = createTimeRanges;\n\n/**\n * Format seconds as a time string, H:MM:SS or M:SS\n * Supplying a guide (in seconds) will force a number of leading zeros\n * to cover the length of the guide\n *\n * @borrows format-time:formatTime as videojs.formatTime\n */\nvideojs.formatTime = formatTime;\n\n/**\n * Replaces format-time with a custom implementation, to be used in place of the default.\n *\n * @borrows format-time:setFormatTime as videojs.setFormatTime\n *\n * @method setFormatTime\n *\n * @param {Function} customFn\n *        A custom format-time function which will be called with the current time and guide (in seconds) as arguments.\n *        Passed fn should return a string.\n */\nvideojs.setFormatTime = setFormatTime;\n\n/**\n * Resets format-time to the default implementation.\n *\n * @borrows format-time:resetFormatTime as videojs.resetFormatTime\n *\n * @method resetFormatTime\n */\nvideojs.resetFormatTime = resetFormatTime;\n\n/**\n * Resolve and parse the elements of a URL\n *\n * @borrows url:parseUrl as videojs.parseUrl\n *\n */\nvideojs.parseUrl = parseUrl;\n\n/**\n * Returns whether the url passed is a cross domain request or not.\n *\n * @borrows url:isCrossOrigin as videojs.isCrossOrigin\n */\nvideojs.isCrossOrigin = isCrossOrigin;\n\n/**\n * Event target class.\n *\n * @borrows EventTarget as videojs.EventTarget\n */\nvideojs.EventTarget = EventTarget;\n\n/**\n * Add an event listener to element\n * It stores the handler function in a separate cache object\n * and adds a generic handler to the element's event,\n * along with a unique id (guid) to the element.\n *\n * @borrows events:on as videojs.on\n */\nvideojs.on = on;\n\n/**\n * Trigger a listener only once for an event\n *\n * @borrows events:one as videojs.one\n */\nvideojs.one = one;\n\n/**\n * Removes event listeners from an element\n *\n * @borrows events:off as videojs.off\n */\nvideojs.off = off;\n\n/**\n * Trigger an event for an element\n *\n * @borrows events:trigger as videojs.trigger\n */\nvideojs.trigger = trigger;\n\n/**\n * A cross-browser XMLHttpRequest wrapper. Here's a simple example:\n *\n * @param {Object} options\n *        settings for the request.\n *\n * @return {XMLHttpRequest|XDomainRequest}\n *         The request object.\n *\n * @see https://github.com/Raynos/xhr\n */\nvideojs.xhr = xhr;\n\n/**\n * TextTrack class\n *\n * @borrows TextTrack as videojs.TextTrack\n */\nvideojs.TextTrack = TextTrack;\n\n/**\n * export the AudioTrack class so that source handlers can create\n * AudioTracks and then add them to the players AudioTrackList\n *\n * @borrows AudioTrack as videojs.AudioTrack\n */\nvideojs.AudioTrack = AudioTrack;\n\n/**\n * export the VideoTrack class so that source handlers can create\n * VideoTracks and then add them to the players VideoTrackList\n *\n * @borrows VideoTrack as videojs.VideoTrack\n */\nvideojs.VideoTrack = VideoTrack;\n\n/**\n * Determines, via duck typing, whether or not a value is a DOM element.\n *\n * @borrows dom:isEl as videojs.isEl\n * @deprecated Use videojs.dom.isEl() instead\n */\n\n/**\n * Determines, via duck typing, whether or not a value is a text node.\n *\n * @borrows dom:isTextNode as videojs.isTextNode\n * @deprecated Use videojs.dom.isTextNode() instead\n */\n\n/**\n * Creates an element and applies properties.\n *\n * @borrows dom:createEl as videojs.createEl\n * @deprecated Use videojs.dom.createEl() instead\n */\n\n/**\n * Check if an element has a CSS class\n *\n * @borrows dom:hasElClass as videojs.hasClass\n * @deprecated Use videojs.dom.hasClass() instead\n */\n\n/**\n * Add a CSS class name to an element\n *\n * @borrows dom:addElClass as videojs.addClass\n * @deprecated Use videojs.dom.addClass() instead\n */\n\n/**\n * Remove a CSS class name from an element\n *\n * @borrows dom:removeElClass as videojs.removeClass\n * @deprecated Use videojs.dom.removeClass() instead\n */\n\n/**\n * Adds or removes a CSS class name on an element depending on an optional\n * condition or the presence/absence of the class name.\n *\n * @borrows dom:toggleElClass as videojs.toggleClass\n * @deprecated Use videojs.dom.toggleClass() instead\n */\n\n/**\n * Apply attributes to an HTML element.\n *\n * @borrows dom:setElAttributes as videojs.setAttribute\n * @deprecated Use videojs.dom.setAttributes() instead\n */\n\n/**\n * Get an element's attribute values, as defined on the HTML tag\n * Attributes are not the same as properties. They're defined on the tag\n * or with setAttribute (which shouldn't be used with HTML)\n * This will return true or false for boolean attributes.\n *\n * @borrows dom:getElAttributes as videojs.getAttributes\n * @deprecated Use videojs.dom.getAttributes() instead\n */\n\n/**\n * Empties the contents of an element.\n *\n * @borrows dom:emptyEl as videojs.emptyEl\n * @deprecated Use videojs.dom.emptyEl() instead\n */\n\n/**\n * Normalizes and appends content to an element.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:appendContents as videojs.appendContet\n * @deprecated Use videojs.dom.appendContent() instead\n */\n\n/**\n * Normalizes and inserts content into an element; this is identical to\n * `appendContent()`, except it empties the element first.\n *\n * The content for an element can be passed in multiple types and\n * combinations, whose behavior is as follows:\n *\n * - String\n *   Normalized into a text node.\n *\n * - Element, TextNode\n *   Passed through.\n *\n * - Array\n *   A one-dimensional array of strings, elements, nodes, or functions (which\n *   return single strings, elements, or nodes).\n *\n * - Function\n *   If the sole argument, is expected to produce a string, element,\n *   node, or array.\n *\n * @borrows dom:insertContent as videojs.insertContent\n * @deprecated Use videojs.dom.insertContent() instead\n */\n['isEl', 'isTextNode', 'createEl', 'hasClass', 'addClass', 'removeClass', 'toggleClass', 'setAttributes', 'getAttributes', 'emptyEl', 'appendContent', 'insertContent'].forEach(function (k) {\n  videojs[k] = function () {\n    log$1.warn('videojs.' + k + '() is deprecated; use videojs.dom.' + k + '() instead');\n    return Dom[k].apply(null, arguments);\n  };\n});\n\n/**\n * A safe getComputedStyle with an IE8 fallback.\n *\n * This is because in Firefox, if the player is loaded in an iframe with `display:none`,\n * then `getComputedStyle` returns `null`, so, we do a null-check to make sure\n * that the player doesn't break in these cases.\n * See https://bugzilla.mozilla.org/show_bug.cgi?id=548397 for more details.\n *\n * @borrows computed-style:computedStyle as videojs.computedStyle\n */\nvideojs.computedStyle = computedStyle;\n\n/**\n * Export the Dom utilities for use in external plugins\n * and Tech's\n */\nvideojs.dom = Dom;\n\n/**\n * Export the Url utilities for use in external plugins\n * and Tech's\n */\nvideojs.url = Url;\n\nmodule.exports = videojs;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-video-player/node_modules/video.js/dist/video.cjs.js\n// module id = sM+K\n// module chunks = 2 3","function clean (s) {\n  return s.replace(/\\n\\r?\\s*/g, '')\n}\n\n\nmodule.exports = function tsml (sa) {\n  var s = ''\n    , i = 0\n\n  for (; i < arguments.length; i++)\n    s += clean(sa[i]) + (arguments[i + 1] || '')\n\n  return s\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/tsml/tsml.js\n// module id = sN1u\n// module chunks = 2 3"],"sourceRoot":""}